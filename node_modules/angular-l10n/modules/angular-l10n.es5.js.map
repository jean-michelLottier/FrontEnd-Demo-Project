{"version":3,"file":"angular-l10n.es5.js","sources":["../../index.ts","../../public_api.ts","../../src/modules/locale-validation.module.ts","../../src/modules/localization.module.ts","../../src/modules/translation.module.ts","../../src/directives/locale-number-validator.directive.ts","../../src/directives/locale-number.directive.ts","../../src/directives/locale-date.directive.ts","../../src/directives/translate.directive.ts","../../src/models/base-directive.ts","../../src/models/bfs.ts","../../src/pipes/locale-number.pipe.ts","../../src/pipes/locale-date.pipe.ts","../../src/pipes/translate.pipe.ts","../../src/decorators/currency.decorator.ts","../../src/decorators/default-locale.decorator.ts","../../src/decorators/language.decorator.ts","../../src/services/collator.ts","../../src/services/locale-validation.ts","../../src/models/validation/decimal-code.ts","../../src/models/validation/number-code.ts","../../src/services/localization.ts","../../src/services/translation.ts","../../src/services/translation.service.ts","../../src/models/types.ts","../../src/services/translation-handler.ts","../../src/services/translation-provider.ts","../../src/models/translation/translation-config-api.ts","../../src/services/intl-api.ts","../../src/models/translation/translation-config.ts","../../src/services/locale.service.ts","../../src/models/localization/default-locale.ts","../../src/services/locale-storage.ts","../../src/models/localization/locale-config-api.ts","../../src/models/localization/locale-config.ts","../../src/models/injector-ref.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {InjectorRef,ILocaleConfig,LocaleConfig,ILocaleService,LocaleService,LocaleStorage,BrowserStorage,ITranslationConfig,TranslationConfig,ITranslationService,TranslationService,TranslationProvider,HttpTranslationProvider,TranslationHandler,DefaultTranslationHandler,Translation,Localization,NumberCode,DecimalCode,ILocaleValidation,LocaleValidation,ICollator,Collator,IntlAPI,Language,DefaultLocale,Currency,TranslatePipe,LocaleDatePipe,LocaleDecimalPipe,LocalePercentPipe,LocaleCurrencyPipe,BaseDirective,TranslateDirective,LocaleDateDirective,LocaleDecimalDirective,LocalePercentDirective,LocaleCurrencyDirective,LocaleNumberValidatorDirective,validateLocaleNumber,TranslationModule,LocalizationModule,LocaleValidationModule} from './public_api';\n","/**\r\n * Angular l10n.\r\n * An Angular library to translate messages, dates and numbers.\r\n * Written by Roberto Simonetti.\r\n * MIT license.\r\n * https://github.com/robisim74/angular-l10n\r\n */\r\n\r\n/**\r\n * Entry point for all public APIs of the package.\r\n */\r\nexport {InjectorRef,ILocaleConfig,LocaleConfig,ILocaleService,LocaleService,LocaleStorage,BrowserStorage,ITranslationConfig,TranslationConfig,ITranslationService,TranslationService,TranslationProvider,HttpTranslationProvider,TranslationHandler,DefaultTranslationHandler,Translation,Localization,NumberCode,DecimalCode,ILocaleValidation,LocaleValidation,ICollator,Collator,IntlAPI,Language,DefaultLocale,Currency,TranslatePipe,LocaleDatePipe,LocaleDecimalPipe,LocalePercentPipe,LocaleCurrencyPipe,BaseDirective,TranslateDirective,LocaleDateDirective,LocaleDecimalDirective,LocalePercentDirective,LocaleCurrencyDirective,LocaleNumberValidatorDirective,validateLocaleNumber,TranslationModule,LocalizationModule,LocaleValidationModule} from './src/angular-l10n';\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\nimport { DecimalCode } from '../models/validation/decimal-code';\r\nimport { LocaleValidation } from '../services/locale-validation';\r\nimport { LocaleNumberValidatorDirective } from '../directives/locale-number-validator.directive';\n/**\n * Provides dependencies & directives for locale validation.\n */\nexport class LocaleValidationModule {\n/**\n * Use in AppModule: new instance of LocaleValidation.\n * @return {?}\n */\npublic static forRoot(): ModuleWithProviders {\r\n        return {\r\n            ngModule: LocaleValidationModule,\r\n            providers: [DecimalCode, LocaleValidation]\r\n        };\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n    declarations: [\r\n        LocaleNumberValidatorDirective\r\n    ],\r\n    exports: [\r\n        LocaleNumberValidatorDirective\r\n    ]\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LocaleValidationModule_tsickle_Closure_declarations() {\n/** @type {?} */\nLocaleValidationModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocaleValidationModule.ctorParameters;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\nimport { InjectorRef } from '../models/injector-ref';\r\nimport { TranslationModule } from './translation.module';\r\nimport { LocaleConfig } from '../models/localization/locale-config';\r\nimport { LocaleService } from '../services/locale.service';\r\nimport { LocaleStorage, BrowserStorage } from '../services/locale-storage';\r\nimport { TranslationConfig } from '../models/translation/translation-config';\r\nimport { TranslationService } from '../services/translation.service';\r\nimport { TranslationProvider, HttpTranslationProvider } from '../services/translation-provider';\r\nimport { TranslationHandler, DefaultTranslationHandler } from '../services/translation-handler';\r\nimport { LocaleDatePipe } from '../pipes/locale-date.pipe';\r\nimport { LocaleDecimalPipe, LocalePercentPipe, LocaleCurrencyPipe } from '../pipes/locale-number.pipe';\r\nimport { LocaleDateDirective } from '../directives/locale-date.directive';\r\nimport {\r\n    LocaleDecimalDirective,\r\n    LocalePercentDirective,\r\n    LocaleCurrencyDirective\r\n} from '../directives/locale-number.directive';\r\nimport { Token } from '../models/types';\n/**\n * Provides dependencies, pipes & directives for translating messages, dates & numbers.\n */\nexport class LocalizationModule {\n/**\n * Use in AppModule: new instances of LocaleService & TranslationService.\n * @param {?=} token\n * @return {?}\n */\npublic static forRoot(token: Token = {}): ModuleWithProviders {\r\n        return {\r\n            ngModule: LocalizationModule,\r\n            providers: [\r\n                InjectorRef,\r\n                LocaleConfig,\r\n                LocaleService,\r\n                {\r\n                    provide: LocaleStorage,\r\n                    useClass: token.localeStorage || BrowserStorage\r\n                },\r\n                TranslationConfig,\r\n                TranslationService,\r\n                {\r\n                    provide: TranslationProvider,\r\n                    useClass: token.translationProvider || HttpTranslationProvider\r\n                },\r\n                {\r\n                    provide: TranslationHandler,\r\n                    useClass: token.translationHandler || DefaultTranslationHandler\r\n                }\r\n            ]\r\n        };\r\n    }\n/**\n * Use in feature modules with lazy loading: new instance of TranslationService.\n * @param {?=} token\n * @return {?}\n */\npublic static forChild(token: Token = {}): ModuleWithProviders {\r\n        return {\r\n            ngModule: LocalizationModule,\r\n            providers: [\r\n                InjectorRef,\r\n                TranslationConfig,\r\n                TranslationService,\r\n                {\r\n                    provide: TranslationProvider,\r\n                    useClass: token.translationProvider || HttpTranslationProvider\r\n                },\r\n                {\r\n                    provide: TranslationHandler,\r\n                    useClass: token.translationHandler || DefaultTranslationHandler\r\n                }\r\n            ]\r\n        };\r\n    }\n/**\n * @param {?} injector\n */\nconstructor(private injector: InjectorRef) {\r\n        // Creates the instance of the InjectorRef, so that module dependencies are available.\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n    declarations: [\r\n        LocaleDatePipe,\r\n        LocaleDecimalPipe,\r\n        LocalePercentPipe,\r\n        LocaleCurrencyPipe,\r\n        LocaleDateDirective,\r\n        LocaleDecimalDirective,\r\n        LocalePercentDirective,\r\n        LocaleCurrencyDirective\r\n    ],\r\n    imports: [\r\n        TranslationModule\r\n    ],\r\n    exports: [\r\n        TranslationModule,\r\n        LocaleDatePipe,\r\n        LocaleDecimalPipe,\r\n        LocalePercentPipe,\r\n        LocaleCurrencyPipe,\r\n        LocaleDateDirective,\r\n        LocaleDecimalDirective,\r\n        LocalePercentDirective,\r\n        LocaleCurrencyDirective\r\n    ]\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: InjectorRef, },\n];\n}\n\nfunction LocalizationModule_tsickle_Closure_declarations() {\n/** @type {?} */\nLocalizationModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocalizationModule.ctorParameters;\n/** @type {?} */\nLocalizationModule.prototype.injector;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\nimport { InjectorRef } from '../models/injector-ref';\r\nimport { LocaleConfig } from '../models/localization/locale-config';\r\nimport { LocaleService } from '../services/locale.service';\r\nimport { LocaleStorage, BrowserStorage } from '../services/locale-storage';\r\nimport { TranslationConfig } from '../models/translation/translation-config';\r\nimport { TranslationService } from '../services/translation.service';\r\nimport { TranslationProvider, HttpTranslationProvider } from '../services/translation-provider';\r\nimport { TranslationHandler, DefaultTranslationHandler } from '../services/translation-handler';\r\nimport { TranslatePipe } from '../pipes/translate.pipe';\r\nimport { TranslateDirective } from '../directives/translate.directive';\r\nimport { Token } from '../models/types';\n/**\n * Provides dependencies, pipes & directives for translating messages.\n */\nexport class TranslationModule {\n/**\n * Use in AppModule: new instances of LocaleService & TranslationService.\n * @param {?=} token\n * @return {?}\n */\npublic static forRoot(token: Token = {}): ModuleWithProviders {\r\n        return {\r\n            ngModule: TranslationModule,\r\n            providers: [\r\n                InjectorRef,\r\n                LocaleConfig,\r\n                LocaleService,\r\n                {\r\n                    provide: LocaleStorage,\r\n                    useClass: token.localeStorage || BrowserStorage\r\n                },\r\n                TranslationConfig,\r\n                TranslationService,\r\n                {\r\n                    provide: TranslationProvider,\r\n                    useClass: token.translationProvider || HttpTranslationProvider\r\n                },\r\n                {\r\n                    provide: TranslationHandler,\r\n                    useClass: token.translationHandler || DefaultTranslationHandler\r\n                }\r\n            ]\r\n        };\r\n    }\n/**\n * Use in feature modules with lazy loading: new instance of TranslationService.\n * @param {?=} token\n * @return {?}\n */\npublic static forChild(token: Token = {}): ModuleWithProviders {\r\n        return {\r\n            ngModule: TranslationModule,\r\n            providers: [\r\n                InjectorRef,\r\n                TranslationConfig,\r\n                TranslationService,\r\n                {\r\n                    provide: TranslationProvider,\r\n                    useClass: token.translationProvider || HttpTranslationProvider\r\n                },\r\n                {\r\n                    provide: TranslationHandler,\r\n                    useClass: token.translationHandler || DefaultTranslationHandler\r\n                }\r\n            ]\r\n        };\r\n    }\n/**\n * @param {?} injector\n */\nconstructor(private injector: InjectorRef) {\r\n        // Creates the instance of the InjectorRef, so that module dependencies are available.\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n    declarations: [\r\n        TranslatePipe,\r\n        TranslateDirective\r\n    ],\r\n    exports: [\r\n        TranslatePipe,\r\n        TranslateDirective\r\n    ]\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: InjectorRef, },\n];\n}\n\nfunction TranslationModule_tsickle_Closure_declarations() {\n/** @type {?} */\nTranslationModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTranslationModule.ctorParameters;\n/** @type {?} */\nTranslationModule.prototype.injector;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, forwardRef, Input, OnInit } from '@angular/core';\nimport { NG_VALIDATORS, FormControl, Validator } from '@angular/forms';\n\nimport { LocaleService } from '../services/locale.service';\nimport { DecimalCode } from '../models/validation/decimal-code';\nimport { InjectorRef } from '../models/injector-ref';\n/**\n * Function that takes a control and returns either null when it’s valid, or an error object if it’s not.\n * @param {?} digits The format of the number\n * @param {?=} MIN_VALUE The minimum value for the number\n * @param {?=} MAX_VALUE The maximum value for the number\n * @return {?} An error object: 'format', 'minValue' or 'maxValue'; null in case the value is valid\n */\nexport function validateLocaleNumber(\n    digits: string,\n    MIN_VALUE: number = Number.MIN_VALUE,\n    MAX_VALUE: number = Number.MAX_VALUE\n): Function {\n\n    const /** @type {?} */ locale: LocaleService = InjectorRef.get(LocaleService);\n    const /** @type {?} */ decimalCode: DecimalCode = InjectorRef.get(DecimalCode);\n\n    let /** @type {?} */ defaultLocale: string;\n    let /** @type {?} */ NUMBER_REGEXP: RegExp;\n\n    return (formControl: FormControl): { [key: string]: any } | null => {\n        if (formControl.value == null || formControl.value == \"\") return null;\n\n        if (defaultLocale != locale.getDefaultLocale()) {\n            NUMBER_REGEXP = decimalCode.getRegExp(digits);\n            defaultLocale = locale.getDefaultLocale();\n        }\n\n        if (NUMBER_REGEXP.test(formControl.value)) {\n            const /** @type {?} */ parsedValue: number = decimalCode.parse(formControl.value);\n            if (parsedValue != null && parsedValue < MIN_VALUE) {\n                return {\n                    minValue: {\n                        valid: false\n                    }\n                };\n            } else if (parsedValue != null && parsedValue > MAX_VALUE) {\n                return {\n                    maxValue: {\n                        valid: false\n                    }\n                };\n            }\n            return null; // The number is valid.\n        } else {\n            return {\n                format: {\n                    valid: false\n                }\n            };\n        }\n    };\n\n}\nexport class LocaleNumberValidatorDirective implements Validator, OnInit {\n/**\n * Format: {minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}.\n * @param {?} digits\n * @return {?}\n */\nset l10nValidateNumber(digits: string) {\n        this.digits = digits;\n    }\n/**\n * @param {?} digits\n * @return {?}\n */\nset validateLocaleNumber(digits: string) {\n        this.digits = digits;\n    }\npublic minValue: number;\npublic maxValue: number;\nprivate digits: string;\nprivate readonly MIN_VALUE: number = Number.MIN_VALUE;\nprivate readonly MAX_VALUE: number = Number.MAX_VALUE;\nprivate validator: Function;\n/**\n * @return {?}\n */\npublic ngOnInit(): void {\n        this.validator = validateLocaleNumber(\n            this.digits,\n            this.minValue || this.MIN_VALUE,\n            this.maxValue || this.MAX_VALUE\n        );\n    }\n/**\n * @param {?} formControl\n * @return {?}\n */\npublic validate(formControl: FormControl): Function {\n        return this.validator(formControl);\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[l10nValidateNumber][ngModel],[l10nValidateNumber][formControl], \\\n        [validateLocaleNumber][ngModel],[validateLocaleNumber][formControl]',\n    providers: [\n        { provide: NG_VALIDATORS, useExisting: forwardRef(() => LocaleNumberValidatorDirective), multi: true }\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'l10nValidateNumber': [{ type: Input },],\n'validateLocaleNumber': [{ type: Input },],\n'minValue': [{ type: Input },],\n'maxValue': [{ type: Input },],\n};\n}\n\nfunction LocaleNumberValidatorDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nLocaleNumberValidatorDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocaleNumberValidatorDirective.ctorParameters;\n/** @type {?} */\nLocaleNumberValidatorDirective.propDecorators;\n/** @type {?} */\nLocaleNumberValidatorDirective.prototype.minValue;\n/** @type {?} */\nLocaleNumberValidatorDirective.prototype.maxValue;\n/** @type {?} */\nLocaleNumberValidatorDirective.prototype.digits;\n/** @type {?} */\nLocaleNumberValidatorDirective.prototype.MIN_VALUE;\n/** @type {?} */\nLocaleNumberValidatorDirective.prototype.MAX_VALUE;\n/** @type {?} */\nLocaleNumberValidatorDirective.prototype.validator;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\r\n\r\nimport { LocaleService } from '../services/locale.service';\r\nimport { BaseDirective } from '../models/base-directive';\r\nimport { LocaleDecimalPipe, LocalePercentPipe, LocaleCurrencyPipe } from '../pipes/locale-number.pipe';\nexport class LocaleDecimalDirective extends BaseDirective {\n/**\n * @param {?} digits\n * @return {?}\n */\nset l10nDecimal(digits: string) {\r\n        this.digits = digits;\r\n    }\n/**\n * @param {?} digits\n * @return {?}\n */\nset localeDecimal(digits: string) {\r\n        this.digits = digits;\r\n    }\nprivate digits: string;\nprivate localeDecimalPipe: LocaleDecimalPipe = new LocaleDecimalPipe();\n/**\n * @param {?} locale\n * @param {?} el\n * @param {?} renderer\n */\nconstructor(protected locale: LocaleService, protected el: ElementRef, protected renderer: Renderer2) {\r\n        super(el, renderer);\r\n    }\n/**\n * @return {?}\n */\nprotected setup(): void {\r\n        this.replace();\r\n        this.subscriptions.push(this.locale.defaultLocaleChanged.subscribe(\r\n            () => { this.replace(); }\r\n        ));\r\n    }\n/**\n * @return {?}\n */\nprotected replace(): void {\r\n        this.replaceText();\r\n        this.replaceAttributes();\r\n    }\n/**\n * @return {?}\n */\nprotected replaceText(): void {\r\n        if (!!this.key) {\r\n            this.setText(this.getValues(this.key));\r\n        }\r\n    }\n/**\n * @return {?}\n */\nprotected replaceAttributes(): void {\r\n        if (this.attributes.length > 0) {\r\n            this.setAttributes(this.getAttributesData());\r\n        }\r\n    }\n/**\n * @param {?} keys\n * @return {?}\n */\nprotected getValues(keys: string | string[]): string | any {\r\n        return this.localeDecimalPipe.transform(\r\n            keys,\r\n            this.locale.getDefaultLocale(),\r\n            this.digits\r\n        );\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n    selector: '[l10nDecimal],[localeDecimal]'\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: LocaleService, },\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'l10nDecimal': [{ type: Input },],\n'localeDecimal': [{ type: Input },],\n};\n}\n\nfunction LocaleDecimalDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nLocaleDecimalDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocaleDecimalDirective.ctorParameters;\n/** @type {?} */\nLocaleDecimalDirective.propDecorators;\n/** @type {?} */\nLocaleDecimalDirective.prototype.digits;\n/** @type {?} */\nLocaleDecimalDirective.prototype.localeDecimalPipe;\n/** @type {?} */\nLocaleDecimalDirective.prototype.locale;\n/** @type {?} */\nLocaleDecimalDirective.prototype.el;\n/** @type {?} */\nLocaleDecimalDirective.prototype.renderer;\n}\n\nexport class LocalePercentDirective extends BaseDirective {\n/**\n * @param {?} digits\n * @return {?}\n */\nset l10nPercent(digits: string) {\r\n        this.digits = digits;\r\n    }\n/**\n * @param {?} digits\n * @return {?}\n */\nset localePercent(digits: string) {\r\n        this.digits = digits;\r\n    }\nprivate digits: string;\nprivate localePercentPipe: LocalePercentPipe = new LocalePercentPipe();\n/**\n * @param {?} locale\n * @param {?} el\n * @param {?} renderer\n */\nconstructor(protected locale: LocaleService, protected el: ElementRef, protected renderer: Renderer2) {\r\n        super(el, renderer);\r\n    }\n/**\n * @return {?}\n */\nprotected setup(): void {\r\n        this.replace();\r\n        this.subscriptions.push(this.locale.defaultLocaleChanged.subscribe(\r\n            () => { this.replace(); }\r\n        ));\r\n    }\n/**\n * @return {?}\n */\nprotected replace(): void {\r\n        this.replaceText();\r\n        this.replaceAttributes();\r\n    }\n/**\n * @return {?}\n */\nprotected replaceText(): void {\r\n        if (!!this.key) {\r\n            this.setText(this.getValues(this.key));\r\n        }\r\n    }\n/**\n * @return {?}\n */\nprotected replaceAttributes(): void {\r\n        if (this.attributes.length > 0) {\r\n            this.setAttributes(this.getAttributesData());\r\n        }\r\n    }\n/**\n * @param {?} keys\n * @return {?}\n */\nprotected getValues(keys: string | string[]): string | any {\r\n        return this.localePercentPipe.transform(\r\n            keys,\r\n            this.locale.getDefaultLocale(),\r\n            this.digits\r\n        );\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n    selector: '[l10nPercent],[localePercent]'\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: LocaleService, },\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'l10nPercent': [{ type: Input },],\n'localePercent': [{ type: Input },],\n};\n}\n\nfunction LocalePercentDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nLocalePercentDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocalePercentDirective.ctorParameters;\n/** @type {?} */\nLocalePercentDirective.propDecorators;\n/** @type {?} */\nLocalePercentDirective.prototype.digits;\n/** @type {?} */\nLocalePercentDirective.prototype.localePercentPipe;\n/** @type {?} */\nLocalePercentDirective.prototype.locale;\n/** @type {?} */\nLocalePercentDirective.prototype.el;\n/** @type {?} */\nLocalePercentDirective.prototype.renderer;\n}\n\nexport class LocaleCurrencyDirective extends BaseDirective {\n/**\n * @param {?} digits\n * @return {?}\n */\nset l10nCurrency(digits: string) {\r\n        this.digits = digits;\r\n    }\n/**\n * @param {?} digits\n * @return {?}\n */\nset localeCurrency(digits: string) {\r\n        this.digits = digits;\r\n    }\npublic symbol: boolean;\nprivate digits: string;\nprivate localeCurrencyPipe: LocaleCurrencyPipe = new LocaleCurrencyPipe();\n/**\n * @param {?} locale\n * @param {?} el\n * @param {?} renderer\n */\nconstructor(protected locale: LocaleService, protected el: ElementRef, protected renderer: Renderer2) {\r\n        super(el, renderer);\r\n    }\n/**\n * @return {?}\n */\nprotected setup(): void {\r\n        this.replace();\r\n        this.subscriptions.push(this.locale.defaultLocaleChanged.subscribe(\r\n            () => { this.replace(); }\r\n        ));\r\n        this.subscriptions.push(this.locale.currencyCodeChanged.subscribe(\r\n            () => { this.replace(); }\r\n        ));\r\n    }\n/**\n * @return {?}\n */\nprotected replace(): void {\r\n        this.replaceText();\r\n        this.replaceAttributes();\r\n    }\n/**\n * @return {?}\n */\nprotected replaceText(): void {\r\n        if (!!this.key) {\r\n            this.setText(this.getValues(this.key));\r\n        }\r\n    }\n/**\n * @return {?}\n */\nprotected replaceAttributes(): void {\r\n        if (this.attributes.length > 0) {\r\n            this.setAttributes(this.getAttributesData());\r\n        }\r\n    }\n/**\n * @param {?} keys\n * @return {?}\n */\nprotected getValues(keys: string | string[]): string | any {\r\n        return this.localeCurrencyPipe.transform(\r\n            keys,\r\n            this.locale.getDefaultLocale(),\r\n            this.locale.getCurrentCurrency(),\r\n            this.symbol,\r\n            this.digits\r\n        );\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n    selector: '[l10nCurrency],[localeCurrency]'\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: LocaleService, },\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'l10nCurrency': [{ type: Input },],\n'localeCurrency': [{ type: Input },],\n'symbol': [{ type: Input },],\n};\n}\n\nfunction LocaleCurrencyDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nLocaleCurrencyDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocaleCurrencyDirective.ctorParameters;\n/** @type {?} */\nLocaleCurrencyDirective.propDecorators;\n/** @type {?} */\nLocaleCurrencyDirective.prototype.symbol;\n/** @type {?} */\nLocaleCurrencyDirective.prototype.digits;\n/** @type {?} */\nLocaleCurrencyDirective.prototype.localeCurrencyPipe;\n/** @type {?} */\nLocaleCurrencyDirective.prototype.locale;\n/** @type {?} */\nLocaleCurrencyDirective.prototype.el;\n/** @type {?} */\nLocaleCurrencyDirective.prototype.renderer;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\r\n\r\nimport { LocaleService } from '../services/locale.service';\r\nimport { BaseDirective } from '../models/base-directive';\r\nimport { LocaleDatePipe } from '../pipes/locale-date.pipe';\nexport class LocaleDateDirective extends BaseDirective {\n/**\n * @param {?} pattern\n * @return {?}\n */\nset l10nDate(pattern: string) {\r\n        this.pattern = pattern;\r\n    }\n/**\n * @param {?} pattern\n * @return {?}\n */\nset localeDate(pattern: string) {\r\n        this.pattern = pattern;\r\n    }\nprivate pattern: string;\nprivate defaultPattern: string = 'mediumDate';\nprivate localeDatePipe: LocaleDatePipe = new LocaleDatePipe();\n/**\n * @param {?} locale\n * @param {?} el\n * @param {?} renderer\n */\nconstructor(protected locale: LocaleService, protected el: ElementRef, protected renderer: Renderer2) {\r\n        super(el, renderer);\r\n    }\n/**\n * @return {?}\n */\nprotected setup(): void {\r\n        this.replace();\r\n        this.subscriptions.push(this.locale.defaultLocaleChanged.subscribe(\r\n            () => { this.replace(); }\r\n        ));\r\n    }\n/**\n * @return {?}\n */\nprotected replace(): void {\r\n        this.replaceText();\r\n        this.replaceAttributes();\r\n    }\n/**\n * @return {?}\n */\nprotected replaceText(): void {\r\n        if (!!this.key) {\r\n            this.setText(this.getValues(this.key));\r\n        }\r\n    }\n/**\n * @return {?}\n */\nprotected replaceAttributes(): void {\r\n        if (this.attributes.length > 0) {\r\n            this.setAttributes(this.getAttributesData());\r\n        }\r\n    }\n/**\n * @param {?} keys\n * @return {?}\n */\nprotected getValues(keys: string | string[]): string | any {\r\n        return this.localeDatePipe.transform(\r\n            keys,\r\n            this.locale.getDefaultLocale(),\r\n            this.pattern || this.defaultPattern\r\n        );\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n    selector: '[l10nDate],[localeDate]'\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: LocaleService, },\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'l10nDate': [{ type: Input },],\n'localeDate': [{ type: Input },],\n};\n}\n\nfunction LocaleDateDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nLocaleDateDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocaleDateDirective.ctorParameters;\n/** @type {?} */\nLocaleDateDirective.propDecorators;\n/** @type {?} */\nLocaleDateDirective.prototype.pattern;\n/** @type {?} */\nLocaleDateDirective.prototype.defaultPattern;\n/** @type {?} */\nLocaleDateDirective.prototype.localeDatePipe;\n/** @type {?} */\nLocaleDateDirective.prototype.locale;\n/** @type {?} */\nLocaleDateDirective.prototype.el;\n/** @type {?} */\nLocaleDateDirective.prototype.renderer;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\r\n\r\nimport { TranslationService } from '../services/translation.service';\r\nimport { BaseDirective } from '../models/base-directive';\nexport class TranslateDirective extends BaseDirective {\n/**\n * @param {?} params\n * @return {?}\n */\nset l10nTranslate(params: string) {\r\n        this.params = params;\r\n    }\n/**\n * @param {?} params\n * @return {?}\n */\nset translate(params: string) {\r\n        this.params = params;\r\n    }\nprivate params: string;\n/**\n * @param {?} translation\n * @param {?} el\n * @param {?} renderer\n */\nconstructor(protected translation: TranslationService, protected el: ElementRef, protected renderer: Renderer2) {\r\n        super(el, renderer);\r\n    }\n/**\n * @return {?}\n */\nprotected setup(): void {\r\n        this.replace();\r\n        this.subscriptions.push(this.translation.translationChanged.subscribe(\r\n            () => { this.replace(); }\r\n        ));\r\n    }\n/**\n * @return {?}\n */\nprotected replace(): void {\r\n        this.replaceText();\r\n        this.replaceAttributes();\r\n    }\n/**\n * @return {?}\n */\nprotected replaceText(): void {\r\n        if (!!this.key) {\r\n            this.setText(this.getValues(this.key));\r\n        }\r\n    }\n/**\n * @return {?}\n */\nprotected replaceAttributes(): void {\r\n        if (this.attributes.length > 0) {\r\n            const /** @type {?} */ keys: string[] = this.getAttributesKeys();\r\n            this.setAttributes(this.getValues(keys));\r\n        }\r\n    }\n/**\n * @param {?} keys\n * @return {?}\n */\nprotected getValues(keys: string | string[]): string | any {\r\n        return this.translation.translate(keys, this.params);\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n    selector: '[l10nTranslate],[translate]'\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TranslationService, },\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'l10nTranslate': [{ type: Input },],\n'translate': [{ type: Input },],\n};\n}\n\nfunction TranslateDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nTranslateDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTranslateDirective.ctorParameters;\n/** @type {?} */\nTranslateDirective.propDecorators;\n/** @type {?} */\nTranslateDirective.prototype.params;\n/** @type {?} */\nTranslateDirective.prototype.translation;\n/** @type {?} */\nTranslateDirective.prototype.el;\n/** @type {?} */\nTranslateDirective.prototype.renderer;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n    ElementRef,\n    Input,\n    Renderer2,\n    AfterViewInit,\n    OnChanges,\n    SimpleChanges,\n    OnDestroy\n} from '@angular/core';\nimport { ISubscription } from 'rxjs/Subscription';\n\nimport { BFS } from './bfs';\n/**\n * @abstract\n */\nexport abstract class BaseDirective implements AfterViewInit, OnChanges, OnDestroy {\npublic valueAttribute: string;\npublic innerHTMLProperty: string;\n\n    protected key: string;\n    protected attributes: any[] = [];\n\n    protected subscriptions: ISubscription[] = [];\nprivate element: any;\nprivate renderNode: any;\nprivate nodeValue: string;\nprivate textObserver: MutationObserver;\nprivate readonly TEXT_MUTATION_CONFIG: any = { subtree: true, characterData: true };\nprivate readonly SELECTOR: RegExp = /^l10n-/;\n/**\n * @param {?} el\n * @param {?} renderer\n */\nconstructor(protected el: ElementRef, protected renderer: Renderer2) { }\n/**\n * @return {?}\n */\npublic ngAfterViewInit(): void {\n        if (this.el && this.el.nativeElement) {\n            this.element = this.el.nativeElement;\n            this.renderNode = BFS.getTargetNode(this.element);\n            this.getKey();\n            this.getAttributes();\n            this.addTextListener();\n            this.setup();\n        }\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\npublic ngOnChanges(changes: SimpleChanges): void {\n        if (!!this.key) {\n            if (this.nodeValue == null || this.nodeValue == \"\") {\n                if (!!this.valueAttribute) {\n                    this.key = this.valueAttribute;\n                } else if (!!this.innerHTMLProperty) {\n                    this.key = this.innerHTMLProperty;\n                }\n            }\n            this.replaceText();\n        }\n        if (this.attributes.length > 0) {\n            this.replaceAttributes();\n        }\n    }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n        this.removeTextListener();\n        this.cancelSubscriptions();\n    }\n/**\n * @abstract\n * @return {?}\n */\nsetup() {}\n/**\n * @abstract\n * @return {?}\n */\nreplace() {}\n/**\n * @abstract\n * @return {?}\n */\nreplaceText() {}\n/**\n * @abstract\n * @return {?}\n */\nreplaceAttributes() {}\n/**\n * @return {?}\n */\nprotected getAttributesData(): any {\n        const /** @type {?} */ keys: string[] = this.getAttributesKeys();\n        const /** @type {?} */ data: any = {};\n        for (const /** @type {?} */ key of keys) {\n            data[key] = this.getValues(key);\n        }\n        return data;\n    }\n/**\n * @return {?}\n */\nprotected getAttributesKeys(): string[] {\n        return this.attributes.map((attr: any) => attr.key);\n    }\n/**\n * @abstract\n * @param {?} keys\n * @return {?}\n */\ngetValues(keys: string | string[]) {}\n/**\n * @param {?} value\n * @return {?}\n */\nprotected setText(value: string): void {\n        if (!!value) {\n            if (!!this.nodeValue && !!this.key) {\n                this.removeTextListener();\n                this.renderer.setValue(this.renderNode, this.nodeValue.replace(this.key, value));\n                this.addTextListener();\n            } else if (!!this.valueAttribute) {\n                this.renderer.setAttribute(this.element, \"value\", value);\n            } else if (!!this.innerHTMLProperty) {\n                this.renderer.setProperty(this.element, \"innerHTML\", value);\n            }\n        }\n    }\n/**\n * @param {?} data\n * @return {?}\n */\nprotected setAttributes(data: any): void {\n        for (const /** @type {?} */ attr of this.attributes) {\n            this.renderer.setAttribute(this.element, attr.name, data[attr.key]);\n        }\n    }\n/**\n * @return {?}\n */\nprivate addTextListener(): void {\n        if (typeof MutationObserver !== \"undefined\") {\n            this.textObserver = new MutationObserver((mutations: MutationRecord[]) => {\n                this.renderNode = BFS.getTargetNode(this.element);\n                this.getKey();\n                this.replaceText();\n            });\n            this.textObserver.observe(this.renderNode, this.TEXT_MUTATION_CONFIG);\n        }\n    }\n/**\n * @return {?}\n */\nprivate removeTextListener(): void {\n        if (typeof this.textObserver !== \"undefined\") {\n            this.textObserver.disconnect();\n        }\n    }\n/**\n * @return {?}\n */\nprivate getText(): string {\n        this.nodeValue = this.renderNode != null ? /** @type {?} */(( this.renderNode.nodeValue as string)) : \"\";\n        return !!this.nodeValue ? this.nodeValue.trim() : \"\";\n    }\n/**\n * @return {?}\n */\nprivate getKey(): void {\n        if (this.element.childNodes.length > 0) {\n            this.key = this.getText();\n        } else if (!!this.valueAttribute) {\n            this.key = this.valueAttribute;\n        } else if (!!this.innerHTMLProperty) {\n            this.key = this.innerHTMLProperty;\n        }\n    }\n/**\n * @return {?}\n */\nprivate getAttributes(): void {\n        if (this.element.attributes) {\n            for (const /** @type {?} */ attr of this.element.attributes) {\n                if (this.SELECTOR.test(attr.name)) {\n                    const /** @type {?} */ name: string = attr.name.substr(5);\n                    for (const /** @type {?} */ targetAttr of this.element.attributes) {\n                        if (new RegExp(\"^\" + name + \"$\").test(targetAttr.name)) {\n                            this.attributes.push({ name: name, key: targetAttr.value });\n                        }\n                    }\n                }\n            }\n        }\n    }\n/**\n * @return {?}\n */\nprivate cancelSubscriptions(): void {\n        this.subscriptions.forEach((subscription: ISubscription) => {\n            if (typeof subscription !== \"undefined\") {\n                subscription.unsubscribe();\n            }\n        });\n    }\n\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'valueAttribute': [{ type: Input, args: ['value', ] },],\n'innerHTMLProperty': [{ type: Input, args: ['innerHTML', ] },],\n};\n}\n\nfunction BaseDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nBaseDirective.propDecorators;\n/** @type {?} */\nBaseDirective.prototype.valueAttribute;\n/** @type {?} */\nBaseDirective.prototype.innerHTMLProperty;\n/** @type {?} */\nBaseDirective.prototype.key;\n/** @type {?} */\nBaseDirective.prototype.attributes;\n/** @type {?} */\nBaseDirective.prototype.subscriptions;\n/** @type {?} */\nBaseDirective.prototype.element;\n/** @type {?} */\nBaseDirective.prototype.renderNode;\n/** @type {?} */\nBaseDirective.prototype.nodeValue;\n/** @type {?} */\nBaseDirective.prototype.textObserver;\n/** @type {?} */\nBaseDirective.prototype.TEXT_MUTATION_CONFIG;\n/** @type {?} */\nBaseDirective.prototype.SELECTOR;\n/** @type {?} */\nBaseDirective.prototype.el;\n/** @type {?} */\nBaseDirective.prototype.renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * Breadth First Search (BFS) algorithm for traversing & searching tree data structure of DOM\n * explores the neighbor nodes first, before moving to the next level neighbors.\n * Time complexity: between O(1) and O(|V|^2).\n */\nexport class BFS {\nprivate static readonly SELECTOR: RegExp = /^l10n|translate|locale/;\nprivate static readonly MAX_DEPTH: number = 10;\n/**\n * Target node is a non empty text node.\n * @param {?} rootNode\n * @return {?}\n */\npublic static getTargetNode(rootNode: any): any {\n        return this.walk(rootNode);\n    }\n/**\n * @param {?} rootNode\n * @return {?}\n */\nprivate static walk(rootNode: any): any {\n        const /** @type {?} */ queue: any[] = [];\n\n        let /** @type {?} */ iNode: any;\n        let /** @type {?} */ depth: number = 0;\n        let /** @type {?} */ nodeToDepthIncrease: number = 1;\n\n        queue.push(rootNode);\n        while (queue.length > 0 && depth <= this.MAX_DEPTH) {\n            iNode = queue.shift();\n            if (this.isTargetNode(iNode)) {\n                return iNode;\n            }\n            if (depth < this.MAX_DEPTH && iNode.childNodes != null) {\n                for (const /** @type {?} */ child of iNode.childNodes) {\n                    if (this.isValidNode(child)) {\n                        queue.push(child);\n                    }\n                }\n            }\n            if (--nodeToDepthIncrease == 0) {\n                depth++;\n                nodeToDepthIncrease = queue.length;\n            }\n        }\n        return rootNode;\n    }\n/**\n * @param {?} node\n * @return {?}\n */\nprivate static isTargetNode(node: any): boolean {\n        return typeof node !== \"undefined\" &&\n            node.nodeType == 3 &&\n            node.nodeValue != null &&\n            node.nodeValue.trim() != \"\";\n    }\n/**\n * A valid node is not marked for translation.\n * @param {?} node\n * @return {?}\n */\nprivate static isValidNode(node: any): boolean {\n        if (typeof node !== \"undefined\" && node.nodeType == 1 && node.attributes) {\n            for (const /** @type {?} */ attr of node.attributes) {\n                if (this.SELECTOR.test(attr.name)) return false;\n            }\n        }\n        return true;\n    }\n\n}\n\nfunction BFS_tsickle_Closure_declarations() {\n/** @type {?} */\nBFS.SELECTOR;\n/** @type {?} */\nBFS.MAX_DEPTH;\n}\n\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DecimalPipe, PercentPipe, CurrencyPipe } from '@angular/common';\r\n\r\nimport { IntlAPI } from '../services/intl-api';\nexport class LocaleDecimalPipe implements PipeTransform {\n/**\n * @param {?} value\n * @param {?} defaultLocale\n * @param {?=} digits\n * @return {?}\n */\npublic transform(value: any, defaultLocale: string, digits?: string): string | null {\r\n        if (typeof defaultLocale === \"undefined\") return null;\r\n\r\n        if (IntlAPI.hasNumberFormat()) {\r\n            const /** @type {?} */ localeDecimal: DecimalPipe = new DecimalPipe(defaultLocale);\r\n            return localeDecimal.transform(value, digits);\r\n        }\r\n        // Returns the number without localization.\r\n        return value;\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\r\n    name: 'localeDecimal',\r\n    pure: true\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LocaleDecimalPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nLocaleDecimalPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocaleDecimalPipe.ctorParameters;\n}\n\nexport class LocalePercentPipe implements PipeTransform {\n/**\n * @param {?} value\n * @param {?} defaultLocale\n * @param {?=} digits\n * @return {?}\n */\npublic transform(value: any, defaultLocale: string, digits?: string): string | null {\r\n        if (typeof defaultLocale === \"undefined\") return null;\r\n\r\n        if (IntlAPI.hasNumberFormat()) {\r\n            const /** @type {?} */ localePercent: PercentPipe = new PercentPipe(defaultLocale);\r\n            return localePercent.transform(value, digits);\r\n        }\r\n        // Returns the number without localization.\r\n        return value;\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\r\n    name: 'localePercent',\r\n    pure: true\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LocalePercentPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nLocalePercentPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocalePercentPipe.ctorParameters;\n}\n\nexport class LocaleCurrencyPipe implements PipeTransform {\n/**\n * @param {?} value\n * @param {?} defaultLocale\n * @param {?} currency\n * @param {?=} symbolDisplay\n * @param {?=} digits\n * @return {?}\n */\npublic transform(\r\n        value: any,\r\n        defaultLocale: string,\r\n        currency: string,\r\n        symbolDisplay: boolean = false,\r\n        digits?: string\r\n    ): string | null {\r\n        if (typeof defaultLocale === \"undefined\" || typeof currency === \"undefined\") return null;\r\n\r\n        if (IntlAPI.hasNumberFormat()) {\r\n            const /** @type {?} */ localeCurrency: CurrencyPipe = new CurrencyPipe(defaultLocale);\r\n            return localeCurrency.transform(value, currency, symbolDisplay, digits);\r\n        }\r\n        // Returns the number & currency without localization.\r\n        return value + \" \" + currency;\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\r\n    name: 'localeCurrency',\r\n    pure: true\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LocaleCurrencyPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nLocaleCurrencyPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocaleCurrencyPipe.ctorParameters;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\n\r\nimport { IntlAPI } from '../services/intl-api';\nexport class LocaleDatePipe implements PipeTransform {\n/**\n * @param {?} value\n * @param {?} defaultLocale\n * @param {?=} pattern\n * @return {?}\n */\npublic transform(value: any, defaultLocale: string, pattern: string = 'mediumDate'): string | null {\r\n        if (typeof defaultLocale === \"undefined\") return null;\r\n\r\n        if (IntlAPI.hasDateTimeFormat()) {\r\n            const /** @type {?} */ localeDate: DatePipe = new DatePipe(defaultLocale);\r\n            return localeDate.transform(value, pattern);\r\n        }\r\n        // Returns the date without localization.\r\n        return value;\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\r\n    name: 'localeDate',\r\n    pure: true\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LocaleDatePipe_tsickle_Closure_declarations() {\n/** @type {?} */\nLocaleDatePipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocaleDatePipe.ctorParameters;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { TranslationService } from '../services/translation.service';\nexport class TranslatePipe implements PipeTransform {\n/**\n * @param {?} translation\n */\nconstructor(protected translation: TranslationService) { }\n/**\n * @param {?} key\n * @param {?} lang\n * @param {?=} args\n * @return {?}\n */\npublic transform(key: string, lang: string, args?: any): string {\r\n        return this.translation.translate(key, args, lang);\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\r\n    name: 'translate',\r\n    pure: true\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TranslationService, },\n];\n}\n\nfunction TranslatePipe_tsickle_Closure_declarations() {\n/** @type {?} */\nTranslatePipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTranslatePipe.ctorParameters;\n/** @type {?} */\nTranslatePipe.prototype.translation;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ISubscription } from 'rxjs/Subscription';\r\n\r\nimport { LocaleService } from '../services/locale.service';\r\nimport { InjectorRef } from '../models/injector-ref';\r\nimport { PropertyDecorator } from '../models/types';\n/**\n * Property decorator for components to provide the parameter to the localeCurrency pipe.\n * @return {?}\n */\nexport function Currency(): PropertyDecorator {\n/**\n * @param {?} target\n * @param {?=} propertyKey\n * @return {?}\n */\nfunction DecoratorFactory(target: any, propertyKey?: string): void {\r\n        let /** @type {?} */ subscription: ISubscription;\r\n\r\n        const /** @type {?} */ targetNgOnInit: Function = target.ngOnInit;\n/**\n * @this {?}\n * @return {?}\n */\nfunction ngOnInit(this: any): void {\r\n            const /** @type {?} */ locale: LocaleService = InjectorRef.get(LocaleService);\r\n\r\n            if (typeof propertyKey !== \"undefined\") {\r\n                this[propertyKey] = locale.getCurrentCurrency();\r\n                // When the currency changes, subscribes to the event & updates currency property.\r\n                subscription = locale.currencyCodeChanged.subscribe(\r\n                    (currency: string) => {\r\n                        this[propertyKey] = currency;\r\n                    });\r\n            }\r\n\r\n            if (targetNgOnInit) {\r\n                targetNgOnInit.apply(this);\r\n            }\r\n        }\r\n        target.ngOnInit = ngOnInit;\r\n\r\n        const /** @type {?} */ targetNgOnDestroy: Function = target.ngOnDestroy;\n/**\n * @this {?}\n * @return {?}\n */\nfunction ngOnDestroy(this: any): void {\r\n            if (typeof subscription !== \"undefined\") {\r\n                subscription.unsubscribe();\r\n            }\r\n\r\n            if (targetNgOnDestroy) {\r\n                targetNgOnDestroy.apply(this);\r\n            }\r\n        }\r\n        target.ngOnDestroy = ngOnDestroy;\r\n\r\n        if (typeof propertyKey !== \"undefined\") {\r\n            Object.defineProperty(target, propertyKey, {\r\n                writable: true,\r\n                value: undefined\r\n            });\r\n        }\r\n    }\r\n\r\n    return DecoratorFactory;\r\n\r\n}\r\n","import { ISubscription } from 'rxjs/Subscription';\r\n\r\nimport { LocaleService } from '../services/locale.service';\r\nimport { InjectorRef } from '../models/injector-ref';\r\nimport { PropertyDecorator } from '../models/types';\n/**\n * Property decorator for components to provide the parameter\rto localeDecimal, localePercent & localeCurrency pipes.\n * @return {?}\n */\nexport function DefaultLocale(): PropertyDecorator {\n/**\n * @param {?} target\n * @param {?=} propertyKey\n * @return {?}\n */\nfunction DecoratorFactory(target: any, propertyKey?: string): void {\r\n        let /** @type {?} */ subscription: ISubscription;\r\n\r\n        const /** @type {?} */ targetNgOnInit: Function = target.ngOnInit;\n/**\n * @this {?}\n * @return {?}\n */\nfunction ngOnInit(this: any): void {\r\n            const /** @type {?} */ locale: LocaleService = InjectorRef.get(LocaleService);\r\n\r\n            if (typeof propertyKey !== \"undefined\") {\r\n                this[propertyKey] = locale.getDefaultLocale();\r\n                // When the default locale changes, subscribes to the event & updates defaultLocale property.\r\n                subscription = locale.defaultLocaleChanged.subscribe(\r\n                    (defaultLocale: string) => {\r\n                        this[propertyKey] = defaultLocale;\r\n                    });\r\n            }\r\n\r\n            if (targetNgOnInit) {\r\n                targetNgOnInit.apply(this);\r\n            }\r\n        }\r\n        target.ngOnInit = ngOnInit;\r\n\r\n        const /** @type {?} */ targetNgOnDestroy: Function = target.ngOnDestroy;\n/**\n * @this {?}\n * @return {?}\n */\nfunction ngOnDestroy(this: any): void {\r\n            if (typeof subscription !== \"undefined\") {\r\n                subscription.unsubscribe();\r\n            }\r\n\r\n            if (targetNgOnDestroy) {\r\n                targetNgOnDestroy.apply(this);\r\n            }\r\n        }\r\n        target.ngOnDestroy = ngOnDestroy;\r\n\r\n        if (typeof propertyKey !== \"undefined\") {\r\n            Object.defineProperty(target, propertyKey, {\r\n                writable: true,\r\n                value: undefined\r\n            });\r\n        }\r\n    }\r\n\r\n    return DecoratorFactory;\r\n\r\n}\r\n","import { ISubscription } from 'rxjs/Subscription';\r\n\r\nimport { TranslationService } from '../services/translation.service';\r\nimport { InjectorRef } from '../models/injector-ref';\r\nimport { PropertyDecorator } from '../models/types';\n/**\n * Property decorator for components to provide the parameter to the translate pipe.\n * @return {?}\n */\nexport function Language(): PropertyDecorator {\n/**\n * @param {?} target\n * @param {?=} propertyKey\n * @return {?}\n */\nfunction DecoratorFactory(target: any, propertyKey?: string): void {\r\n        let /** @type {?} */ subscription: ISubscription;\r\n\r\n        const /** @type {?} */ targetNgOnInit: Function = target.ngOnInit;\n/**\n * @this {?}\n * @return {?}\n */\nfunction ngOnInit(this: any): void {\r\n            const /** @type {?} */ translation: TranslationService = InjectorRef.get(TranslationService);\r\n\r\n            if (typeof propertyKey !== \"undefined\") {\r\n                this[propertyKey] = translation.getLanguage();\r\n                // When the language changes, subscribes to the event & updates language property.\r\n                subscription = translation.translationChanged.subscribe(\r\n                    (language: string) => {\r\n                        this[propertyKey] = language;\r\n                    });\r\n            }\r\n\r\n            if (targetNgOnInit) {\r\n                targetNgOnInit.apply(this);\r\n            }\r\n        }\r\n        target.ngOnInit = ngOnInit;\r\n\r\n        const /** @type {?} */ targetNgOnDestroy: Function = target.ngOnDestroy;\n/**\n * @this {?}\n * @return {?}\n */\nfunction ngOnDestroy(this: any): void {\r\n            if (typeof subscription !== \"undefined\") {\r\n                subscription.unsubscribe();\r\n            }\r\n\r\n            if (targetNgOnDestroy) {\r\n                targetNgOnDestroy.apply(this);\r\n            }\r\n        }\r\n        target.ngOnDestroy = ngOnDestroy;\r\n\r\n        if (typeof propertyKey !== \"undefined\") {\r\n            Object.defineProperty(target, propertyKey, {\r\n                writable: true,\r\n                value: undefined\r\n            });\r\n        }\r\n    }\r\n\r\n    return DecoratorFactory;\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observer } from 'rxjs/Observer';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport { LocaleService } from './locale.service';\r\nimport { TranslationService } from './translation.service';\r\nimport { IntlAPI } from './intl-api';\r\n\r\n/**\r\n * Intl.Collator APIs.\r\n */\r\nexport interface ICollator {\r\n\r\n    /**\r\n     * Compares two keys by the value of translation according to the current language.\r\n     * @param key1, key2 The keys of the values to compare\r\n     * @param extension Unicode extension key, e.g. 'co-phonebk'\r\n     * @param options Default is { usage: 'sort', sensitivity: 'variant' }\r\n     * @return A negative value if the value of translation of key1 comes before the value of translation of key2;\r\n     *         a positive value if key1 comes after key2;\r\n     *         0 if they are considered equal or Intl.Collator is not supported\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Collator\r\n     */\r\n    compare(\r\n        key1: string,\r\n        key2: string,\r\n        extension?: string,\r\n        options?: any\r\n    ): number;\r\n\r\n    /**\r\n     * Sorts an array of objects or an array of arrays according to the current language.\r\n     * @param list The array to be sorted\r\n     * @param keyName The column that contains the keys of the values to be ordered\r\n     * @param order 'asc' or 'desc'. The default value is 'asc'\r\n     * @param extension Unicode extension key, e.g. 'co-phonebk'\r\n     * @param options Default is { usage: 'sort', sensitivity: 'variant' }\r\n     * @return The same sorted list or the same list if Intl.Collator is not supported\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Collator\r\n     */\r\n    sort(\r\n        list: any[],\r\n        keyName: any,\r\n        order?: string,\r\n        extension?: string,\r\n        options?: any\r\n    ): any[];\r\n\r\n    /**\r\n     * Sorts asynchronously an array of objects or an array of arrays according to the current language.\r\n     * @param list The array to be sorted\r\n     * @param keyName The column that contains the keys of the values to be ordered\r\n     * @param order 'asc' or 'desc'. The default value is 'asc'\r\n     * @param extension Unicode extension key, e.g. 'co-phonebk'\r\n     * @param options Default is { usage: 'sort', sensitivity: 'variant' }\r\n     * @return An observable of the sorted list or of the same list if Intl.Collator is not supported\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Collator\r\n     */\r\n    sortAsync(\r\n        list: any[],\r\n        keyName: any,\r\n        order?: string,\r\n        extension?: string,\r\n        options?: any\r\n    ): Observable<any[]>;\r\n\r\n    /**\r\n     * Matches a string into an array of objects or an array of arrays\r\n     * according to the current language.\r\n     * @param s The string to search\r\n     * @param list The array in which to search\r\n     * @param keyNames An array that contains the columns to look for\r\n     * @param options Default is { usage: 'search' }\r\n     * @return A filtered list or the same list if Intl.Collator is not supported\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Collator\r\n     */\r\n    search(\r\n        s: string,\r\n        list: any[],\r\n        keyNames: any[],\r\n        options?: any\r\n    ): any[];\r\n\r\n    /**\r\n     * Matches asynchronously a string into an array of objects or an array of arrays\r\n     * according to the current language.\r\n     * @param s The string to search\r\n     * @param list The array in which to search\r\n     * @param keyNames An array that contains the columns to look for\r\n     * @param options Default is { usage: 'search' }\r\n     * @return An observable of the filtered list or the same list if Intl.Collator is not supported\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Collator\r\n     */\r\n    searchAsync(\r\n        s: string,\r\n        list: any[],\r\n        keyNames: any[],\r\n        options?: any\r\n    ): Observable<any[]>;\r\n\r\n}\nexport class Collator implements ICollator {\n/**\n * @param {?} locale\n * @param {?} translation\n */\nconstructor(private locale: LocaleService,\nprivate translation: TranslationService) { }\n/**\n * @param {?} key1\n * @param {?} key2\n * @param {?=} extension\n * @param {?=} options\n * @return {?}\n */\npublic compare(\r\n        key1: string,\r\n        key2: string,\r\n        extension?: string,\r\n        options: any = { usage: 'sort', sensitivity: 'variant' }\r\n    ): number {\r\n        if (!IntlAPI.hasCollator()) {\r\n            return 0;\r\n        }\r\n\r\n        const /** @type {?} */ value1: string = this.translation.translate(key1);\r\n        const /** @type {?} */ value2: string = this.translation.translate(key2);\r\n\r\n        const /** @type {?} */ locale: string = this.addExtension(\r\n            this.locale.getCurrentLocale(),\r\n            extension\r\n        );\r\n        return new Intl.Collator(locale, options).compare(value1, value2);\r\n    }\n/**\n * @param {?} list\n * @param {?} keyName\n * @param {?=} order\n * @param {?=} extension\n * @param {?=} options\n * @return {?}\n */\npublic sort(\r\n        list: any[],\r\n        keyName: any,\r\n        order: string = \"asc\",\r\n        extension?: string,\r\n        options: any = { usage: 'sort', sensitivity: 'variant' }\r\n    ): any[] {\r\n        if (!list || !keyName || !IntlAPI.hasCollator()) {\r\n            return list;\r\n        }\r\n\r\n        list.sort((key1: any, key2: any) => {\r\n            return this.compare(key1[keyName], key2[keyName], extension, options);\r\n        });\r\n\r\n        if (order == \"desc\") {\r\n            list.reverse();\r\n        }\r\n        return list;\r\n    }\n/**\n * @param {?} list\n * @param {?} keyName\n * @param {?=} order\n * @param {?=} extension\n * @param {?=} options\n * @return {?}\n */\npublic sortAsync(\r\n        list: any[],\r\n        keyName: any,\r\n        order?: string,\r\n        extension?: string,\r\n        options: any = { usage: 'sort', sensitivity: 'variant' }\r\n    ): Observable<any[]> {\r\n        return Observable.create((observer: Observer<any[]>) => {\r\n            observer.next(this.sort(list, keyName, order, extension, options));\r\n            observer.complete();\r\n        });\r\n    }\n/**\n * @param {?} s\n * @param {?} list\n * @param {?} keyNames\n * @param {?=} options\n * @return {?}\n */\npublic search(\r\n        s: string,\r\n        list: any[],\r\n        keyNames: any[],\r\n        options: any = { usage: 'search' }\r\n    ): any[] {\r\n        if (!list || !keyNames || s == \"\" || s == null || !IntlAPI.hasCollator()) {\r\n            return list;\r\n        }\r\n\r\n        const /** @type {?} */ locale: string = this.locale.getCurrentLocale();\r\n        const /** @type {?} */ collator: Intl.Collator = new Intl.Collator(locale, options);\r\n\r\n        const /** @type {?} */ matches: any[] = list.filter((key: any) => {\r\n            let /** @type {?} */ found: boolean = false;\r\n            for (let /** @type {?} */ i: number = 0; i < keyNames.length; i++) {\r\n                if (this.match(key[keyNames[i]], s, collator)) {\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n            return found;\r\n        });\r\n        return matches;\r\n    }\n/**\n * @param {?} s\n * @param {?} list\n * @param {?} keyNames\n * @param {?=} options\n * @return {?}\n */\npublic searchAsync(\r\n        s: string,\r\n        list: any[],\r\n        keyNames: any[],\r\n        options: any = { usage: 'search' }\r\n    ): Observable<any[]> {\r\n        return Observable.create((observer: Observer<any[]>) => {\r\n            observer.next(this.search(s, list, keyNames, options));\r\n            observer.complete();\r\n        });\r\n    }\n/**\n * @param {?} locale\n * @param {?=} extension\n * @return {?}\n */\nprivate addExtension(locale: string, extension?: string): string {\r\n        if (!!extension) {\r\n            locale = locale + \"-u-\" + extension;\r\n        }\r\n        return locale;\r\n    }\n/**\n * @param {?} key\n * @param {?} s\n * @param {?} collator\n * @return {?}\n */\nprivate match(key: string, s: string, collator: Intl.Collator): boolean {\r\n        const /** @type {?} */ value: string = this.translation.translate(key);\r\n        const /** @type {?} */ valueLength: number = value.length;\r\n        const /** @type {?} */ sLength: number = s.length;\r\n\r\n        if (sLength > valueLength) {\r\n            return false;\r\n        }\r\n        if (sLength == valueLength) {\r\n            return collator.compare(value, s) == 0;\r\n        }\r\n\r\n        let /** @type {?} */ found: boolean = false;\r\n        for (let /** @type {?} */ i: number = 0; i < valueLength - (sLength - 1); i++) {\r\n            const /** @type {?} */ str: string = value.substr(i, sLength);\r\n            if (collator.compare(str, s) == 0) {\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n        return found;\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: LocaleService, },\n{type: TranslationService, },\n];\n}\n\nfunction Collator_tsickle_Closure_declarations() {\n/** @type {?} */\nCollator.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCollator.ctorParameters;\n/** @type {?} */\nCollator.prototype.locale;\n/** @type {?} */\nCollator.prototype.translation;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\r\n\r\nimport { DecimalCode } from '../models/validation/decimal-code';\r\n\r\n/**\r\n * Provides the methods to convert strings according to default locale.\r\n */\r\nexport interface ILocaleValidation {\r\n\r\n    /**\r\n     * Converts a string to a number according to default locale.\r\n     * If the string cannot be converted to a number, returns NaN.\r\n     */\r\n    parseNumber(s: string): number | null;\r\n\r\n}\nexport class LocaleValidation implements ILocaleValidation {\n/**\n * @param {?} decimalCode\n */\nconstructor(private decimalCode: DecimalCode) { }\n/**\n * @param {?} s\n * @return {?}\n */\npublic parseNumber(s: string): number | null {\r\n        if (s == \"\") {\r\n            return null;\r\n        }\r\n        return this.decimalCode.parse(s);\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DecimalCode, },\n];\n}\n\nfunction LocaleValidation_tsickle_Closure_declarations() {\n/** @type {?} */\nLocaleValidation.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocaleValidation.ctorParameters;\n/** @type {?} */\nLocaleValidation.prototype.decimalCode;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\r\n\r\nimport { NumberCode } from './number-code';\r\nimport { LocaleService } from '../../services/locale.service';\r\nimport { IntlAPI } from '../../services/intl-api';\r\nimport { Decimal } from '../types';\nexport class DecimalCode extends NumberCode {\n/**\n * @return {?}\n */\nprotected get decimalCodes(): Decimal {\r\n        let /** @type {?} */ decimalCodes: Decimal = {\r\n            minusSign: this.toUnicode(\"-\"),\r\n            decimalSeparator: this.toUnicode(\".\"),\r\n            thousandSeparator: this.toUnicode(\",\")\r\n        };\r\n\r\n        if (IntlAPI.hasNumberFormat()) {\r\n            const /** @type {?} */ value: number = -1000.9; // Reference value.\r\n            const /** @type {?} */ localeValue: string = new Intl.NumberFormat(this.locale.getDefaultLocale()).format(value);\r\n\r\n            const /** @type {?} */ unicodeChars: string[] = [];\r\n            for (let /** @type {?} */ i: number = 0; i <= 7; i++) {\r\n                unicodeChars.push(this.toUnicode(localeValue.charAt(i)));\r\n            }\r\n\r\n            // Right to left:\r\n            // checks Unicode characters 'RIGHT-TO-LEFT MARK' (U+200F) & 'Arabic Letter Mark' (U+061C),\r\n            // or the reverse order.\r\n            // Left to right:\r\n            // checks Unicode character 'LEFT-TO-RIGHT MARK' (U+200E).\r\n            if (unicodeChars[0] == \"\\\\u200F\" || unicodeChars[0] == \"\\\\u061C\") {\r\n                decimalCodes = {\r\n                    minusSign: unicodeChars[1],\r\n                    decimalSeparator: unicodeChars[7],\r\n                    thousandSeparator: unicodeChars[3]\r\n                };\r\n            } else if (unicodeChars[0] == this.toUnicode(\r\n                new Intl.NumberFormat(this.locale.getDefaultLocale()).format(1))\r\n            ) {\r\n                decimalCodes = {\r\n                    minusSign: unicodeChars[7],\r\n                    decimalSeparator: unicodeChars[5],\r\n                    thousandSeparator: unicodeChars[1]\r\n                };\r\n            } else if (unicodeChars[0] == \"\\\\u200E\") {\r\n                decimalCodes = {\r\n                    minusSign: unicodeChars[1],\r\n                    decimalSeparator: unicodeChars[7],\r\n                    thousandSeparator: unicodeChars[3]\r\n                };\r\n            } else {\r\n                decimalCodes = {\r\n                    minusSign: unicodeChars[0],\r\n                    decimalSeparator: unicodeChars[6],\r\n                    thousandSeparator: unicodeChars[2]\r\n                };\r\n            }\r\n        }\r\n        return decimalCodes;\r\n    }\n/**\n * @param {?} locale\n */\nconstructor(protected locale: LocaleService) {\r\n        super(locale);\r\n    }\n/**\n * @param {?} s\n * @return {?}\n */\npublic parse(s: string): number {\r\n        let /** @type {?} */ value: string = \"\";\r\n\r\n        const /** @type {?} */ decimalCodes: Decimal = this.decimalCodes;\r\n\r\n        const /** @type {?} */ characters: string[] = s.split(\"\");\r\n        for (const /** @type {?} */ char of characters) {\r\n            const /** @type {?} */ charCode: string = this.toUnicode(char);\r\n            const /** @type {?} */ index: number = this.numberCodes.indexOf(charCode);\r\n            if (index != -1) {\r\n                value += index;\r\n            } else if (charCode == decimalCodes.minusSign) {\r\n                value += \"-\";\r\n            } else if (charCode == decimalCodes.decimalSeparator) {\r\n                value += \".\";\r\n            } else if (charCode == decimalCodes.thousandSeparator) {\r\n                continue;\r\n            } else { return NaN; }\r\n        }\r\n        return parseFloat(value);\r\n    }\n/**\n * @param {?} digits\n * @return {?}\n */\npublic getRegExp(digits: string): RegExp {\r\n        let /** @type {?} */ minInt: number = 1;\r\n        let /** @type {?} */ minFraction: number = 0;\r\n        let /** @type {?} */ maxFraction: number = 3;\r\n\r\n        if (!!digits) {\r\n            const /** @type {?} */ NUMBER_FORMAT_REGEXP: RegExp = /^(\\d+)?\\.((\\d+)(\\-(\\d+))?)?$/;\r\n            const /** @type {?} */ parts: RegExpMatchArray | null = digits.match(NUMBER_FORMAT_REGEXP);\r\n            if (parts != null) {\r\n                if (parts[1] != null) {  // Min integer digits.\r\n                    minInt = parseInt(parts[1]);\r\n                }\r\n                if (parts[3] != null) {  // Min fraction digits.\r\n                    minFraction = parseInt(parts[3]);\r\n                }\r\n                if (parts[5] != null) {  // Max fraction digits.\r\n                    maxFraction = parseInt(parts[5]);\r\n                }\r\n            }\r\n        }\r\n\r\n        const /** @type {?} */ minusSign: string = this.decimalCodes.minusSign;\r\n        const /** @type {?} */ zero: string = this.numberCodes[0];\r\n        const /** @type {?} */ decimalSeparator: string = this.decimalCodes.decimalSeparator;\r\n        const /** @type {?} */ thousandSeparator: string = this.decimalCodes.thousandSeparator;\r\n        const /** @type {?} */ nine: string = this.numberCodes[9];\r\n\r\n        // Pattern for 1.2-2 digits: /^-?[0-9,]{1,}\\.[0-9]{2,2}$/\r\n        // Unicode pattern = \"^\\u002d?[\\u0030-\\u0039,\\u002c]{1,}\\\\u002e[\\u0030-\\u0039]{2,2}$\"\r\n        let /** @type {?} */ pattern: string;\r\n        if (minFraction > 0 && maxFraction > 0) {\r\n            pattern = \"^\"\r\n                + minusSign\r\n                + \"?[\" + zero + \"-\" + nine + thousandSeparator\r\n                + \"]{\" + minInt + \",}\\\\\"\r\n                + decimalSeparator\r\n                + \"[\" + zero + \"-\" + nine\r\n                + \"]{\" + minFraction + \",\" + maxFraction\r\n                + \"}$\";\r\n        } else if (minFraction == 0 && maxFraction > 0) {\r\n            // Decimal separator is optional.\r\n            pattern = \"^\"\r\n                + minusSign\r\n                + \"?[\" + zero + \"-\" + nine + thousandSeparator\r\n                + \"]{\" + minInt + \",}\\\\\"\r\n                + decimalSeparator\r\n                + \"?[\" + zero + \"-\" + nine\r\n                + \"]{\" + minFraction + \",\" + maxFraction\r\n                + \"}$\";\r\n        } else {\r\n            // Integer number.\r\n            pattern = \"^\"\r\n                + minusSign\r\n                + \"?[\" + zero + \"-\" + nine + thousandSeparator\r\n                + \"]{\" + minInt + \",}$\";\r\n        }\r\n        pattern = this.toChar(pattern);\r\n        const /** @type {?} */ regExp: RegExp = new RegExp(pattern);\r\n        return regExp;\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: LocaleService, },\n];\n}\n\nfunction DecimalCode_tsickle_Closure_declarations() {\n/** @type {?} */\nDecimalCode.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDecimalCode.ctorParameters;\n/** @type {?} */\nDecimalCode.prototype.locale;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\r\n\r\nimport { LocaleService } from '../../services/locale.service';\r\nimport { IntlAPI } from '../../services/intl-api';\n/**\n * @abstract\n */\nexport abstract class NumberCode {\n/**\n * @return {?}\n */\nprotected get numberCodes(): string[] {\r\n        const /** @type {?} */ numberCodes: string[] = [];\r\n\r\n        for (let /** @type {?} */ num: number = 0; num <= 9; num++) {\r\n            numberCodes.push(this.toUnicode(num.toString()));\r\n        }\r\n\r\n        if (IntlAPI.hasNumberFormat()) {\r\n            for (let /** @type {?} */ num: number = 0; num <= 9; num++) {\r\n                numberCodes[num] = this.toUnicode(\r\n                    new Intl.NumberFormat(this.locale.getDefaultLocale()).format(num)\r\n                );\r\n            }\r\n        }\r\n        return numberCodes;\r\n    }\n/**\n * @param {?} locale\n */\nconstructor(protected locale: LocaleService) { }\n/**\n * @abstract\n * @param {?} s\n * @return {?}\n */\nparse(s: string) {}\n/**\n * @abstract\n * @param {?} digits\n * @return {?}\n */\ngetRegExp(digits: string) {}\n/**\n * @param {?} pattern\n * @return {?}\n */\nprotected toChar(pattern: string): string {\r\n        return pattern.replace(/\\\\u[\\dA-F]{4}/gi, (match: string) => {\r\n            return String.fromCharCode(parseInt(match.replace(/\\\\u/g, \"\"), 16));\r\n        });\r\n    }\n/**\n * @param {?} c\n * @return {?}\n */\nprotected toUnicode(c: string): string {\r\n        return \"\\\\u\" + this.toHex(c.charCodeAt(0));\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate toHex(value: number): string {\r\n        let /** @type {?} */ hex: string = value.toString(16).toUpperCase();\r\n        // With padding.\r\n        hex = \"0000\".substr(0, 4 - hex.length) + hex;\r\n        return hex;\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: LocaleService, },\n];\n}\n\nfunction NumberCode_tsickle_Closure_declarations() {\n/** @type {?} */\nNumberCode.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNumberCode.ctorParameters;\n/** @type {?} */\nNumberCode.prototype.locale;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, ChangeDetectorRef } from '@angular/core';\r\n\r\nimport { Translation } from './translation';\r\nimport { LocaleService } from './locale.service';\r\nimport { TranslationService } from './translation.service';\r\nimport { InjectorRef } from '../models/injector-ref';\n/**\n * Provides 'lang' to the translate pipe,\r'defaultLocale' & 'currency' to localeDecimal, localePercent & localeCurrency pipes.\n */\nexport class Localization extends Translation {\npublic defaultLocale: string;\npublic currency: string;\n/**\n * @param {?=} locale\n * @param {?=} translation\n * @param {?=} changeDetectorRef\n */\nconstructor(\r\n        protected locale: LocaleService = InjectorRef.get(LocaleService),\r\n        protected translation: TranslationService = InjectorRef.get(TranslationService),\r\n        protected changeDetectorRef?: ChangeDetectorRef\r\n    ) {\r\n        super(translation, changeDetectorRef);\r\n\r\n        this.defaultLocale = this.locale.getDefaultLocale();\r\n        // When the default locale changes, subscribes to the event & updates defaultLocale property.\r\n        this.paramSubscriptions.push(this.locale.defaultLocaleChanged.subscribe(\r\n            (defaultLocale: string) => {\r\n                this.defaultLocale = defaultLocale;\r\n                // OnPush Change Detection strategy.\r\n                if (this.changeDetectorRef) { this.changeDetectorRef.markForCheck(); }\r\n            }\r\n        ));\r\n\r\n        this.currency = this.locale.getCurrentCurrency();\r\n        // When the currency changes, subscribes to the event & updates currency property.\r\n        this.paramSubscriptions.push(this.locale.currencyCodeChanged.subscribe(\r\n            (currency: string) => {\r\n                this.currency = currency;\r\n                // OnPush Change Detection strategy.\r\n                if (this.changeDetectorRef) { this.changeDetectorRef.markForCheck(); }\r\n            }\r\n        ));\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: LocaleService, },\n{type: TranslationService, },\n{type: ChangeDetectorRef, },\n];\n}\n\nfunction Localization_tsickle_Closure_declarations() {\n/** @type {?} */\nLocalization.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocalization.ctorParameters;\n/** @type {?} */\nLocalization.prototype.defaultLocale;\n/** @type {?} */\nLocalization.prototype.currency;\n/** @type {?} */\nLocalization.prototype.locale;\n/** @type {?} */\nLocalization.prototype.translation;\n/** @type {?} */\nLocalization.prototype.changeDetectorRef;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, ChangeDetectorRef } from '@angular/core';\r\nimport { ISubscription } from 'rxjs/Subscription';\r\n\r\nimport { TranslationService } from './translation.service';\r\nimport { InjectorRef } from '../models/injector-ref';\n/**\n * Provides 'lang' to the translate pipe.\n */\nexport class Translation {\npublic lang: string;\r\n\r\n    protected paramSubscriptions: ISubscription[] = [];\n/**\n * @param {?=} translation\n * @param {?=} changeDetectorRef\n */\nconstructor(\r\n        protected translation: TranslationService = InjectorRef.get(TranslationService),\r\n        protected changeDetectorRef?: ChangeDetectorRef\r\n    ) {\r\n        this.lang = this.translation.getLanguage();\r\n        // When the language changes, subscribes to the event & updates lang property.\r\n        this.paramSubscriptions.push(this.translation.translationChanged.subscribe(\r\n            (language: string) => {\r\n                this.lang = language;\r\n                // OnPush Change Detection strategy.\r\n                if (this.changeDetectorRef) { this.changeDetectorRef.markForCheck(); }\r\n            }\r\n        ));\r\n    }\n/**\n * @return {?}\n */\nprotected cancelParamSubscriptions(): void {\r\n        this.paramSubscriptions.forEach((subscription: ISubscription) => {\r\n            if (typeof subscription !== \"undefined\") {\r\n                subscription.unsubscribe();\r\n            }\r\n        });\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TranslationService, },\n{type: ChangeDetectorRef, },\n];\n}\n\nfunction Translation_tsickle_Closure_declarations() {\n/** @type {?} */\nTranslation.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTranslation.ctorParameters;\n/** @type {?} */\nTranslation.prototype.lang;\n/** @type {?} */\nTranslation.prototype.paramSubscriptions;\n/** @type {?} */\nTranslation.prototype.translation;\n/** @type {?} */\nTranslation.prototype.changeDetectorRef;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, EventEmitter, Output } from '@angular/core';\nimport { Observer } from 'rxjs/Observer';\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/operator/toPromise';\nimport'rxjs/add/observable/merge';\n\nimport { LocaleService } from './locale.service';\nimport { IntlAPI } from './intl-api';\nimport { ITranslationConfig, TranslationConfig } from '../models/translation/translation-config';\nimport { ITranslationConfigAPI, TranslationConfigAPI } from '../models/translation/translation-config-api';\nimport { TranslationProvider } from './translation-provider';\nimport { TranslationHandler } from './translation-handler';\nimport { LoadingMode, ServiceState } from '../models/types';\n\n/**\n * Manages the translation data.\n */\nexport interface ITranslationService {\n\n    translationChanged: EventEmitter<string>;\n    translationError: EventEmitter<any>;\n\n    /**\n     * Configure the service in the application root module or in a feature module with lazy loading.\n     */\n    addConfiguration(): ITranslationConfigAPI;\n\n    getConfiguration(): ITranslationConfig;\n\n    /**\n     * Call this method after the configuration to initialize the service.\n     */\n    init(): Promise<void>;\n\n    /**\n     * Gets the current language of the service.\n     */\n    getLanguage(): string;\n\n    /**\n     * Translates a key or an array of keys.\n     * @param keys The key or an array of keys to be translated\n     * @param args Optional parameters contained in the key\n     * @param lang The current language of the service is used by default\n     * @return The translated value or an object: {key: value}\n     */\n    translate(keys: string | string[], args?: any, lang?: string): string | any;\n\n    translateAsync(keys: string | string[], args?: any, lang?: string): Observable<string | any>;\n\n}\nexport class TranslationService implements ITranslationService {\npublic translationChanged: EventEmitter<string> = new EventEmitter<string>(true);\npublic translationError: EventEmitter<any> = new EventEmitter<any>(true);\nprivate serviceState: ServiceState;\nprivate loadingMode: LoadingMode;\nprivate language: string;\n/**\n * The translation data: {language: {key: value}}.\n */\nprivate translationData: any = {};\n/**\n * @param {?} locale\n * @param {?} configuration\n * @param {?} translationProvider\n * @param {?} translationHandler\n */\nconstructor(\nprivate locale: LocaleService,\nprivate configuration: TranslationConfig,\nprivate translationProvider: TranslationProvider,\nprivate translationHandler: TranslationHandler\n    ) {\n        this.serviceState = ServiceState.isWaiting;\n    }\n/**\n * @return {?}\n */\npublic addConfiguration(): ITranslationConfigAPI {\n        return new TranslationConfigAPI(this.configuration);\n    }\n/**\n * @return {?}\n */\npublic getConfiguration(): ITranslationConfig {\n        return this.configuration;\n    }\n/**\n * @return {?}\n */\npublic async init(): Promise<void> {\n        // Waiting for LocaleService initialization.\n        await this.locale.init();\n\n        if (this.configuration.providers.length > 0) {\n            this.loadingMode = LoadingMode.Async;\n        } else {\n            this.loadingMode = LoadingMode.Direct;\n        }\n\n        // When the language changes, loads translation data.\n        this.locale.loadTranslation.subscribe(\n            () => { this.loadTranslation(); }\n        );\n\n        await this.loadTranslation();\n    }\n/**\n * @return {?}\n */\npublic getLanguage(): string {\n        return this.language;\n    }\n/**\n * @param {?} keys\n * @param {?=} args\n * @param {?=} lang\n * @return {?}\n */\npublic translate(keys: string | string[], args: any = null, lang: string = this.language): string | any {\n        // If the service is not ready, returns the keys.\n        if (this.serviceState != ServiceState.isReady) return keys;\n\n        if (Array.isArray(keys)) {\n            const /** @type {?} */ data: any = {};\n            for (const /** @type {?} */ key of keys) {\n                data[key] = this.translateKey(key, args, lang);\n            }\n            return data;\n        }\n\n        return this.translateKey(keys, args, lang);\n    }\n/**\n * @param {?} keys\n * @param {?=} args\n * @param {?=} lang\n * @return {?}\n */\npublic translateAsync(\n        keys: string | string[],\n        args?: any,\n        lang: string = this.language\n    ): Observable<string | any> {\n        return Observable.create((observer: Observer<string | any>) => {\n            const /** @type {?} */ values: string | any = this.translate(keys, args, lang);\n            observer.next(values);\n            observer.complete();\n        });\n    }\n/**\n * @param {?} key\n * @param {?} args\n * @param {?} lang\n * @return {?}\n */\nprivate translateKey(key: string, args: any, lang: string): string | null {\n        if (key == null || key == \"\") return null;\n        // I18n plural.\n        if (this.configuration.i18nPlural && /^\\d+\\b/.exec(key)) {\n            return this.translateI18nPlural(key, args, lang);\n        }\n        return this.getValue(key, args, lang);\n    }\n/**\n * @param {?} key\n * @param {?} args\n * @param {?} lang\n * @return {?}\n */\nprivate getValue(key: string, args: any, lang: string): string {\n        const /** @type {?} */ path: string = key;\n        let /** @type {?} */ value: string | null = null;\n        if (this.translationData[lang]) {\n            let /** @type {?} */ translation: any = this.translationData[lang];\n\n            // Composed key.\n            const /** @type {?} */ sequences: string[] = key.split(this.configuration.keySeparator);\n            do {\n                key = /** @type {?} */(( sequences.shift()));\n                if (translation[key] && typeof translation[key] === \"object\") {\n                    translation = translation[key];\n                }\n            } while (sequences.length > 0);\n\n            value = translation[key] || translation[this.configuration.missingKey];\n        }\n        return this.translationHandler.parseValue(path, key, value, args, lang);\n    }\n/**\n * @param {?} key\n * @param {?} args\n * @param {?} lang\n * @return {?}\n */\nprivate translateI18nPlural(key: string, args: any, lang: string): string {\n        let /** @type {?} */ keyText: string = key.replace(/^\\d+\\b/, \"\");\n        keyText = keyText.trim();\n\n        const /** @type {?} */ keyNumber: number = parseFloat(key);\n        key = key.replace(/^\\d+/, this.translateNumber(keyNumber));\n\n        return key.replace(keyText, this.getValue(keyText, args, lang));\n    }\n/**\n * @param {?} keyNumber\n * @return {?}\n */\nprivate translateNumber(keyNumber: number): string {\n        if (!isNaN(keyNumber) && IntlAPI.hasNumberFormat()) {\n            const /** @type {?} */ localeNumber: string = new Intl.NumberFormat(this.language).format(keyNumber);\n            return localeNumber;\n        }\n        return keyNumber.toString();\n    }\n/**\n * @return {?}\n */\nprivate async loadTranslation(): Promise<void> {\n        const /** @type {?} */ language: string = !this.configuration.localeAsLanguage\n            ? this.locale.getCurrentLanguage()\n            : this.locale.getCurrentLocale();\n\n        if (language != null && language != this.language) {\n            if (this.loadingMode == LoadingMode.Async) {\n                await this.getTranslation(language).toPromise();\n            } else {\n                this.translationData = {};\n                this.translationData[language] = this.configuration.translationData[language];\n                this.releaseTranslation(language);\n            }\n        }\n    }\n/**\n * @param {?} language\n * @return {?}\n */\nprivate getTranslation(language: string): Observable<any> {\n\n        return Observable.create((observer: Observer<any>) => {\n            this.translationData = {};\n            this.serviceState = ServiceState.isLoading;\n\n            const /** @type {?} */ sequencesOfTranslationData: Array<Observable<any>> = [];\n\n            for (const /** @type {?} */ provider of this.configuration.providers) {\n                sequencesOfTranslationData.push(\n                    this.translationProvider.getTranslation(language, provider.args)\n                );\n            }\n\n            // Merges all the sequences into a single observable sequence.\n            Observable.merge(...sequencesOfTranslationData).subscribe(\n                (data: any) => {\n                    this.addData(data, language);\n                },\n                (error: any) => {\n                    // Sends an event for custom actions.\n                    this.translationError.emit(error);\n                    this.releaseTranslation(language);\n                    observer.next(null);\n                    observer.complete();\n                },\n                () => {\n                    this.releaseTranslation(language);\n                    observer.next(null);\n                    observer.complete();\n                }\n            );\n        });\n    }\n/**\n * @param {?} data\n * @param {?} language\n * @return {?}\n */\nprivate addData(data: any, language: string): void {\n        this.translationData[language] = typeof this.translationData[language] !== \"undefined\"\n            ? { ...this.translationData[language], ...data } // Object spread.\n            : data;\n    }\n/**\n * @param {?} language\n * @return {?}\n */\nprivate releaseTranslation(language: string): void {\n        this.serviceState = ServiceState.isReady;\n        this.language = language;\n        this.sendEvents();\n    }\n/**\n * @return {?}\n */\nprivate sendEvents(): void {\n        // Sends an event for the components.\n        this.translationChanged.emit(this.language);\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: LocaleService, },\n{type: TranslationConfig, },\n{type: TranslationProvider, },\n{type: TranslationHandler, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'translationChanged': [{ type: Output },],\n'translationError': [{ type: Output },],\n};\n}\n\nfunction TranslationService_tsickle_Closure_declarations() {\n/** @type {?} */\nTranslationService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTranslationService.ctorParameters;\n/** @type {?} */\nTranslationService.propDecorators;\n/** @type {?} */\nTranslationService.prototype.translationChanged;\n/** @type {?} */\nTranslationService.prototype.translationError;\n/** @type {?} */\nTranslationService.prototype.serviceState;\n/** @type {?} */\nTranslationService.prototype.loadingMode;\n/** @type {?} */\nTranslationService.prototype.language;\n/**\n * The translation data: {language: {key: value}}.\n * @type {?}\n */\nTranslationService.prototype.translationData;\n/** @type {?} */\nTranslationService.prototype.locale;\n/** @type {?} */\nTranslationService.prototype.configuration;\n/** @type {?} */\nTranslationService.prototype.translationProvider;\n/** @type {?} */\nTranslationService.prototype.translationHandler;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","export type Language = {\r\n\r\n    code: string;\r\n    direction: string;\r\n\r\n};\r\n\r\nexport type Provider = {\r\n\r\n    args: any;\r\n\r\n};\r\n\r\nexport type Decimal = {\r\n\r\n    minusSign: string;\r\n    decimalSeparator: string;\r\n    thousandSeparator: string;\r\n\r\n};\nexport type LoadingMode = number;\nexport let LoadingMode: any = {};\nLoadingMode.Direct = 0;\nLoadingMode.Async = 1;\nLoadingMode[LoadingMode.Direct] = \"Direct\";\nLoadingMode[LoadingMode.Async] = \"Async\";\n\nexport type ServiceState = number;\nexport let ServiceState: any = {};\nServiceState.isReady = 0;\nServiceState.isLoading = 1;\nServiceState.isWaiting = 2;\nServiceState[ServiceState.isReady] = \"isReady\";\nServiceState[ServiceState.isLoading] = \"isLoading\";\nServiceState[ServiceState.isWaiting] = \"isWaiting\";\n\r\n\r\nexport interface PropertyDecorator {\r\n\r\n    <T extends Function>(type: T): T;\r\n\r\n    (target: Object, propertyKey?: string | symbol): void;\r\n\r\n}\r\n\r\nexport interface Type<T> extends Function {\r\n\r\n    new (...args: any[]): T;\r\n\r\n}\r\n\r\nexport interface Token {\r\n\r\n    localeStorage?: Type<any>;\r\n    translationProvider?: Type<any>;\r\n    translationHandler?: Type<any>;\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\n\nimport { TranslationConfig } from '../models/translation/translation-config';\n/**\n * Implement this class-interface to create a custom handler for translated values.\n * @abstract\n */\nexport abstract class TranslationHandler {\n/**\n * This method must contain the logic to parse the translated value.\n * @abstract\n * @param {?} path The path of the key\n * @param {?} key The key that has been requested\n * @param {?} value The translated value\n * @param {?} args The parameters passed along with the key\n * @param {?} lang The current language\n * @return {?} The parsed value\n */\nparseValue(path: string, key: string, value: string | null, args: any, lang: string) {}\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TranslationHandler_tsickle_Closure_declarations() {\n/** @type {?} */\nTranslationHandler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTranslationHandler.ctorParameters;\n}\n\nexport class DefaultTranslationHandler implements TranslationHandler {\n/**\n * @param {?} configuration\n */\nconstructor(private configuration: TranslationConfig) { }\n/**\n * @param {?} path\n * @param {?} key\n * @param {?} value\n * @param {?} args\n * @param {?} lang\n * @return {?}\n */\npublic parseValue(path: string, key: string, value: string | null, args: any, lang: string): string {\n        if (value == null) {\n            return this.handleMissingValue(path);\n        } else if (args) {\n            return this.handleArgs(value, args);\n        }\n        return value;\n    }\n/**\n * @param {?} path\n * @return {?}\n */\nprivate handleMissingValue(path: string): string {\n        if (this.configuration.missingValue != null) {\n            return this.configuration.missingValue;\n        }\n        // The same path is returned.\n        return path;\n    }\n/**\n * @param {?} value\n * @param {?} args\n * @return {?}\n */\nprivate handleArgs(value: string, args: any): string {\n        const /** @type {?} */ TEMPLATE_REGEXP: RegExp = /{{\\s?([^{}\\s]*)\\s?}}/g;\n        return value.replace(TEMPLATE_REGEXP, (substring: string, parsedKey: string) => {\n            const /** @type {?} */ replacer: string = /** @type {?} */(( args[parsedKey] as string));\n            return typeof replacer !== \"undefined\" ? replacer : substring;\n        });\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TranslationConfig, },\n];\n}\n\nfunction DefaultTranslationHandler_tsickle_Closure_declarations() {\n/** @type {?} */\nDefaultTranslationHandler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDefaultTranslationHandler.ctorParameters;\n/** @type {?} */\nDefaultTranslationHandler.prototype.configuration;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/operator/map';\n/**\n * Implement this class-interface to create a custom provider for translation data.\n * @abstract\n */\nexport abstract class TranslationProvider {\n/**\n * This method must contain the logic of data access.\n * @abstract\n * @param {?} language The current language\n * @param {?} args The parameter of addCustomProvider method\n * @return {?} An observable of an object of translation data: {key: value}\n */\ngetTranslation(language: string, args: any) {}\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TranslationProvider_tsickle_Closure_declarations() {\n/** @type {?} */\nTranslationProvider.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTranslationProvider.ctorParameters;\n}\n\nexport class HttpTranslationProvider implements TranslationProvider {\n/**\n * @param {?} http\n */\nconstructor(private http: Http) { }\n/**\n * @param {?} language\n * @param {?} args\n * @return {?}\n */\npublic getTranslation(language: string, args: any): Observable<any> {\n        let /** @type {?} */ url: string = \"\";\n\n        switch (args.type) {\n            case \"WebAPI\":\n                url += args.path + language;\n                break;\n            default:\n                url += args.prefix + language + \".\" + args.dataFormat;\n        }\n\n        return this.http.get(url)\n            .map((res: Response) => res.json());\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Http, },\n];\n}\n\nfunction HttpTranslationProvider_tsickle_Closure_declarations() {\n/** @type {?} */\nHttpTranslationProvider.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHttpTranslationProvider.ctorParameters;\n/** @type {?} */\nHttpTranslationProvider.prototype.http;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { TranslationConfig } from './translation-config';\r\n\r\nexport interface ITranslationConfigAPI {\r\n\r\n    /**\r\n     * Direct loading: adds translation data.\r\n     * @param languageCode ISO 639 two-letter or three-letter code of the language\r\n     * @param translation Translation data of the language\r\n     */\r\n    addTranslation(languageCode: string, translation: any): ITranslationConfigAPI;\r\n\r\n    /**\r\n     * Asynchronous loading: adds a translation provider.\r\n     * @param prefix The path prefix of the json files\r\n     * @param dataFormat Data format: default & supported value is 'json'\r\n     */\r\n    addProvider(prefix: string, dataFormat?: string): ITranslationConfigAPI;\r\n\r\n    /**\r\n     * Asynchronous loading: adds a Web API provider.\r\n     * @param path [path]{languageCode} will be the URL used by the Http GET requests\r\n     * @param dataFormat Data format: default & supported value is 'json'\r\n     */\r\n    addWebAPIProvider(path: string, dataFormat?: string): ITranslationConfigAPI;\r\n\r\n    /**\r\n     * Asynchronous loading: adds a custom provider.\r\n     */\r\n    addCustomProvider(args: any): ITranslationConfigAPI;\r\n\r\n    /**\r\n     * Sets the use of locale (languageCode-countryCode) as language.\r\n     */\r\n    useLocaleAsLanguage(): ITranslationConfigAPI;\r\n\r\n    /**\r\n     * Sets the value to use for missing keys.\r\n     */\r\n    setMissingValue(value: string): ITranslationConfigAPI;\r\n\r\n    /**\r\n     * Sets the key to use for missing keys.\r\n     */\r\n    setMissingKey(key: string): ITranslationConfigAPI;\r\n\r\n    /**\r\n     * Sets composed key separator. Default is the point '.'.\r\n     */\r\n    setComposedKeySeparator(keySeparator: string): ITranslationConfigAPI;\r\n\r\n    /**\r\n     * Disables the translation of numbers that are contained at the beginning of the keys.\r\n     */\r\n    disableI18nPlural(): ITranslationConfigAPI;\r\n\r\n}\nexport class TranslationConfigAPI {\n/**\n * @param {?} configuration\n */\nconstructor(private configuration: TranslationConfig) { }\n/**\n * @param {?} languageCode\n * @param {?} translation\n * @return {?}\n */\npublic addTranslation(languageCode: string, translation: any): ITranslationConfigAPI {\r\n        this.configuration.translationData[languageCode] =\r\n            typeof this.configuration.translationData[languageCode] !== \"undefined\"\r\n                ? { ...this.configuration.translationData[languageCode], ...translation } // Object spread.\r\n                : translation;\r\n        return this;\r\n    }\n/**\n * @param {?} prefix\n * @param {?=} dataFormat\n * @return {?}\n */\npublic addProvider(prefix: string, dataFormat: string = \"json\"): ITranslationConfigAPI {\r\n        this.configuration.providers.push({ args: { type: \"Static\", prefix: prefix, dataFormat: dataFormat } });\r\n        return this;\r\n    }\n/**\n * @param {?} path\n * @param {?=} dataFormat\n * @return {?}\n */\npublic addWebAPIProvider(path: string, dataFormat: string = \"json\"): ITranslationConfigAPI {\r\n        this.configuration.providers.push({ args: { type: \"WebAPI\", path: path, dataFormat: dataFormat } });\r\n        return this;\r\n    }\n/**\n * @param {?=} args\n * @return {?}\n */\npublic addCustomProvider(args?: any): ITranslationConfigAPI {\r\n        this.configuration.providers.push({ args: args });\r\n        return this;\r\n    }\n/**\n * @return {?}\n */\npublic useLocaleAsLanguage(): ITranslationConfigAPI {\r\n        this.configuration.localeAsLanguage = true;\r\n        return this;\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic setMissingValue(value: string): ITranslationConfigAPI {\r\n        this.configuration.missingValue = value;\r\n        return this;\r\n    }\n/**\n * @param {?} key\n * @return {?}\n */\npublic setMissingKey(key: string): ITranslationConfigAPI {\r\n        this.configuration.missingKey = key;\r\n        return this;\r\n    }\n/**\n * @param {?} keySeparator\n * @return {?}\n */\npublic setComposedKeySeparator(keySeparator: string): ITranslationConfigAPI {\r\n        this.configuration.keySeparator = keySeparator;\r\n        return this;\r\n    }\n/**\n * @return {?}\n */\npublic disableI18nPlural(): ITranslationConfigAPI {\r\n        this.configuration.i18nPlural = false;\r\n        return this;\r\n    }\r\n\r\n}\n\nfunction TranslationConfigAPI_tsickle_Closure_declarations() {\n/** @type {?} */\nTranslationConfigAPI.prototype.configuration;\n}\n\r\n","\n/**\n * Provides the methods to check if Intl APIs are supported.\n */\nexport class IntlAPI {\nprivate static readonly hasIntl: boolean = Intl && typeof Intl === \"object\";\n/**\n * @return {?}\n */\npublic static hasDateTimeFormat(): boolean {\r\n        return this.hasIntl && Intl​.hasOwnProperty​(\"DateTimeFormat\");\r\n    }\n/**\n * @return {?}\n */\npublic static hasNumberFormat(): boolean {\r\n        return this.hasIntl && Intl.hasOwnProperty​(\"NumberFormat\");\r\n    }\n/**\n * @return {?}\n */\npublic static hasCollator(): boolean {\r\n        return this.hasIntl && Intl.hasOwnProperty​(\"Collator\");\r\n    }\r\n\r\n}\n\nfunction IntlAPI_tsickle_Closure_declarations() {\n/** @type {?} */\nIntlAPI.hasIntl;\n}\n\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Provider } from '../types';\r\n\r\nexport interface ITranslationConfig {\r\n\r\n    translationData: any;\r\n\r\n    providers: Provider[];\r\n    localeAsLanguage: boolean;\r\n    missingValue: string;\r\n    missingKey: string;\r\n    keySeparator: string;\r\n    i18nPlural: boolean;\r\n\r\n}\nexport class TranslationConfig implements ITranslationConfig {\npublic translationData: any = {};\npublic providers: Provider[] = [];\npublic localeAsLanguage: boolean = false;\npublic missingValue: string;\npublic missingKey: string;\npublic keySeparator: string = \".\";\npublic i18nPlural: boolean = true;\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TranslationConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nTranslationConfig.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTranslationConfig.ctorParameters;\n/** @type {?} */\nTranslationConfig.prototype.translationData;\n/** @type {?} */\nTranslationConfig.prototype.providers;\n/** @type {?} */\nTranslationConfig.prototype.localeAsLanguage;\n/** @type {?} */\nTranslationConfig.prototype.missingValue;\n/** @type {?} */\nTranslationConfig.prototype.missingKey;\n/** @type {?} */\nTranslationConfig.prototype.keySeparator;\n/** @type {?} */\nTranslationConfig.prototype.i18nPlural;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, EventEmitter, Output } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\n\nimport { ILocaleConfig, LocaleConfig } from '../models/localization/locale-config';\nimport { ILocaleConfigAPI, LocaleConfigAPI } from '../models/localization/locale-config-api';\nimport { LocaleStorage } from './locale-storage';\nimport { DefaultLocale } from '../models/localization/default-locale';\nimport { Language } from '../models/types';\n\n/**\n * Manages language, default locale & currency.\n */\nexport interface ILocaleService {\n\n    languageCodeChanged: EventEmitter<string>;\n    defaultLocaleChanged: EventEmitter<string>;\n    currencyCodeChanged: EventEmitter<string>;\n\n    loadTranslation: Subject<any>;\n\n    /**\n     * Configure the service in the application root module or in a feature module with lazy loading.\n     */\n    addConfiguration(): ILocaleConfigAPI;\n\n    getConfiguration(): ILocaleConfig;\n\n    init(): Promise<void>;\n\n    getAvailableLanguages(): string[];\n\n    getLanguageDirection(languageCode?: string): string;\n\n    getCurrentLanguage(): string;\n\n    getCurrentCountry(): string;\n\n    getCurrentLocale(): string;\n\n    getCurrentScript(): string;\n\n    getCurrentNumberingSystem(): string;\n\n    getCurrentCalendar(): string;\n\n    getDefaultLocale(): string;\n\n    getCurrentCurrency(): string;\n\n    setCurrentLanguage(languageCode: string): void;\n\n    setDefaultLocale(\n        languageCode: string,\n        countryCode: string,\n        scriptCode?: string,\n        numberingSystem?: string,\n        calendar?: string\n    ): void;\n\n    setCurrentCurrency(currencyCode: string): void;\n\n}\nexport class LocaleService implements ILocaleService {\npublic languageCodeChanged: EventEmitter<string> = new EventEmitter<string>(true);\npublic defaultLocaleChanged: EventEmitter<string> = new EventEmitter<string>(true);\npublic currencyCodeChanged: EventEmitter<string> = new EventEmitter<string>(true);\npublic loadTranslation: Subject<any> = new Subject();\nprivate defaultLocale: DefaultLocale = new DefaultLocale();\nprivate currencyCode: string;\n/**\n * @param {?} configuration\n * @param {?} storage\n */\nconstructor(private configuration: LocaleConfig,\nprivate storage: LocaleStorage) { }\n/**\n * @return {?}\n */\npublic addConfiguration(): ILocaleConfigAPI {\n        return new LocaleConfigAPI(this.configuration);\n    }\n/**\n * @return {?}\n */\npublic getConfiguration(): ILocaleConfig {\n        return this.configuration;\n    }\n/**\n * @return {?}\n */\npublic async init(): Promise<void> {\n        await this.initStorage();\n\n        if (!!this.configuration.languageCode && !!this.configuration.countryCode) {\n            this.initDefaultLocale();\n        } else if (!!this.configuration.languageCode) {\n            this.initLanguage();\n        }\n\n        if (!!this.configuration.currencyCode) {\n            this.initCurrency();\n        }\n    }\n/**\n * @return {?}\n */\npublic getAvailableLanguages(): string[] {\n        return this.configuration.languageCodes.map((language: Language) => language.code);\n    }\n/**\n * @param {?=} languageCode\n * @return {?}\n */\npublic getLanguageDirection(languageCode: string = this.defaultLocale.languageCode): string {\n        const /** @type {?} */ matchedLanguages: Language[] = this.matchLanguage(languageCode);\n        return matchedLanguages[0].direction;\n    }\n/**\n * @return {?}\n */\npublic getCurrentLanguage(): string {\n        return this.defaultLocale.languageCode;\n    }\n/**\n * @return {?}\n */\npublic getCurrentCountry(): string {\n        if (!!this.defaultLocale.countryCode) {\n            return this.defaultLocale.countryCode;\n        }\n        return \"\";\n    }\n/**\n * @return {?}\n */\npublic getCurrentScript(): string {\n        if (!!this.defaultLocale.scriptCode) {\n            return this.defaultLocale.scriptCode;\n        }\n        return \"\";\n    }\n/**\n * @return {?}\n */\npublic getCurrentLocale(): string {\n        const /** @type {?} */ locale: string = !!this.defaultLocale.countryCode\n            ? this.defaultLocale.languageCode + \"-\" + this.defaultLocale.countryCode\n            : this.defaultLocale.languageCode;\n        return locale;\n    }\n/**\n * @return {?}\n */\npublic getCurrentNumberingSystem(): string {\n        if (!!this.defaultLocale.numberingSystem) {\n            return this.defaultLocale.numberingSystem;\n        }\n        return \"\";\n    }\n/**\n * @return {?}\n */\npublic getCurrentCalendar(): string {\n        if (!!this.defaultLocale.calendar) {\n            return this.defaultLocale.calendar;\n        }\n        return \"\";\n    }\n/**\n * @return {?}\n */\npublic getDefaultLocale(): string {\n        return this.defaultLocale.value;\n    }\n/**\n * @return {?}\n */\npublic getCurrentCurrency(): string {\n        return this.currencyCode;\n    }\n/**\n * @param {?} languageCode\n * @return {?}\n */\npublic setCurrentLanguage(languageCode: string): void {\n        if (this.defaultLocale.languageCode != languageCode) {\n            this.defaultLocale.build(languageCode);\n            this.storage.write(\"defaultLocale\", this.defaultLocale.value);\n            this.sendLanguageEvents();\n            this.sendTranslationEvents();\n        }\n    }\n/**\n * @param {?} languageCode\n * @param {?} countryCode\n * @param {?=} scriptCode\n * @param {?=} numberingSystem\n * @param {?=} calendar\n * @return {?}\n */\npublic setDefaultLocale(\n        languageCode: string,\n        countryCode: string,\n        scriptCode?: string,\n        numberingSystem?: string,\n        calendar?: string\n    ): void {\n        if (this.defaultLocale.languageCode != languageCode ||\n            this.defaultLocale.countryCode != countryCode ||\n            this.defaultLocale.scriptCode != scriptCode ||\n            this.defaultLocale.numberingSystem != numberingSystem ||\n            this.defaultLocale.calendar != calendar) {\n\n            this.defaultLocale.build(\n                languageCode,\n                countryCode,\n                scriptCode,\n                numberingSystem,\n                calendar\n            );\n\n            this.storage.write(\"defaultLocale\", this.defaultLocale.value);\n            this.sendDefaultLocaleEvents();\n            this.sendTranslationEvents();\n        }\n    }\n/**\n * @param {?} currencyCode\n * @return {?}\n */\npublic setCurrentCurrency(currencyCode: string): void {\n        if (this.currencyCode != currencyCode) {\n            this.currencyCode = currencyCode;\n            this.storage.write(\"currency\", this.currencyCode);\n            this.sendCurrencyEvents();\n        }\n    }\n/**\n * @return {?}\n */\nprivate async initStorage(): Promise<void> {\n        // Tries to retrieve default locale & currency from the browser storage.\n        if (!this.defaultLocale.value) {\n            const /** @type {?} */ defaultLocale: string | null = await this.storage.read(\"defaultLocale\");\n            if (!!defaultLocale) {\n                this.defaultLocale.value = defaultLocale;\n            }\n        }\n        if (this.currencyCode == null) {\n            const /** @type {?} */ currencyCode: string | null = await this.storage.read(\"currency\");\n            if (!!currencyCode) {\n                this.currencyCode = currencyCode;\n            }\n        }\n    }\n/**\n * @return {?}\n */\nprivate initLanguage(): void {\n        if (!this.defaultLocale.languageCode) {\n            const /** @type {?} */ browserLanguage: string | null = this.getBrowserLanguage();\n            let /** @type {?} */ matchedLanguages: Language[] = [];\n            if (!!browserLanguage) {\n                matchedLanguages = this.matchLanguage(browserLanguage);\n            }\n            if (!!browserLanguage && matchedLanguages.length > 0) {\n                this.defaultLocale.build(browserLanguage);\n            } else {\n                this.defaultLocale.build(this.configuration.languageCode);\n            }\n            this.storage.write(\"defaultLocale\", this.defaultLocale.value);\n        }\n        this.sendLanguageEvents();\n    }\n/**\n * @return {?}\n */\nprivate initDefaultLocale(): void {\n        if (!this.defaultLocale.value) {\n            this.defaultLocale.build(\n                this.configuration.languageCode,\n                this.configuration.countryCode,\n                this.configuration.scriptCode,\n                this.configuration.numberingSystem,\n                this.configuration.calendar\n            );\n            this.storage.write(\"defaultLocale\", this.defaultLocale.value);\n        }\n        this.sendDefaultLocaleEvents();\n    }\n/**\n * @return {?}\n */\nprivate initCurrency(): void {\n        if (this.currencyCode == null) {\n            this.currencyCode = this.configuration.currencyCode;\n            this.storage.write(\"currency\", this.currencyCode);\n        }\n        this.sendCurrencyEvents();\n    }\n/**\n * @return {?}\n */\nprivate getBrowserLanguage(): string | null {\n        let /** @type {?} */ browserLanguage: string | null = null;\n        if (typeof navigator !== \"undefined\" && navigator.language) {\n            browserLanguage = navigator.language;\n        }\n        if (browserLanguage != null) {\n            const /** @type {?} */ index: number = browserLanguage.indexOf(\"-\");\n            if (index != -1) {\n                browserLanguage = browserLanguage.substring(0, index);\n            }\n        }\n        return browserLanguage;\n    }\n/**\n * @param {?} languageCode\n * @return {?}\n */\nprivate matchLanguage(languageCode: string): Language[] {\n        const /** @type {?} */ matchedLanguages: Language[] = this.configuration.languageCodes.filter(\n            (language: Language) => {\n                return language.code == languageCode;\n            });\n        return matchedLanguages;\n    }\n/**\n * @return {?}\n */\nprivate sendLanguageEvents(): void {\n        this.languageCodeChanged.emit(this.defaultLocale.languageCode);\n    }\n/**\n * @return {?}\n */\nprivate sendDefaultLocaleEvents(): void {\n        this.defaultLocaleChanged.emit(this.defaultLocale.value);\n    }\n/**\n * @return {?}\n */\nprivate sendCurrencyEvents(): void {\n        this.currencyCodeChanged.emit(this.currencyCode);\n    }\n/**\n * @return {?}\n */\nprivate sendTranslationEvents(): void {\n        // This event is subscribed by TranslationService to load the translation data.\n        this.loadTranslation.next();\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: LocaleConfig, },\n{type: LocaleStorage, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'languageCodeChanged': [{ type: Output },],\n'defaultLocaleChanged': [{ type: Output },],\n'currencyCodeChanged': [{ type: Output },],\n};\n}\n\nfunction LocaleService_tsickle_Closure_declarations() {\n/** @type {?} */\nLocaleService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocaleService.ctorParameters;\n/** @type {?} */\nLocaleService.propDecorators;\n/** @type {?} */\nLocaleService.prototype.languageCodeChanged;\n/** @type {?} */\nLocaleService.prototype.defaultLocaleChanged;\n/** @type {?} */\nLocaleService.prototype.currencyCodeChanged;\n/** @type {?} */\nLocaleService.prototype.loadTranslation;\n/** @type {?} */\nLocaleService.prototype.defaultLocale;\n/** @type {?} */\nLocaleService.prototype.currencyCode;\n/** @type {?} */\nLocaleService.prototype.configuration;\n/** @type {?} */\nLocaleService.prototype.storage;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { DefaultLocaleCodes } from './locale-codes';\nexport class DefaultLocale implements DefaultLocaleCodes {\npublic languageCode: string;\npublic scriptCode?: string;\npublic countryCode?: string;\npublic numberingSystem?: string;\npublic calendar?: string;\n/**\n * @return {?}\n */\npublic get value(): string {\r\n        return this._value;\r\n    }\n/**\n * @param {?} defaultLocale\n * @return {?}\n */\npublic set value(defaultLocale: string) {\r\n        this._value = defaultLocale;\r\n        this.parseValue();\r\n    }\nprivate _value: string;\n/**\n * @param {?} languageCode\n * @param {?=} countryCode\n * @param {?=} scriptCode\n * @param {?=} numberingSystem\n * @param {?=} calendar\n * @return {?}\n */\npublic build(\r\n        languageCode: string,\r\n        countryCode?: string,\r\n        scriptCode?: string,\r\n        numberingSystem?: string,\r\n        calendar?: string\r\n    ): void {\r\n        this.languageCode = languageCode;\r\n        this.scriptCode = scriptCode;\r\n        this.countryCode = countryCode;\r\n        this.numberingSystem = numberingSystem;\r\n        this.calendar = calendar;\r\n\r\n        const /** @type {?} */ value: string[] = [];\r\n        value.push(languageCode);\r\n        value.push(!!scriptCode ? \"-\" + scriptCode : \"\");\r\n        value.push(!!countryCode ? \"-\" + countryCode : \"\");\r\n        // Adds the 'u' (Unicode) extension.\r\n        value.push((!!numberingSystem || !!calendar) ? \"-u\" : \"\");\r\n        value.push(!!numberingSystem ? \"-nu-\" + numberingSystem : \"\");\r\n        value.push(!!calendar ? \"-ca-\" + calendar : \"\");\r\n        this._value = value.join(\"\");\r\n    }\n/**\n * @return {?}\n */\nprivate parseValue(): void {\r\n        if (!!this.value) {\r\n            let /** @type {?} */ value: string = this.value;\r\n            // Looks for the 'u' (Unicode) extension.\r\n            const /** @type {?} */ index: number = value.search(\"-u\");\r\n            if (index != -1) {\r\n                const /** @type {?} */ extensions: string[] = value.substring(index + 1).split(\"-\");\r\n                switch (extensions.length) {\r\n                    case 3:\r\n                        if (extensions[1] == \"nu\") {\r\n                            this.numberingSystem = extensions[2];\r\n                        } else if (extensions[1] == \"ca\") {\r\n                            this.calendar = extensions[2];\r\n                        }\r\n                        break;\r\n                    default:\r\n                        this.numberingSystem = extensions[2];\r\n                        this.calendar = extensions[4];\r\n                        break;\r\n                }\r\n                // Extracts the codes.\r\n                value = value.substring(0, index);\r\n            }\r\n\r\n            const /** @type {?} */ codes: string[] = value.split(\"-\");\r\n            switch (codes.length) {\r\n                case 1:\r\n                    this.languageCode = codes[0];\r\n                    break;\r\n                case 2:\r\n                    this.languageCode = codes[0];\r\n                    this.countryCode = codes[1];\r\n                    break;\r\n                default:\r\n                    this.languageCode = codes[0];\r\n                    this.scriptCode = codes[1];\r\n                    this.countryCode = codes[2];\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n}\n\nfunction DefaultLocale_tsickle_Closure_declarations() {\n/** @type {?} */\nDefaultLocale.prototype.languageCode;\n/** @type {?} */\nDefaultLocale.prototype.scriptCode;\n/** @type {?} */\nDefaultLocale.prototype.countryCode;\n/** @type {?} */\nDefaultLocale.prototype.numberingSystem;\n/** @type {?} */\nDefaultLocale.prototype.calendar;\n/** @type {?} */\nDefaultLocale.prototype._value;\n}\n\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { LocaleConfig } from '../models/localization/locale-config';\n/**\n * Implement this class-interface to create a custom storage for default locale & currency.\n * @abstract\n */\nexport abstract class LocaleStorage {\n/**\n * This method must contain the logic to read the storage.\r\\@param name 'defaultLocale' or 'currency'\r\\@return A promise with the value of the given name\n * @abstract\n * @param {?} name\n * @return {?}\n */\nread(name: string) {}\n/**\n * This method must contain the logic to write the storage.\r\\@param name 'defaultLocale' or 'currency'\r\\@param value The value for the given name\n * @abstract\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nwrite(name: string, value: string) {}\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LocaleStorage_tsickle_Closure_declarations() {\n/** @type {?} */\nLocaleStorage.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocaleStorage.ctorParameters;\n}\n\nexport class BrowserStorage implements LocaleStorage {\nprivate hasCookie: boolean;\nprivate hasStorage: boolean;\n/**\n * @param {?} configuration\n */\nconstructor(private configuration: LocaleConfig) {\r\n        this.hasCookie = typeof navigator !== \"undefined\" && navigator.cookieEnabled;\r\n        this.hasStorage = typeof Storage !== \"undefined\";\r\n    }\n/**\n * @param {?} name\n * @return {?}\n */\npublic async read(name: string): Promise<string | null> {\r\n        let /** @type {?} */ value: string | null = null;\r\n        if (!this.configuration.storageIsDisabled) {\r\n            if (this.configuration.localStorage && this.hasStorage) {\r\n                value = this.getLocalStorage(name);\r\n            } else if (this.configuration.sessionStorage && this.hasStorage) {\r\n                value = this.getSessionStorage(name);\r\n            } else if (this.hasCookie) {\r\n                value = this.getCookie(name);\r\n            }\r\n        }\r\n        return value;\r\n    }\n/**\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\npublic async write(name: string, value: string): Promise<void> {\r\n        if (!this.configuration.storageIsDisabled) {\r\n            if (this.configuration.localStorage && this.hasStorage) {\r\n                this.setLocalStorage(name, value);\r\n            } else if (this.configuration.sessionStorage && this.hasStorage) {\r\n                this.setSessionStorage(name, value);\r\n            } else if (this.hasCookie) {\r\n                this.setCookie(name, value);\r\n            }\r\n        }\r\n    }\n/**\n * @param {?} name\n * @return {?}\n */\nprivate getLocalStorage(name: string): string | null {\r\n        return localStorage.getItem(name);\r\n    }\n/**\n * @param {?} name\n * @return {?}\n */\nprivate getSessionStorage(name: string): string | null {\r\n        return sessionStorage.getItem(name);\r\n    }\n/**\n * @param {?} name\n * @return {?}\n */\nprivate getCookie(name: string): string | null {\r\n        let /** @type {?} */ result: RegExpExecArray | null = null;\r\n        if (typeof document !== \"undefined\") {\r\n            result = new RegExp(\"(?:^|; )\" + encodeURIComponent(name) + \"=([^;]*)\").exec(document.cookie);\r\n        }\r\n        return result ? result[1] : null;\r\n    }\n/**\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nprivate setLocalStorage(name: string, value: string): void {\r\n        localStorage.setItem(name, value);\r\n    }\n/**\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nprivate setSessionStorage(name: string, value: string): void {\r\n        sessionStorage.setItem(name, value);\r\n    }\n/**\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nprivate setCookie(name: string, value: string): void {\r\n        let /** @type {?} */ expires: string = \"\";\r\n        if (this.configuration.cookiesExpirationDays != null) {\r\n            const /** @type {?} */ expirationDate: Date = new Date();\r\n            expirationDate.setTime(\r\n                expirationDate.getTime() +\r\n                (this.configuration.cookiesExpirationDays * 24 * 60 * 60 * 1000)\r\n            );\r\n            expires = \"; expires=\" + expirationDate.toUTCString();\r\n        }\r\n        if (typeof document !== \"undefined\") {\r\n            document.cookie = name + \"=\" + value + expires + \"; path=/\";\r\n        }\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: LocaleConfig, },\n];\n}\n\nfunction BrowserStorage_tsickle_Closure_declarations() {\n/** @type {?} */\nBrowserStorage.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBrowserStorage.ctorParameters;\n/** @type {?} */\nBrowserStorage.prototype.hasCookie;\n/** @type {?} */\nBrowserStorage.prototype.hasStorage;\n/** @type {?} */\nBrowserStorage.prototype.configuration;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { LocaleConfig } from './locale-config';\r\nimport { Language } from '../types';\r\n\r\nexport interface ILocaleConfigAPI {\r\n\r\n    /**\r\n     * Adds a language to use in the app, specifying the layout direction.\r\n     * @param languageCode ISO 639 two-letter or three-letter code of the language\r\n     * @param textDirection Default is ltr (left to right)\r\n     */\r\n    addLanguage(languageCode: string, textDirection?: string): ILocaleConfigAPI;\r\n\r\n    /**\r\n     * Adds the languages to use in the app.\r\n     * @param languageCodes Array of ISO 639 two-letter or three-letter codes of the languages\r\n     */\r\n    addLanguages(languageCodes: string[]): ILocaleConfigAPI;\r\n\r\n    /**\r\n     * Disables the browser storage for language, default locale & currency.\r\n     */\r\n    disableStorage(): ILocaleConfigAPI;\r\n\r\n    /**\r\n     * If the cookie expiration is omitted, the cookie becomes a session cookie.\r\n     */\r\n    setCookieExpiration(days?: number): ILocaleConfigAPI;\r\n\r\n    /**\r\n     * Sets browser LocalStorage as default for language, default locale & currency.\r\n     */\r\n    useLocalStorage(): ILocaleConfigAPI;\r\n\r\n    /**\r\n     * Sets browser SessionStorage as default for language, default locale & currency.\r\n     */\r\n    useSessionStorage(): ILocaleConfigAPI;\r\n\r\n    /**\r\n     * Defines the language to be used:\r\n     *  - tries to get the language from the browser storage;\r\n     *  - tries to get the language of the browser if it has been added;\r\n     *  - otherwise gets the parameter language.\r\n     * @param languageCode ISO 639 two-letter or three-letter code of the language\r\n     */\r\n    defineLanguage(languageCode: string): ILocaleConfigAPI;\r\n\r\n    /**\r\n     * Defines the default locale to be used, regardless of the browser language.\r\n     * @param languageCode ISO 639 two-letter or three-letter code of the language\r\n     * @param countryCode ISO 3166 two-letter, uppercase code of the country\r\n     * @param scriptCode Optional ISO 15924 four-letter script code\r\n     * @param numberingSystem Optional numbering system\r\n     * @param calendar Optional calendar\r\n     */\r\n    defineDefaultLocale(\r\n        languageCode: string,\r\n        countryCode: string,\r\n        scriptCode?: string,\r\n        numberingSystem?: string,\r\n        calendar?: string\r\n    ): ILocaleConfigAPI;\r\n\r\n    /**\r\n     * Defines the currency to be used.\r\n     * @param defaultCurrency ISO 4217 three-letter code of the currency\r\n     */\r\n    defineCurrency(currencyCode: string): ILocaleConfigAPI;\r\n\r\n}\nexport class LocaleConfigAPI implements ILocaleConfigAPI {\n/**\n * @param {?} configuration\n */\nconstructor(private configuration: LocaleConfig) { }\n/**\n * @param {?} languageCode\n * @param {?=} textDirection\n * @return {?}\n */\npublic addLanguage(languageCode: string, textDirection: string = \"LTR\"): ILocaleConfigAPI {\r\n        this.configuration.languageCodes.push({ code: languageCode, direction: textDirection });\r\n        return this;\r\n    }\n/**\n * @param {?} languageCodes\n * @return {?}\n */\npublic addLanguages(languageCodes: string[]): ILocaleConfigAPI {\r\n        for (const /** @type {?} */ languageCode of languageCodes) {\r\n            this.configuration.languageCodes.push({ code: languageCode, direction: \"ltr\" });\r\n        }\r\n        return this;\r\n    }\n/**\n * @return {?}\n */\npublic disableStorage(): ILocaleConfigAPI {\r\n        this.configuration.storageIsDisabled = true;\r\n        return this;\r\n    }\n/**\n * @param {?=} days\n * @return {?}\n */\npublic setCookieExpiration(days?: number): ILocaleConfigAPI {\r\n        this.configuration.cookiesExpirationDays = days;\r\n        return this;\r\n    }\n/**\n * @return {?}\n */\npublic useLocalStorage(): ILocaleConfigAPI {\r\n        this.configuration.localStorage = true;\r\n        return this;\r\n    }\n/**\n * @return {?}\n */\npublic useSessionStorage(): ILocaleConfigAPI {\r\n        this.configuration.sessionStorage = true;\r\n        return this;\r\n    }\n/**\n * @param {?} languageCode\n * @return {?}\n */\npublic defineLanguage(languageCode: string): ILocaleConfigAPI {\r\n        this.configuration.languageCode = languageCode;\r\n        return this;\r\n    }\n/**\n * @param {?} languageCode\n * @param {?} countryCode\n * @param {?=} scriptCode\n * @param {?=} numberingSystem\n * @param {?=} calendar\n * @return {?}\n */\npublic defineDefaultLocale(\r\n        languageCode: string,\r\n        countryCode: string,\r\n        scriptCode?: string,\r\n        numberingSystem?: string,\r\n        calendar?: string\r\n    ): ILocaleConfigAPI {\r\n        this.configuration.languageCode = languageCode;\r\n        this.configuration.countryCode = countryCode;\r\n        this.configuration.scriptCode = scriptCode;\r\n        this.configuration.numberingSystem = numberingSystem;\r\n        this.configuration.calendar = calendar;\r\n        return this;\r\n    }\n/**\n * @param {?} currencyCode\n * @return {?}\n */\npublic defineCurrency(currencyCode: string): ILocaleConfigAPI {\r\n        this.configuration.currencyCode = currencyCode;\r\n        return this;\r\n    }\r\n\r\n}\n\nfunction LocaleConfigAPI_tsickle_Closure_declarations() {\n/** @type {?} */\nLocaleConfigAPI.prototype.configuration;\n}\n\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { LocaleCodes } from './locale-codes';\r\nimport { Language } from '../types';\r\n\r\nexport interface ILocaleConfig extends LocaleCodes {\r\n\r\n    languageCodes: Language[];\r\n\r\n    storageIsDisabled: boolean;\r\n    localStorage: boolean;\r\n    sessionStorage: boolean;\r\n    cookiesExpirationDays?: number;\r\n\r\n}\nexport class LocaleConfig implements ILocaleConfig {\npublic languageCode: string;\npublic scriptCode?: string;\npublic countryCode?: string;\npublic numberingSystem?: string;\npublic calendar?: string;\npublic currencyCode: string;\npublic languageCodes: Language[] = [];\npublic storageIsDisabled: boolean = false;\npublic localStorage: boolean = false;\npublic sessionStorage: boolean = false;\npublic cookiesExpirationDays?: number;\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LocaleConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nLocaleConfig.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocaleConfig.ctorParameters;\n/** @type {?} */\nLocaleConfig.prototype.languageCode;\n/** @type {?} */\nLocaleConfig.prototype.scriptCode;\n/** @type {?} */\nLocaleConfig.prototype.countryCode;\n/** @type {?} */\nLocaleConfig.prototype.numberingSystem;\n/** @type {?} */\nLocaleConfig.prototype.calendar;\n/** @type {?} */\nLocaleConfig.prototype.currencyCode;\n/** @type {?} */\nLocaleConfig.prototype.languageCodes;\n/** @type {?} */\nLocaleConfig.prototype.storageIsDisabled;\n/** @type {?} */\nLocaleConfig.prototype.localStorage;\n/** @type {?} */\nLocaleConfig.prototype.sessionStorage;\n/** @type {?} */\nLocaleConfig.prototype.cookiesExpirationDays;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Injector } from '@angular/core';\r\n\r\nimport { Type } from './types';\n/**\n * Allows to get the dependencies at the module level or component.\n */\nexport class InjectorRef {\nprivate static injector: Injector;\n/**\n * @template T\n * @param {?} token\n * @return {?}\n */\npublic static get<T>(token: Type<T>): T {\r\n        return this.injector.get(token);\r\n    }\n/**\n * @param {?} injector\n */\nconstructor(private injector: Injector) {\r\n        InjectorRef.injector = this.injector;\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Injector, },\n];\n}\n\nfunction InjectorRef_tsickle_Closure_declarations() {\n/** @type {?} */\nInjectorRef.injector;\n/** @type {?} */\nInjectorRef.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInjectorRef.ctorParameters;\n/** @type {?} */\nInjectorRef.prototype.injector;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":[],"mappings":"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"}