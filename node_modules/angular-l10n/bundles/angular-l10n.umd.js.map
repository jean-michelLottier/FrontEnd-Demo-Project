{"version":3,"file":"angular-l10n.umd.js","sources":["../../src/modules/locale-validation.module.ts","../../src/modules/localization.module.ts","../../src/modules/translation.module.ts","../../src/directives/locale-number-validator.directive.ts","../../src/directives/locale-number.directive.ts","../../src/directives/locale-date.directive.ts","../../src/directives/translate.directive.ts","../../src/models/base-directive.ts","../../src/models/bfs.ts","../../src/pipes/locale-number.pipe.ts","../../src/pipes/locale-date.pipe.ts","../../src/pipes/translate.pipe.ts","../../src/decorators/currency.decorator.ts","../../src/decorators/default-locale.decorator.ts","../../src/decorators/language.decorator.ts","../../src/services/collator.ts","../../src/services/locale-validation.ts","../../src/models/validation/decimal-code.ts","../../src/models/validation/number-code.ts","../../src/services/localization.ts","../../src/services/translation.ts","../../src/services/translation.service.ts","../../src/models/types.ts","../../src/services/translation-handler.ts","../../src/services/translation-provider.ts","../../src/models/translation/translation-config-api.ts","../../src/services/intl-api.ts","../../src/models/translation/translation-config.ts","../../src/services/locale.service.ts","../../src/models/localization/default-locale.ts","../../src/services/locale-storage.ts","../../src/models/localization/locale-config-api.ts","../../src/models/localization/locale-config.ts","../../src/models/injector-ref.ts"],"sourcesContent":["import { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\nimport { DecimalCode } from '../models/validation/decimal-code';\r\nimport { LocaleValidation } from '../services/locale-validation';\r\nimport { LocaleNumberValidatorDirective } from '../directives/locale-number-validator.directive';\n/**\n * Provides dependencies & directives for locale validation.\n */\nexport class LocaleValidationModule {\n/**\n * Use in AppModule: new instance of LocaleValidation.\n * @return {?}\n */\npublic static forRoot(): ModuleWithProviders {\r\n        return {\r\n            ngModule: LocaleValidationModule,\r\n            providers: [DecimalCode, LocaleValidation]\r\n        };\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n    declarations: [\r\n        LocaleNumberValidatorDirective\r\n    ],\r\n    exports: [\r\n        LocaleNumberValidatorDirective\r\n    ]\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LocaleValidationModule_tsickle_Closure_declarations() {\n/** @type {?} */\nLocaleValidationModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocaleValidationModule.ctorParameters;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\nimport { InjectorRef } from '../models/injector-ref';\r\nimport { TranslationModule } from './translation.module';\r\nimport { LocaleConfig } from '../models/localization/locale-config';\r\nimport { LocaleService } from '../services/locale.service';\r\nimport { LocaleStorage, BrowserStorage } from '../services/locale-storage';\r\nimport { TranslationConfig } from '../models/translation/translation-config';\r\nimport { TranslationService } from '../services/translation.service';\r\nimport { TranslationProvider, HttpTranslationProvider } from '../services/translation-provider';\r\nimport { TranslationHandler, DefaultTranslationHandler } from '../services/translation-handler';\r\nimport { LocaleDatePipe } from '../pipes/locale-date.pipe';\r\nimport { LocaleDecimalPipe, LocalePercentPipe, LocaleCurrencyPipe } from '../pipes/locale-number.pipe';\r\nimport { LocaleDateDirective } from '../directives/locale-date.directive';\r\nimport {\r\n    LocaleDecimalDirective,\r\n    LocalePercentDirective,\r\n    LocaleCurrencyDirective\r\n} from '../directives/locale-number.directive';\r\nimport { Token } from '../models/types';\n/**\n * Provides dependencies, pipes & directives for translating messages, dates & numbers.\n */\nexport class LocalizationModule {\n/**\n * Use in AppModule: new instances of LocaleService & TranslationService.\n * @param {?=} token\n * @return {?}\n */\npublic static forRoot(token: Token = {}): ModuleWithProviders {\r\n        return {\r\n            ngModule: LocalizationModule,\r\n            providers: [\r\n                InjectorRef,\r\n                LocaleConfig,\r\n                LocaleService,\r\n                {\r\n                    provide: LocaleStorage,\r\n                    useClass: token.localeStorage || BrowserStorage\r\n                },\r\n                TranslationConfig,\r\n                TranslationService,\r\n                {\r\n                    provide: TranslationProvider,\r\n                    useClass: token.translationProvider || HttpTranslationProvider\r\n                },\r\n                {\r\n                    provide: TranslationHandler,\r\n                    useClass: token.translationHandler || DefaultTranslationHandler\r\n                }\r\n            ]\r\n        };\r\n    }\n/**\n * Use in feature modules with lazy loading: new instance of TranslationService.\n * @param {?=} token\n * @return {?}\n */\npublic static forChild(token: Token = {}): ModuleWithProviders {\r\n        return {\r\n            ngModule: LocalizationModule,\r\n            providers: [\r\n                InjectorRef,\r\n                TranslationConfig,\r\n                TranslationService,\r\n                {\r\n                    provide: TranslationProvider,\r\n                    useClass: token.translationProvider || HttpTranslationProvider\r\n                },\r\n                {\r\n                    provide: TranslationHandler,\r\n                    useClass: token.translationHandler || DefaultTranslationHandler\r\n                }\r\n            ]\r\n        };\r\n    }\n/**\n * @param {?} injector\n */\nconstructor(private injector: InjectorRef) {\r\n        // Creates the instance of the InjectorRef, so that module dependencies are available.\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n    declarations: [\r\n        LocaleDatePipe,\r\n        LocaleDecimalPipe,\r\n        LocalePercentPipe,\r\n        LocaleCurrencyPipe,\r\n        LocaleDateDirective,\r\n        LocaleDecimalDirective,\r\n        LocalePercentDirective,\r\n        LocaleCurrencyDirective\r\n    ],\r\n    imports: [\r\n        TranslationModule\r\n    ],\r\n    exports: [\r\n        TranslationModule,\r\n        LocaleDatePipe,\r\n        LocaleDecimalPipe,\r\n        LocalePercentPipe,\r\n        LocaleCurrencyPipe,\r\n        LocaleDateDirective,\r\n        LocaleDecimalDirective,\r\n        LocalePercentDirective,\r\n        LocaleCurrencyDirective\r\n    ]\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: InjectorRef, },\n];\n}\n\nfunction LocalizationModule_tsickle_Closure_declarations() {\n/** @type {?} */\nLocalizationModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocalizationModule.ctorParameters;\n/** @type {?} */\nLocalizationModule.prototype.injector;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\nimport { InjectorRef } from '../models/injector-ref';\r\nimport { LocaleConfig } from '../models/localization/locale-config';\r\nimport { LocaleService } from '../services/locale.service';\r\nimport { LocaleStorage, BrowserStorage } from '../services/locale-storage';\r\nimport { TranslationConfig } from '../models/translation/translation-config';\r\nimport { TranslationService } from '../services/translation.service';\r\nimport { TranslationProvider, HttpTranslationProvider } from '../services/translation-provider';\r\nimport { TranslationHandler, DefaultTranslationHandler } from '../services/translation-handler';\r\nimport { TranslatePipe } from '../pipes/translate.pipe';\r\nimport { TranslateDirective } from '../directives/translate.directive';\r\nimport { Token } from '../models/types';\n/**\n * Provides dependencies, pipes & directives for translating messages.\n */\nexport class TranslationModule {\n/**\n * Use in AppModule: new instances of LocaleService & TranslationService.\n * @param {?=} token\n * @return {?}\n */\npublic static forRoot(token: Token = {}): ModuleWithProviders {\r\n        return {\r\n            ngModule: TranslationModule,\r\n            providers: [\r\n                InjectorRef,\r\n                LocaleConfig,\r\n                LocaleService,\r\n                {\r\n                    provide: LocaleStorage,\r\n                    useClass: token.localeStorage || BrowserStorage\r\n                },\r\n                TranslationConfig,\r\n                TranslationService,\r\n                {\r\n                    provide: TranslationProvider,\r\n                    useClass: token.translationProvider || HttpTranslationProvider\r\n                },\r\n                {\r\n                    provide: TranslationHandler,\r\n                    useClass: token.translationHandler || DefaultTranslationHandler\r\n                }\r\n            ]\r\n        };\r\n    }\n/**\n * Use in feature modules with lazy loading: new instance of TranslationService.\n * @param {?=} token\n * @return {?}\n */\npublic static forChild(token: Token = {}): ModuleWithProviders {\r\n        return {\r\n            ngModule: TranslationModule,\r\n            providers: [\r\n                InjectorRef,\r\n                TranslationConfig,\r\n                TranslationService,\r\n                {\r\n                    provide: TranslationProvider,\r\n                    useClass: token.translationProvider || HttpTranslationProvider\r\n                },\r\n                {\r\n                    provide: TranslationHandler,\r\n                    useClass: token.translationHandler || DefaultTranslationHandler\r\n                }\r\n            ]\r\n        };\r\n    }\n/**\n * @param {?} injector\n */\nconstructor(private injector: InjectorRef) {\r\n        // Creates the instance of the InjectorRef, so that module dependencies are available.\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n    declarations: [\r\n        TranslatePipe,\r\n        TranslateDirective\r\n    ],\r\n    exports: [\r\n        TranslatePipe,\r\n        TranslateDirective\r\n    ]\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: InjectorRef, },\n];\n}\n\nfunction TranslationModule_tsickle_Closure_declarations() {\n/** @type {?} */\nTranslationModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTranslationModule.ctorParameters;\n/** @type {?} */\nTranslationModule.prototype.injector;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, forwardRef, Input, OnInit } from '@angular/core';\nimport { NG_VALIDATORS, FormControl, Validator } from '@angular/forms';\n\nimport { LocaleService } from '../services/locale.service';\nimport { DecimalCode } from '../models/validation/decimal-code';\nimport { InjectorRef } from '../models/injector-ref';\n/**\n * Function that takes a control and returns either null when it’s valid, or an error object if it’s not.\n * @param {?} digits The format of the number\n * @param {?=} MIN_VALUE The minimum value for the number\n * @param {?=} MAX_VALUE The maximum value for the number\n * @return {?} An error object: 'format', 'minValue' or 'maxValue'; null in case the value is valid\n */\nexport function validateLocaleNumber(\n    digits: string,\n    MIN_VALUE: number = Number.MIN_VALUE,\n    MAX_VALUE: number = Number.MAX_VALUE\n): Function {\n\n    const /** @type {?} */ locale: LocaleService = InjectorRef.get(LocaleService);\n    const /** @type {?} */ decimalCode: DecimalCode = InjectorRef.get(DecimalCode);\n\n    let /** @type {?} */ defaultLocale: string;\n    let /** @type {?} */ NUMBER_REGEXP: RegExp;\n\n    return (formControl: FormControl): { [key: string]: any } | null => {\n        if (formControl.value == null || formControl.value == \"\") return null;\n\n        if (defaultLocale != locale.getDefaultLocale()) {\n            NUMBER_REGEXP = decimalCode.getRegExp(digits);\n            defaultLocale = locale.getDefaultLocale();\n        }\n\n        if (NUMBER_REGEXP.test(formControl.value)) {\n            const /** @type {?} */ parsedValue: number = decimalCode.parse(formControl.value);\n            if (parsedValue != null && parsedValue < MIN_VALUE) {\n                return {\n                    minValue: {\n                        valid: false\n                    }\n                };\n            } else if (parsedValue != null && parsedValue > MAX_VALUE) {\n                return {\n                    maxValue: {\n                        valid: false\n                    }\n                };\n            }\n            return null; // The number is valid.\n        } else {\n            return {\n                format: {\n                    valid: false\n                }\n            };\n        }\n    };\n\n}\nexport class LocaleNumberValidatorDirective implements Validator, OnInit {\n/**\n * Format: {minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}.\n * @param {?} digits\n * @return {?}\n */\nset l10nValidateNumber(digits: string) {\n        this.digits = digits;\n    }\n/**\n * @param {?} digits\n * @return {?}\n */\nset validateLocaleNumber(digits: string) {\n        this.digits = digits;\n    }\npublic minValue: number;\npublic maxValue: number;\nprivate digits: string;\nprivate readonly MIN_VALUE: number = Number.MIN_VALUE;\nprivate readonly MAX_VALUE: number = Number.MAX_VALUE;\nprivate validator: Function;\n/**\n * @return {?}\n */\npublic ngOnInit(): void {\n        this.validator = validateLocaleNumber(\n            this.digits,\n            this.minValue || this.MIN_VALUE,\n            this.maxValue || this.MAX_VALUE\n        );\n    }\n/**\n * @param {?} formControl\n * @return {?}\n */\npublic validate(formControl: FormControl): Function {\n        return this.validator(formControl);\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[l10nValidateNumber][ngModel],[l10nValidateNumber][formControl], \\\n        [validateLocaleNumber][ngModel],[validateLocaleNumber][formControl]',\n    providers: [\n        { provide: NG_VALIDATORS, useExisting: forwardRef(() => LocaleNumberValidatorDirective), multi: true }\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'l10nValidateNumber': [{ type: Input },],\n'validateLocaleNumber': [{ type: Input },],\n'minValue': [{ type: Input },],\n'maxValue': [{ type: Input },],\n};\n}\n\nfunction LocaleNumberValidatorDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nLocaleNumberValidatorDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocaleNumberValidatorDirective.ctorParameters;\n/** @type {?} */\nLocaleNumberValidatorDirective.propDecorators;\n/** @type {?} */\nLocaleNumberValidatorDirective.prototype.minValue;\n/** @type {?} */\nLocaleNumberValidatorDirective.prototype.maxValue;\n/** @type {?} */\nLocaleNumberValidatorDirective.prototype.digits;\n/** @type {?} */\nLocaleNumberValidatorDirective.prototype.MIN_VALUE;\n/** @type {?} */\nLocaleNumberValidatorDirective.prototype.MAX_VALUE;\n/** @type {?} */\nLocaleNumberValidatorDirective.prototype.validator;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\r\n\r\nimport { LocaleService } from '../services/locale.service';\r\nimport { BaseDirective } from '../models/base-directive';\r\nimport { LocaleDecimalPipe, LocalePercentPipe, LocaleCurrencyPipe } from '../pipes/locale-number.pipe';\nexport class LocaleDecimalDirective extends BaseDirective {\n/**\n * @param {?} digits\n * @return {?}\n */\nset l10nDecimal(digits: string) {\r\n        this.digits = digits;\r\n    }\n/**\n * @param {?} digits\n * @return {?}\n */\nset localeDecimal(digits: string) {\r\n        this.digits = digits;\r\n    }\nprivate digits: string;\nprivate localeDecimalPipe: LocaleDecimalPipe = new LocaleDecimalPipe();\n/**\n * @param {?} locale\n * @param {?} el\n * @param {?} renderer\n */\nconstructor(protected locale: LocaleService, protected el: ElementRef, protected renderer: Renderer2) {\r\n        super(el, renderer);\r\n    }\n/**\n * @return {?}\n */\nprotected setup(): void {\r\n        this.replace();\r\n        this.subscriptions.push(this.locale.defaultLocaleChanged.subscribe(\r\n            () => { this.replace(); }\r\n        ));\r\n    }\n/**\n * @return {?}\n */\nprotected replace(): void {\r\n        this.replaceText();\r\n        this.replaceAttributes();\r\n    }\n/**\n * @return {?}\n */\nprotected replaceText(): void {\r\n        if (!!this.key) {\r\n            this.setText(this.getValues(this.key));\r\n        }\r\n    }\n/**\n * @return {?}\n */\nprotected replaceAttributes(): void {\r\n        if (this.attributes.length > 0) {\r\n            this.setAttributes(this.getAttributesData());\r\n        }\r\n    }\n/**\n * @param {?} keys\n * @return {?}\n */\nprotected getValues(keys: string | string[]): string | any {\r\n        return this.localeDecimalPipe.transform(\r\n            keys,\r\n            this.locale.getDefaultLocale(),\r\n            this.digits\r\n        );\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n    selector: '[l10nDecimal],[localeDecimal]'\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: LocaleService, },\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'l10nDecimal': [{ type: Input },],\n'localeDecimal': [{ type: Input },],\n};\n}\n\nfunction LocaleDecimalDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nLocaleDecimalDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocaleDecimalDirective.ctorParameters;\n/** @type {?} */\nLocaleDecimalDirective.propDecorators;\n/** @type {?} */\nLocaleDecimalDirective.prototype.digits;\n/** @type {?} */\nLocaleDecimalDirective.prototype.localeDecimalPipe;\n/** @type {?} */\nLocaleDecimalDirective.prototype.locale;\n/** @type {?} */\nLocaleDecimalDirective.prototype.el;\n/** @type {?} */\nLocaleDecimalDirective.prototype.renderer;\n}\n\nexport class LocalePercentDirective extends BaseDirective {\n/**\n * @param {?} digits\n * @return {?}\n */\nset l10nPercent(digits: string) {\r\n        this.digits = digits;\r\n    }\n/**\n * @param {?} digits\n * @return {?}\n */\nset localePercent(digits: string) {\r\n        this.digits = digits;\r\n    }\nprivate digits: string;\nprivate localePercentPipe: LocalePercentPipe = new LocalePercentPipe();\n/**\n * @param {?} locale\n * @param {?} el\n * @param {?} renderer\n */\nconstructor(protected locale: LocaleService, protected el: ElementRef, protected renderer: Renderer2) {\r\n        super(el, renderer);\r\n    }\n/**\n * @return {?}\n */\nprotected setup(): void {\r\n        this.replace();\r\n        this.subscriptions.push(this.locale.defaultLocaleChanged.subscribe(\r\n            () => { this.replace(); }\r\n        ));\r\n    }\n/**\n * @return {?}\n */\nprotected replace(): void {\r\n        this.replaceText();\r\n        this.replaceAttributes();\r\n    }\n/**\n * @return {?}\n */\nprotected replaceText(): void {\r\n        if (!!this.key) {\r\n            this.setText(this.getValues(this.key));\r\n        }\r\n    }\n/**\n * @return {?}\n */\nprotected replaceAttributes(): void {\r\n        if (this.attributes.length > 0) {\r\n            this.setAttributes(this.getAttributesData());\r\n        }\r\n    }\n/**\n * @param {?} keys\n * @return {?}\n */\nprotected getValues(keys: string | string[]): string | any {\r\n        return this.localePercentPipe.transform(\r\n            keys,\r\n            this.locale.getDefaultLocale(),\r\n            this.digits\r\n        );\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n    selector: '[l10nPercent],[localePercent]'\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: LocaleService, },\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'l10nPercent': [{ type: Input },],\n'localePercent': [{ type: Input },],\n};\n}\n\nfunction LocalePercentDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nLocalePercentDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocalePercentDirective.ctorParameters;\n/** @type {?} */\nLocalePercentDirective.propDecorators;\n/** @type {?} */\nLocalePercentDirective.prototype.digits;\n/** @type {?} */\nLocalePercentDirective.prototype.localePercentPipe;\n/** @type {?} */\nLocalePercentDirective.prototype.locale;\n/** @type {?} */\nLocalePercentDirective.prototype.el;\n/** @type {?} */\nLocalePercentDirective.prototype.renderer;\n}\n\nexport class LocaleCurrencyDirective extends BaseDirective {\n/**\n * @param {?} digits\n * @return {?}\n */\nset l10nCurrency(digits: string) {\r\n        this.digits = digits;\r\n    }\n/**\n * @param {?} digits\n * @return {?}\n */\nset localeCurrency(digits: string) {\r\n        this.digits = digits;\r\n    }\npublic symbol: boolean;\nprivate digits: string;\nprivate localeCurrencyPipe: LocaleCurrencyPipe = new LocaleCurrencyPipe();\n/**\n * @param {?} locale\n * @param {?} el\n * @param {?} renderer\n */\nconstructor(protected locale: LocaleService, protected el: ElementRef, protected renderer: Renderer2) {\r\n        super(el, renderer);\r\n    }\n/**\n * @return {?}\n */\nprotected setup(): void {\r\n        this.replace();\r\n        this.subscriptions.push(this.locale.defaultLocaleChanged.subscribe(\r\n            () => { this.replace(); }\r\n        ));\r\n        this.subscriptions.push(this.locale.currencyCodeChanged.subscribe(\r\n            () => { this.replace(); }\r\n        ));\r\n    }\n/**\n * @return {?}\n */\nprotected replace(): void {\r\n        this.replaceText();\r\n        this.replaceAttributes();\r\n    }\n/**\n * @return {?}\n */\nprotected replaceText(): void {\r\n        if (!!this.key) {\r\n            this.setText(this.getValues(this.key));\r\n        }\r\n    }\n/**\n * @return {?}\n */\nprotected replaceAttributes(): void {\r\n        if (this.attributes.length > 0) {\r\n            this.setAttributes(this.getAttributesData());\r\n        }\r\n    }\n/**\n * @param {?} keys\n * @return {?}\n */\nprotected getValues(keys: string | string[]): string | any {\r\n        return this.localeCurrencyPipe.transform(\r\n            keys,\r\n            this.locale.getDefaultLocale(),\r\n            this.locale.getCurrentCurrency(),\r\n            this.symbol,\r\n            this.digits\r\n        );\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n    selector: '[l10nCurrency],[localeCurrency]'\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: LocaleService, },\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'l10nCurrency': [{ type: Input },],\n'localeCurrency': [{ type: Input },],\n'symbol': [{ type: Input },],\n};\n}\n\nfunction LocaleCurrencyDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nLocaleCurrencyDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocaleCurrencyDirective.ctorParameters;\n/** @type {?} */\nLocaleCurrencyDirective.propDecorators;\n/** @type {?} */\nLocaleCurrencyDirective.prototype.symbol;\n/** @type {?} */\nLocaleCurrencyDirective.prototype.digits;\n/** @type {?} */\nLocaleCurrencyDirective.prototype.localeCurrencyPipe;\n/** @type {?} */\nLocaleCurrencyDirective.prototype.locale;\n/** @type {?} */\nLocaleCurrencyDirective.prototype.el;\n/** @type {?} */\nLocaleCurrencyDirective.prototype.renderer;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\r\n\r\nimport { LocaleService } from '../services/locale.service';\r\nimport { BaseDirective } from '../models/base-directive';\r\nimport { LocaleDatePipe } from '../pipes/locale-date.pipe';\nexport class LocaleDateDirective extends BaseDirective {\n/**\n * @param {?} pattern\n * @return {?}\n */\nset l10nDate(pattern: string) {\r\n        this.pattern = pattern;\r\n    }\n/**\n * @param {?} pattern\n * @return {?}\n */\nset localeDate(pattern: string) {\r\n        this.pattern = pattern;\r\n    }\nprivate pattern: string;\nprivate defaultPattern: string = 'mediumDate';\nprivate localeDatePipe: LocaleDatePipe = new LocaleDatePipe();\n/**\n * @param {?} locale\n * @param {?} el\n * @param {?} renderer\n */\nconstructor(protected locale: LocaleService, protected el: ElementRef, protected renderer: Renderer2) {\r\n        super(el, renderer);\r\n    }\n/**\n * @return {?}\n */\nprotected setup(): void {\r\n        this.replace();\r\n        this.subscriptions.push(this.locale.defaultLocaleChanged.subscribe(\r\n            () => { this.replace(); }\r\n        ));\r\n    }\n/**\n * @return {?}\n */\nprotected replace(): void {\r\n        this.replaceText();\r\n        this.replaceAttributes();\r\n    }\n/**\n * @return {?}\n */\nprotected replaceText(): void {\r\n        if (!!this.key) {\r\n            this.setText(this.getValues(this.key));\r\n        }\r\n    }\n/**\n * @return {?}\n */\nprotected replaceAttributes(): void {\r\n        if (this.attributes.length > 0) {\r\n            this.setAttributes(this.getAttributesData());\r\n        }\r\n    }\n/**\n * @param {?} keys\n * @return {?}\n */\nprotected getValues(keys: string | string[]): string | any {\r\n        return this.localeDatePipe.transform(\r\n            keys,\r\n            this.locale.getDefaultLocale(),\r\n            this.pattern || this.defaultPattern\r\n        );\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n    selector: '[l10nDate],[localeDate]'\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: LocaleService, },\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'l10nDate': [{ type: Input },],\n'localeDate': [{ type: Input },],\n};\n}\n\nfunction LocaleDateDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nLocaleDateDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocaleDateDirective.ctorParameters;\n/** @type {?} */\nLocaleDateDirective.propDecorators;\n/** @type {?} */\nLocaleDateDirective.prototype.pattern;\n/** @type {?} */\nLocaleDateDirective.prototype.defaultPattern;\n/** @type {?} */\nLocaleDateDirective.prototype.localeDatePipe;\n/** @type {?} */\nLocaleDateDirective.prototype.locale;\n/** @type {?} */\nLocaleDateDirective.prototype.el;\n/** @type {?} */\nLocaleDateDirective.prototype.renderer;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\r\n\r\nimport { TranslationService } from '../services/translation.service';\r\nimport { BaseDirective } from '../models/base-directive';\nexport class TranslateDirective extends BaseDirective {\n/**\n * @param {?} params\n * @return {?}\n */\nset l10nTranslate(params: string) {\r\n        this.params = params;\r\n    }\n/**\n * @param {?} params\n * @return {?}\n */\nset translate(params: string) {\r\n        this.params = params;\r\n    }\nprivate params: string;\n/**\n * @param {?} translation\n * @param {?} el\n * @param {?} renderer\n */\nconstructor(protected translation: TranslationService, protected el: ElementRef, protected renderer: Renderer2) {\r\n        super(el, renderer);\r\n    }\n/**\n * @return {?}\n */\nprotected setup(): void {\r\n        this.replace();\r\n        this.subscriptions.push(this.translation.translationChanged.subscribe(\r\n            () => { this.replace(); }\r\n        ));\r\n    }\n/**\n * @return {?}\n */\nprotected replace(): void {\r\n        this.replaceText();\r\n        this.replaceAttributes();\r\n    }\n/**\n * @return {?}\n */\nprotected replaceText(): void {\r\n        if (!!this.key) {\r\n            this.setText(this.getValues(this.key));\r\n        }\r\n    }\n/**\n * @return {?}\n */\nprotected replaceAttributes(): void {\r\n        if (this.attributes.length > 0) {\r\n            const /** @type {?} */ keys: string[] = this.getAttributesKeys();\r\n            this.setAttributes(this.getValues(keys));\r\n        }\r\n    }\n/**\n * @param {?} keys\n * @return {?}\n */\nprotected getValues(keys: string | string[]): string | any {\r\n        return this.translation.translate(keys, this.params);\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n    selector: '[l10nTranslate],[translate]'\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TranslationService, },\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'l10nTranslate': [{ type: Input },],\n'translate': [{ type: Input },],\n};\n}\n\nfunction TranslateDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nTranslateDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTranslateDirective.ctorParameters;\n/** @type {?} */\nTranslateDirective.propDecorators;\n/** @type {?} */\nTranslateDirective.prototype.params;\n/** @type {?} */\nTranslateDirective.prototype.translation;\n/** @type {?} */\nTranslateDirective.prototype.el;\n/** @type {?} */\nTranslateDirective.prototype.renderer;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n    ElementRef,\n    Input,\n    Renderer2,\n    AfterViewInit,\n    OnChanges,\n    SimpleChanges,\n    OnDestroy\n} from '@angular/core';\nimport { ISubscription } from 'rxjs/Subscription';\n\nimport { BFS } from './bfs';\n/**\n * @abstract\n */\nexport abstract class BaseDirective implements AfterViewInit, OnChanges, OnDestroy {\npublic valueAttribute: string;\npublic innerHTMLProperty: string;\n\n    protected key: string;\n    protected attributes: any[] = [];\n\n    protected subscriptions: ISubscription[] = [];\nprivate element: any;\nprivate renderNode: any;\nprivate nodeValue: string;\nprivate textObserver: MutationObserver;\nprivate readonly TEXT_MUTATION_CONFIG: any = { subtree: true, characterData: true };\nprivate readonly SELECTOR: RegExp = /^l10n-/;\n/**\n * @param {?} el\n * @param {?} renderer\n */\nconstructor(protected el: ElementRef, protected renderer: Renderer2) { }\n/**\n * @return {?}\n */\npublic ngAfterViewInit(): void {\n        if (this.el && this.el.nativeElement) {\n            this.element = this.el.nativeElement;\n            this.renderNode = BFS.getTargetNode(this.element);\n            this.getKey();\n            this.getAttributes();\n            this.addTextListener();\n            this.setup();\n        }\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\npublic ngOnChanges(changes: SimpleChanges): void {\n        if (!!this.key) {\n            if (this.nodeValue == null || this.nodeValue == \"\") {\n                if (!!this.valueAttribute) {\n                    this.key = this.valueAttribute;\n                } else if (!!this.innerHTMLProperty) {\n                    this.key = this.innerHTMLProperty;\n                }\n            }\n            this.replaceText();\n        }\n        if (this.attributes.length > 0) {\n            this.replaceAttributes();\n        }\n    }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n        this.removeTextListener();\n        this.cancelSubscriptions();\n    }\n/**\n * @abstract\n * @return {?}\n */\nsetup() {}\n/**\n * @abstract\n * @return {?}\n */\nreplace() {}\n/**\n * @abstract\n * @return {?}\n */\nreplaceText() {}\n/**\n * @abstract\n * @return {?}\n */\nreplaceAttributes() {}\n/**\n * @return {?}\n */\nprotected getAttributesData(): any {\n        const /** @type {?} */ keys: string[] = this.getAttributesKeys();\n        const /** @type {?} */ data: any = {};\n        for (const /** @type {?} */ key of keys) {\n            data[key] = this.getValues(key);\n        }\n        return data;\n    }\n/**\n * @return {?}\n */\nprotected getAttributesKeys(): string[] {\n        return this.attributes.map((attr: any) => attr.key);\n    }\n/**\n * @abstract\n * @param {?} keys\n * @return {?}\n */\ngetValues(keys: string | string[]) {}\n/**\n * @param {?} value\n * @return {?}\n */\nprotected setText(value: string): void {\n        if (!!value) {\n            if (!!this.nodeValue && !!this.key) {\n                this.removeTextListener();\n                this.renderer.setValue(this.renderNode, this.nodeValue.replace(this.key, value));\n                this.addTextListener();\n            } else if (!!this.valueAttribute) {\n                this.renderer.setAttribute(this.element, \"value\", value);\n            } else if (!!this.innerHTMLProperty) {\n                this.renderer.setProperty(this.element, \"innerHTML\", value);\n            }\n        }\n    }\n/**\n * @param {?} data\n * @return {?}\n */\nprotected setAttributes(data: any): void {\n        for (const /** @type {?} */ attr of this.attributes) {\n            this.renderer.setAttribute(this.element, attr.name, data[attr.key]);\n        }\n    }\n/**\n * @return {?}\n */\nprivate addTextListener(): void {\n        if (typeof MutationObserver !== \"undefined\") {\n            this.textObserver = new MutationObserver((mutations: MutationRecord[]) => {\n                this.renderNode = BFS.getTargetNode(this.element);\n                this.getKey();\n                this.replaceText();\n            });\n            this.textObserver.observe(this.renderNode, this.TEXT_MUTATION_CONFIG);\n        }\n    }\n/**\n * @return {?}\n */\nprivate removeTextListener(): void {\n        if (typeof this.textObserver !== \"undefined\") {\n            this.textObserver.disconnect();\n        }\n    }\n/**\n * @return {?}\n */\nprivate getText(): string {\n        this.nodeValue = this.renderNode != null ? /** @type {?} */(( this.renderNode.nodeValue as string)) : \"\";\n        return !!this.nodeValue ? this.nodeValue.trim() : \"\";\n    }\n/**\n * @return {?}\n */\nprivate getKey(): void {\n        if (this.element.childNodes.length > 0) {\n            this.key = this.getText();\n        } else if (!!this.valueAttribute) {\n            this.key = this.valueAttribute;\n        } else if (!!this.innerHTMLProperty) {\n            this.key = this.innerHTMLProperty;\n        }\n    }\n/**\n * @return {?}\n */\nprivate getAttributes(): void {\n        if (this.element.attributes) {\n            for (const /** @type {?} */ attr of this.element.attributes) {\n                if (this.SELECTOR.test(attr.name)) {\n                    const /** @type {?} */ name: string = attr.name.substr(5);\n                    for (const /** @type {?} */ targetAttr of this.element.attributes) {\n                        if (new RegExp(\"^\" + name + \"$\").test(targetAttr.name)) {\n                            this.attributes.push({ name: name, key: targetAttr.value });\n                        }\n                    }\n                }\n            }\n        }\n    }\n/**\n * @return {?}\n */\nprivate cancelSubscriptions(): void {\n        this.subscriptions.forEach((subscription: ISubscription) => {\n            if (typeof subscription !== \"undefined\") {\n                subscription.unsubscribe();\n            }\n        });\n    }\n\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'valueAttribute': [{ type: Input, args: ['value', ] },],\n'innerHTMLProperty': [{ type: Input, args: ['innerHTML', ] },],\n};\n}\n\nfunction BaseDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nBaseDirective.propDecorators;\n/** @type {?} */\nBaseDirective.prototype.valueAttribute;\n/** @type {?} */\nBaseDirective.prototype.innerHTMLProperty;\n/** @type {?} */\nBaseDirective.prototype.key;\n/** @type {?} */\nBaseDirective.prototype.attributes;\n/** @type {?} */\nBaseDirective.prototype.subscriptions;\n/** @type {?} */\nBaseDirective.prototype.element;\n/** @type {?} */\nBaseDirective.prototype.renderNode;\n/** @type {?} */\nBaseDirective.prototype.nodeValue;\n/** @type {?} */\nBaseDirective.prototype.textObserver;\n/** @type {?} */\nBaseDirective.prototype.TEXT_MUTATION_CONFIG;\n/** @type {?} */\nBaseDirective.prototype.SELECTOR;\n/** @type {?} */\nBaseDirective.prototype.el;\n/** @type {?} */\nBaseDirective.prototype.renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * Breadth First Search (BFS) algorithm for traversing & searching tree data structure of DOM\n * explores the neighbor nodes first, before moving to the next level neighbors.\n * Time complexity: between O(1) and O(|V|^2).\n */\nexport class BFS {\nprivate static readonly SELECTOR: RegExp = /^l10n|translate|locale/;\nprivate static readonly MAX_DEPTH: number = 10;\n/**\n * Target node is a non empty text node.\n * @param {?} rootNode\n * @return {?}\n */\npublic static getTargetNode(rootNode: any): any {\n        return this.walk(rootNode);\n    }\n/**\n * @param {?} rootNode\n * @return {?}\n */\nprivate static walk(rootNode: any): any {\n        const /** @type {?} */ queue: any[] = [];\n\n        let /** @type {?} */ iNode: any;\n        let /** @type {?} */ depth: number = 0;\n        let /** @type {?} */ nodeToDepthIncrease: number = 1;\n\n        queue.push(rootNode);\n        while (queue.length > 0 && depth <= this.MAX_DEPTH) {\n            iNode = queue.shift();\n            if (this.isTargetNode(iNode)) {\n                return iNode;\n            }\n            if (depth < this.MAX_DEPTH && iNode.childNodes != null) {\n                for (const /** @type {?} */ child of iNode.childNodes) {\n                    if (this.isValidNode(child)) {\n                        queue.push(child);\n                    }\n                }\n            }\n            if (--nodeToDepthIncrease == 0) {\n                depth++;\n                nodeToDepthIncrease = queue.length;\n            }\n        }\n        return rootNode;\n    }\n/**\n * @param {?} node\n * @return {?}\n */\nprivate static isTargetNode(node: any): boolean {\n        return typeof node !== \"undefined\" &&\n            node.nodeType == 3 &&\n            node.nodeValue != null &&\n            node.nodeValue.trim() != \"\";\n    }\n/**\n * A valid node is not marked for translation.\n * @param {?} node\n * @return {?}\n */\nprivate static isValidNode(node: any): boolean {\n        if (typeof node !== \"undefined\" && node.nodeType == 1 && node.attributes) {\n            for (const /** @type {?} */ attr of node.attributes) {\n                if (this.SELECTOR.test(attr.name)) return false;\n            }\n        }\n        return true;\n    }\n\n}\n\nfunction BFS_tsickle_Closure_declarations() {\n/** @type {?} */\nBFS.SELECTOR;\n/** @type {?} */\nBFS.MAX_DEPTH;\n}\n\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DecimalPipe, PercentPipe, CurrencyPipe } from '@angular/common';\r\n\r\nimport { IntlAPI } from '../services/intl-api';\nexport class LocaleDecimalPipe implements PipeTransform {\n/**\n * @param {?} value\n * @param {?} defaultLocale\n * @param {?=} digits\n * @return {?}\n */\npublic transform(value: any, defaultLocale: string, digits?: string): string | null {\r\n        if (typeof defaultLocale === \"undefined\") return null;\r\n\r\n        if (IntlAPI.hasNumberFormat()) {\r\n            const /** @type {?} */ localeDecimal: DecimalPipe = new DecimalPipe(defaultLocale);\r\n            return localeDecimal.transform(value, digits);\r\n        }\r\n        // Returns the number without localization.\r\n        return value;\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\r\n    name: 'localeDecimal',\r\n    pure: true\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LocaleDecimalPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nLocaleDecimalPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocaleDecimalPipe.ctorParameters;\n}\n\nexport class LocalePercentPipe implements PipeTransform {\n/**\n * @param {?} value\n * @param {?} defaultLocale\n * @param {?=} digits\n * @return {?}\n */\npublic transform(value: any, defaultLocale: string, digits?: string): string | null {\r\n        if (typeof defaultLocale === \"undefined\") return null;\r\n\r\n        if (IntlAPI.hasNumberFormat()) {\r\n            const /** @type {?} */ localePercent: PercentPipe = new PercentPipe(defaultLocale);\r\n            return localePercent.transform(value, digits);\r\n        }\r\n        // Returns the number without localization.\r\n        return value;\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\r\n    name: 'localePercent',\r\n    pure: true\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LocalePercentPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nLocalePercentPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocalePercentPipe.ctorParameters;\n}\n\nexport class LocaleCurrencyPipe implements PipeTransform {\n/**\n * @param {?} value\n * @param {?} defaultLocale\n * @param {?} currency\n * @param {?=} symbolDisplay\n * @param {?=} digits\n * @return {?}\n */\npublic transform(\r\n        value: any,\r\n        defaultLocale: string,\r\n        currency: string,\r\n        symbolDisplay: boolean = false,\r\n        digits?: string\r\n    ): string | null {\r\n        if (typeof defaultLocale === \"undefined\" || typeof currency === \"undefined\") return null;\r\n\r\n        if (IntlAPI.hasNumberFormat()) {\r\n            const /** @type {?} */ localeCurrency: CurrencyPipe = new CurrencyPipe(defaultLocale);\r\n            return localeCurrency.transform(value, currency, symbolDisplay, digits);\r\n        }\r\n        // Returns the number & currency without localization.\r\n        return value + \" \" + currency;\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\r\n    name: 'localeCurrency',\r\n    pure: true\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LocaleCurrencyPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nLocaleCurrencyPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocaleCurrencyPipe.ctorParameters;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\n\r\nimport { IntlAPI } from '../services/intl-api';\nexport class LocaleDatePipe implements PipeTransform {\n/**\n * @param {?} value\n * @param {?} defaultLocale\n * @param {?=} pattern\n * @return {?}\n */\npublic transform(value: any, defaultLocale: string, pattern: string = 'mediumDate'): string | null {\r\n        if (typeof defaultLocale === \"undefined\") return null;\r\n\r\n        if (IntlAPI.hasDateTimeFormat()) {\r\n            const /** @type {?} */ localeDate: DatePipe = new DatePipe(defaultLocale);\r\n            return localeDate.transform(value, pattern);\r\n        }\r\n        // Returns the date without localization.\r\n        return value;\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\r\n    name: 'localeDate',\r\n    pure: true\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LocaleDatePipe_tsickle_Closure_declarations() {\n/** @type {?} */\nLocaleDatePipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocaleDatePipe.ctorParameters;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { TranslationService } from '../services/translation.service';\nexport class TranslatePipe implements PipeTransform {\n/**\n * @param {?} translation\n */\nconstructor(protected translation: TranslationService) { }\n/**\n * @param {?} key\n * @param {?} lang\n * @param {?=} args\n * @return {?}\n */\npublic transform(key: string, lang: string, args?: any): string {\r\n        return this.translation.translate(key, args, lang);\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\r\n    name: 'translate',\r\n    pure: true\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TranslationService, },\n];\n}\n\nfunction TranslatePipe_tsickle_Closure_declarations() {\n/** @type {?} */\nTranslatePipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTranslatePipe.ctorParameters;\n/** @type {?} */\nTranslatePipe.prototype.translation;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ISubscription } from 'rxjs/Subscription';\r\n\r\nimport { LocaleService } from '../services/locale.service';\r\nimport { InjectorRef } from '../models/injector-ref';\r\nimport { PropertyDecorator } from '../models/types';\n/**\n * Property decorator for components to provide the parameter to the localeCurrency pipe.\n * @return {?}\n */\nexport function Currency(): PropertyDecorator {\n/**\n * @param {?} target\n * @param {?=} propertyKey\n * @return {?}\n */\nfunction DecoratorFactory(target: any, propertyKey?: string): void {\r\n        let /** @type {?} */ subscription: ISubscription;\r\n\r\n        const /** @type {?} */ targetNgOnInit: Function = target.ngOnInit;\n/**\n * @this {?}\n * @return {?}\n */\nfunction ngOnInit(this: any): void {\r\n            const /** @type {?} */ locale: LocaleService = InjectorRef.get(LocaleService);\r\n\r\n            if (typeof propertyKey !== \"undefined\") {\r\n                this[propertyKey] = locale.getCurrentCurrency();\r\n                // When the currency changes, subscribes to the event & updates currency property.\r\n                subscription = locale.currencyCodeChanged.subscribe(\r\n                    (currency: string) => {\r\n                        this[propertyKey] = currency;\r\n                    });\r\n            }\r\n\r\n            if (targetNgOnInit) {\r\n                targetNgOnInit.apply(this);\r\n            }\r\n        }\r\n        target.ngOnInit = ngOnInit;\r\n\r\n        const /** @type {?} */ targetNgOnDestroy: Function = target.ngOnDestroy;\n/**\n * @this {?}\n * @return {?}\n */\nfunction ngOnDestroy(this: any): void {\r\n            if (typeof subscription !== \"undefined\") {\r\n                subscription.unsubscribe();\r\n            }\r\n\r\n            if (targetNgOnDestroy) {\r\n                targetNgOnDestroy.apply(this);\r\n            }\r\n        }\r\n        target.ngOnDestroy = ngOnDestroy;\r\n\r\n        if (typeof propertyKey !== \"undefined\") {\r\n            Object.defineProperty(target, propertyKey, {\r\n                writable: true,\r\n                value: undefined\r\n            });\r\n        }\r\n    }\r\n\r\n    return DecoratorFactory;\r\n\r\n}\r\n","import { ISubscription } from 'rxjs/Subscription';\r\n\r\nimport { LocaleService } from '../services/locale.service';\r\nimport { InjectorRef } from '../models/injector-ref';\r\nimport { PropertyDecorator } from '../models/types';\n/**\n * Property decorator for components to provide the parameter\rto localeDecimal, localePercent & localeCurrency pipes.\n * @return {?}\n */\nexport function DefaultLocale(): PropertyDecorator {\n/**\n * @param {?} target\n * @param {?=} propertyKey\n * @return {?}\n */\nfunction DecoratorFactory(target: any, propertyKey?: string): void {\r\n        let /** @type {?} */ subscription: ISubscription;\r\n\r\n        const /** @type {?} */ targetNgOnInit: Function = target.ngOnInit;\n/**\n * @this {?}\n * @return {?}\n */\nfunction ngOnInit(this: any): void {\r\n            const /** @type {?} */ locale: LocaleService = InjectorRef.get(LocaleService);\r\n\r\n            if (typeof propertyKey !== \"undefined\") {\r\n                this[propertyKey] = locale.getDefaultLocale();\r\n                // When the default locale changes, subscribes to the event & updates defaultLocale property.\r\n                subscription = locale.defaultLocaleChanged.subscribe(\r\n                    (defaultLocale: string) => {\r\n                        this[propertyKey] = defaultLocale;\r\n                    });\r\n            }\r\n\r\n            if (targetNgOnInit) {\r\n                targetNgOnInit.apply(this);\r\n            }\r\n        }\r\n        target.ngOnInit = ngOnInit;\r\n\r\n        const /** @type {?} */ targetNgOnDestroy: Function = target.ngOnDestroy;\n/**\n * @this {?}\n * @return {?}\n */\nfunction ngOnDestroy(this: any): void {\r\n            if (typeof subscription !== \"undefined\") {\r\n                subscription.unsubscribe();\r\n            }\r\n\r\n            if (targetNgOnDestroy) {\r\n                targetNgOnDestroy.apply(this);\r\n            }\r\n        }\r\n        target.ngOnDestroy = ngOnDestroy;\r\n\r\n        if (typeof propertyKey !== \"undefined\") {\r\n            Object.defineProperty(target, propertyKey, {\r\n                writable: true,\r\n                value: undefined\r\n            });\r\n        }\r\n    }\r\n\r\n    return DecoratorFactory;\r\n\r\n}\r\n","import { ISubscription } from 'rxjs/Subscription';\r\n\r\nimport { TranslationService } from '../services/translation.service';\r\nimport { InjectorRef } from '../models/injector-ref';\r\nimport { PropertyDecorator } from '../models/types';\n/**\n * Property decorator for components to provide the parameter to the translate pipe.\n * @return {?}\n */\nexport function Language(): PropertyDecorator {\n/**\n * @param {?} target\n * @param {?=} propertyKey\n * @return {?}\n */\nfunction DecoratorFactory(target: any, propertyKey?: string): void {\r\n        let /** @type {?} */ subscription: ISubscription;\r\n\r\n        const /** @type {?} */ targetNgOnInit: Function = target.ngOnInit;\n/**\n * @this {?}\n * @return {?}\n */\nfunction ngOnInit(this: any): void {\r\n            const /** @type {?} */ translation: TranslationService = InjectorRef.get(TranslationService);\r\n\r\n            if (typeof propertyKey !== \"undefined\") {\r\n                this[propertyKey] = translation.getLanguage();\r\n                // When the language changes, subscribes to the event & updates language property.\r\n                subscription = translation.translationChanged.subscribe(\r\n                    (language: string) => {\r\n                        this[propertyKey] = language;\r\n                    });\r\n            }\r\n\r\n            if (targetNgOnInit) {\r\n                targetNgOnInit.apply(this);\r\n            }\r\n        }\r\n        target.ngOnInit = ngOnInit;\r\n\r\n        const /** @type {?} */ targetNgOnDestroy: Function = target.ngOnDestroy;\n/**\n * @this {?}\n * @return {?}\n */\nfunction ngOnDestroy(this: any): void {\r\n            if (typeof subscription !== \"undefined\") {\r\n                subscription.unsubscribe();\r\n            }\r\n\r\n            if (targetNgOnDestroy) {\r\n                targetNgOnDestroy.apply(this);\r\n            }\r\n        }\r\n        target.ngOnDestroy = ngOnDestroy;\r\n\r\n        if (typeof propertyKey !== \"undefined\") {\r\n            Object.defineProperty(target, propertyKey, {\r\n                writable: true,\r\n                value: undefined\r\n            });\r\n        }\r\n    }\r\n\r\n    return DecoratorFactory;\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observer } from 'rxjs/Observer';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport { LocaleService } from './locale.service';\r\nimport { TranslationService } from './translation.service';\r\nimport { IntlAPI } from './intl-api';\r\n\r\n/**\r\n * Intl.Collator APIs.\r\n */\r\nexport interface ICollator {\r\n\r\n    /**\r\n     * Compares two keys by the value of translation according to the current language.\r\n     * @param key1, key2 The keys of the values to compare\r\n     * @param extension Unicode extension key, e.g. 'co-phonebk'\r\n     * @param options Default is { usage: 'sort', sensitivity: 'variant' }\r\n     * @return A negative value if the value of translation of key1 comes before the value of translation of key2;\r\n     *         a positive value if key1 comes after key2;\r\n     *         0 if they are considered equal or Intl.Collator is not supported\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Collator\r\n     */\r\n    compare(\r\n        key1: string,\r\n        key2: string,\r\n        extension?: string,\r\n        options?: any\r\n    ): number;\r\n\r\n    /**\r\n     * Sorts an array of objects or an array of arrays according to the current language.\r\n     * @param list The array to be sorted\r\n     * @param keyName The column that contains the keys of the values to be ordered\r\n     * @param order 'asc' or 'desc'. The default value is 'asc'\r\n     * @param extension Unicode extension key, e.g. 'co-phonebk'\r\n     * @param options Default is { usage: 'sort', sensitivity: 'variant' }\r\n     * @return The same sorted list or the same list if Intl.Collator is not supported\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Collator\r\n     */\r\n    sort(\r\n        list: any[],\r\n        keyName: any,\r\n        order?: string,\r\n        extension?: string,\r\n        options?: any\r\n    ): any[];\r\n\r\n    /**\r\n     * Sorts asynchronously an array of objects or an array of arrays according to the current language.\r\n     * @param list The array to be sorted\r\n     * @param keyName The column that contains the keys of the values to be ordered\r\n     * @param order 'asc' or 'desc'. The default value is 'asc'\r\n     * @param extension Unicode extension key, e.g. 'co-phonebk'\r\n     * @param options Default is { usage: 'sort', sensitivity: 'variant' }\r\n     * @return An observable of the sorted list or of the same list if Intl.Collator is not supported\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Collator\r\n     */\r\n    sortAsync(\r\n        list: any[],\r\n        keyName: any,\r\n        order?: string,\r\n        extension?: string,\r\n        options?: any\r\n    ): Observable<any[]>;\r\n\r\n    /**\r\n     * Matches a string into an array of objects or an array of arrays\r\n     * according to the current language.\r\n     * @param s The string to search\r\n     * @param list The array in which to search\r\n     * @param keyNames An array that contains the columns to look for\r\n     * @param options Default is { usage: 'search' }\r\n     * @return A filtered list or the same list if Intl.Collator is not supported\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Collator\r\n     */\r\n    search(\r\n        s: string,\r\n        list: any[],\r\n        keyNames: any[],\r\n        options?: any\r\n    ): any[];\r\n\r\n    /**\r\n     * Matches asynchronously a string into an array of objects or an array of arrays\r\n     * according to the current language.\r\n     * @param s The string to search\r\n     * @param list The array in which to search\r\n     * @param keyNames An array that contains the columns to look for\r\n     * @param options Default is { usage: 'search' }\r\n     * @return An observable of the filtered list or the same list if Intl.Collator is not supported\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Collator\r\n     */\r\n    searchAsync(\r\n        s: string,\r\n        list: any[],\r\n        keyNames: any[],\r\n        options?: any\r\n    ): Observable<any[]>;\r\n\r\n}\nexport class Collator implements ICollator {\n/**\n * @param {?} locale\n * @param {?} translation\n */\nconstructor(private locale: LocaleService,\nprivate translation: TranslationService) { }\n/**\n * @param {?} key1\n * @param {?} key2\n * @param {?=} extension\n * @param {?=} options\n * @return {?}\n */\npublic compare(\r\n        key1: string,\r\n        key2: string,\r\n        extension?: string,\r\n        options: any = { usage: 'sort', sensitivity: 'variant' }\r\n    ): number {\r\n        if (!IntlAPI.hasCollator()) {\r\n            return 0;\r\n        }\r\n\r\n        const /** @type {?} */ value1: string = this.translation.translate(key1);\r\n        const /** @type {?} */ value2: string = this.translation.translate(key2);\r\n\r\n        const /** @type {?} */ locale: string = this.addExtension(\r\n            this.locale.getCurrentLocale(),\r\n            extension\r\n        );\r\n        return new Intl.Collator(locale, options).compare(value1, value2);\r\n    }\n/**\n * @param {?} list\n * @param {?} keyName\n * @param {?=} order\n * @param {?=} extension\n * @param {?=} options\n * @return {?}\n */\npublic sort(\r\n        list: any[],\r\n        keyName: any,\r\n        order: string = \"asc\",\r\n        extension?: string,\r\n        options: any = { usage: 'sort', sensitivity: 'variant' }\r\n    ): any[] {\r\n        if (!list || !keyName || !IntlAPI.hasCollator()) {\r\n            return list;\r\n        }\r\n\r\n        list.sort((key1: any, key2: any) => {\r\n            return this.compare(key1[keyName], key2[keyName], extension, options);\r\n        });\r\n\r\n        if (order == \"desc\") {\r\n            list.reverse();\r\n        }\r\n        return list;\r\n    }\n/**\n * @param {?} list\n * @param {?} keyName\n * @param {?=} order\n * @param {?=} extension\n * @param {?=} options\n * @return {?}\n */\npublic sortAsync(\r\n        list: any[],\r\n        keyName: any,\r\n        order?: string,\r\n        extension?: string,\r\n        options: any = { usage: 'sort', sensitivity: 'variant' }\r\n    ): Observable<any[]> {\r\n        return Observable.create((observer: Observer<any[]>) => {\r\n            observer.next(this.sort(list, keyName, order, extension, options));\r\n            observer.complete();\r\n        });\r\n    }\n/**\n * @param {?} s\n * @param {?} list\n * @param {?} keyNames\n * @param {?=} options\n * @return {?}\n */\npublic search(\r\n        s: string,\r\n        list: any[],\r\n        keyNames: any[],\r\n        options: any = { usage: 'search' }\r\n    ): any[] {\r\n        if (!list || !keyNames || s == \"\" || s == null || !IntlAPI.hasCollator()) {\r\n            return list;\r\n        }\r\n\r\n        const /** @type {?} */ locale: string = this.locale.getCurrentLocale();\r\n        const /** @type {?} */ collator: Intl.Collator = new Intl.Collator(locale, options);\r\n\r\n        const /** @type {?} */ matches: any[] = list.filter((key: any) => {\r\n            let /** @type {?} */ found: boolean = false;\r\n            for (let /** @type {?} */ i: number = 0; i < keyNames.length; i++) {\r\n                if (this.match(key[keyNames[i]], s, collator)) {\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n            return found;\r\n        });\r\n        return matches;\r\n    }\n/**\n * @param {?} s\n * @param {?} list\n * @param {?} keyNames\n * @param {?=} options\n * @return {?}\n */\npublic searchAsync(\r\n        s: string,\r\n        list: any[],\r\n        keyNames: any[],\r\n        options: any = { usage: 'search' }\r\n    ): Observable<any[]> {\r\n        return Observable.create((observer: Observer<any[]>) => {\r\n            observer.next(this.search(s, list, keyNames, options));\r\n            observer.complete();\r\n        });\r\n    }\n/**\n * @param {?} locale\n * @param {?=} extension\n * @return {?}\n */\nprivate addExtension(locale: string, extension?: string): string {\r\n        if (!!extension) {\r\n            locale = locale + \"-u-\" + extension;\r\n        }\r\n        return locale;\r\n    }\n/**\n * @param {?} key\n * @param {?} s\n * @param {?} collator\n * @return {?}\n */\nprivate match(key: string, s: string, collator: Intl.Collator): boolean {\r\n        const /** @type {?} */ value: string = this.translation.translate(key);\r\n        const /** @type {?} */ valueLength: number = value.length;\r\n        const /** @type {?} */ sLength: number = s.length;\r\n\r\n        if (sLength > valueLength) {\r\n            return false;\r\n        }\r\n        if (sLength == valueLength) {\r\n            return collator.compare(value, s) == 0;\r\n        }\r\n\r\n        let /** @type {?} */ found: boolean = false;\r\n        for (let /** @type {?} */ i: number = 0; i < valueLength - (sLength - 1); i++) {\r\n            const /** @type {?} */ str: string = value.substr(i, sLength);\r\n            if (collator.compare(str, s) == 0) {\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n        return found;\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: LocaleService, },\n{type: TranslationService, },\n];\n}\n\nfunction Collator_tsickle_Closure_declarations() {\n/** @type {?} */\nCollator.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCollator.ctorParameters;\n/** @type {?} */\nCollator.prototype.locale;\n/** @type {?} */\nCollator.prototype.translation;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\r\n\r\nimport { DecimalCode } from '../models/validation/decimal-code';\r\n\r\n/**\r\n * Provides the methods to convert strings according to default locale.\r\n */\r\nexport interface ILocaleValidation {\r\n\r\n    /**\r\n     * Converts a string to a number according to default locale.\r\n     * If the string cannot be converted to a number, returns NaN.\r\n     */\r\n    parseNumber(s: string): number | null;\r\n\r\n}\nexport class LocaleValidation implements ILocaleValidation {\n/**\n * @param {?} decimalCode\n */\nconstructor(private decimalCode: DecimalCode) { }\n/**\n * @param {?} s\n * @return {?}\n */\npublic parseNumber(s: string): number | null {\r\n        if (s == \"\") {\r\n            return null;\r\n        }\r\n        return this.decimalCode.parse(s);\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DecimalCode, },\n];\n}\n\nfunction LocaleValidation_tsickle_Closure_declarations() {\n/** @type {?} */\nLocaleValidation.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocaleValidation.ctorParameters;\n/** @type {?} */\nLocaleValidation.prototype.decimalCode;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\r\n\r\nimport { NumberCode } from './number-code';\r\nimport { LocaleService } from '../../services/locale.service';\r\nimport { IntlAPI } from '../../services/intl-api';\r\nimport { Decimal } from '../types';\nexport class DecimalCode extends NumberCode {\n/**\n * @return {?}\n */\nprotected get decimalCodes(): Decimal {\r\n        let /** @type {?} */ decimalCodes: Decimal = {\r\n            minusSign: this.toUnicode(\"-\"),\r\n            decimalSeparator: this.toUnicode(\".\"),\r\n            thousandSeparator: this.toUnicode(\",\")\r\n        };\r\n\r\n        if (IntlAPI.hasNumberFormat()) {\r\n            const /** @type {?} */ value: number = -1000.9; // Reference value.\r\n            const /** @type {?} */ localeValue: string = new Intl.NumberFormat(this.locale.getDefaultLocale()).format(value);\r\n\r\n            const /** @type {?} */ unicodeChars: string[] = [];\r\n            for (let /** @type {?} */ i: number = 0; i <= 7; i++) {\r\n                unicodeChars.push(this.toUnicode(localeValue.charAt(i)));\r\n            }\r\n\r\n            // Right to left:\r\n            // checks Unicode characters 'RIGHT-TO-LEFT MARK' (U+200F) & 'Arabic Letter Mark' (U+061C),\r\n            // or the reverse order.\r\n            // Left to right:\r\n            // checks Unicode character 'LEFT-TO-RIGHT MARK' (U+200E).\r\n            if (unicodeChars[0] == \"\\\\u200F\" || unicodeChars[0] == \"\\\\u061C\") {\r\n                decimalCodes = {\r\n                    minusSign: unicodeChars[1],\r\n                    decimalSeparator: unicodeChars[7],\r\n                    thousandSeparator: unicodeChars[3]\r\n                };\r\n            } else if (unicodeChars[0] == this.toUnicode(\r\n                new Intl.NumberFormat(this.locale.getDefaultLocale()).format(1))\r\n            ) {\r\n                decimalCodes = {\r\n                    minusSign: unicodeChars[7],\r\n                    decimalSeparator: unicodeChars[5],\r\n                    thousandSeparator: unicodeChars[1]\r\n                };\r\n            } else if (unicodeChars[0] == \"\\\\u200E\") {\r\n                decimalCodes = {\r\n                    minusSign: unicodeChars[1],\r\n                    decimalSeparator: unicodeChars[7],\r\n                    thousandSeparator: unicodeChars[3]\r\n                };\r\n            } else {\r\n                decimalCodes = {\r\n                    minusSign: unicodeChars[0],\r\n                    decimalSeparator: unicodeChars[6],\r\n                    thousandSeparator: unicodeChars[2]\r\n                };\r\n            }\r\n        }\r\n        return decimalCodes;\r\n    }\n/**\n * @param {?} locale\n */\nconstructor(protected locale: LocaleService) {\r\n        super(locale);\r\n    }\n/**\n * @param {?} s\n * @return {?}\n */\npublic parse(s: string): number {\r\n        let /** @type {?} */ value: string = \"\";\r\n\r\n        const /** @type {?} */ decimalCodes: Decimal = this.decimalCodes;\r\n\r\n        const /** @type {?} */ characters: string[] = s.split(\"\");\r\n        for (const /** @type {?} */ char of characters) {\r\n            const /** @type {?} */ charCode: string = this.toUnicode(char);\r\n            const /** @type {?} */ index: number = this.numberCodes.indexOf(charCode);\r\n            if (index != -1) {\r\n                value += index;\r\n            } else if (charCode == decimalCodes.minusSign) {\r\n                value += \"-\";\r\n            } else if (charCode == decimalCodes.decimalSeparator) {\r\n                value += \".\";\r\n            } else if (charCode == decimalCodes.thousandSeparator) {\r\n                continue;\r\n            } else { return NaN; }\r\n        }\r\n        return parseFloat(value);\r\n    }\n/**\n * @param {?} digits\n * @return {?}\n */\npublic getRegExp(digits: string): RegExp {\r\n        let /** @type {?} */ minInt: number = 1;\r\n        let /** @type {?} */ minFraction: number = 0;\r\n        let /** @type {?} */ maxFraction: number = 3;\r\n\r\n        if (!!digits) {\r\n            const /** @type {?} */ NUMBER_FORMAT_REGEXP: RegExp = /^(\\d+)?\\.((\\d+)(\\-(\\d+))?)?$/;\r\n            const /** @type {?} */ parts: RegExpMatchArray | null = digits.match(NUMBER_FORMAT_REGEXP);\r\n            if (parts != null) {\r\n                if (parts[1] != null) {  // Min integer digits.\r\n                    minInt = parseInt(parts[1]);\r\n                }\r\n                if (parts[3] != null) {  // Min fraction digits.\r\n                    minFraction = parseInt(parts[3]);\r\n                }\r\n                if (parts[5] != null) {  // Max fraction digits.\r\n                    maxFraction = parseInt(parts[5]);\r\n                }\r\n            }\r\n        }\r\n\r\n        const /** @type {?} */ minusSign: string = this.decimalCodes.minusSign;\r\n        const /** @type {?} */ zero: string = this.numberCodes[0];\r\n        const /** @type {?} */ decimalSeparator: string = this.decimalCodes.decimalSeparator;\r\n        const /** @type {?} */ thousandSeparator: string = this.decimalCodes.thousandSeparator;\r\n        const /** @type {?} */ nine: string = this.numberCodes[9];\r\n\r\n        // Pattern for 1.2-2 digits: /^-?[0-9,]{1,}\\.[0-9]{2,2}$/\r\n        // Unicode pattern = \"^\\u002d?[\\u0030-\\u0039,\\u002c]{1,}\\\\u002e[\\u0030-\\u0039]{2,2}$\"\r\n        let /** @type {?} */ pattern: string;\r\n        if (minFraction > 0 && maxFraction > 0) {\r\n            pattern = \"^\"\r\n                + minusSign\r\n                + \"?[\" + zero + \"-\" + nine + thousandSeparator\r\n                + \"]{\" + minInt + \",}\\\\\"\r\n                + decimalSeparator\r\n                + \"[\" + zero + \"-\" + nine\r\n                + \"]{\" + minFraction + \",\" + maxFraction\r\n                + \"}$\";\r\n        } else if (minFraction == 0 && maxFraction > 0) {\r\n            // Decimal separator is optional.\r\n            pattern = \"^\"\r\n                + minusSign\r\n                + \"?[\" + zero + \"-\" + nine + thousandSeparator\r\n                + \"]{\" + minInt + \",}\\\\\"\r\n                + decimalSeparator\r\n                + \"?[\" + zero + \"-\" + nine\r\n                + \"]{\" + minFraction + \",\" + maxFraction\r\n                + \"}$\";\r\n        } else {\r\n            // Integer number.\r\n            pattern = \"^\"\r\n                + minusSign\r\n                + \"?[\" + zero + \"-\" + nine + thousandSeparator\r\n                + \"]{\" + minInt + \",}$\";\r\n        }\r\n        pattern = this.toChar(pattern);\r\n        const /** @type {?} */ regExp: RegExp = new RegExp(pattern);\r\n        return regExp;\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: LocaleService, },\n];\n}\n\nfunction DecimalCode_tsickle_Closure_declarations() {\n/** @type {?} */\nDecimalCode.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDecimalCode.ctorParameters;\n/** @type {?} */\nDecimalCode.prototype.locale;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\r\n\r\nimport { LocaleService } from '../../services/locale.service';\r\nimport { IntlAPI } from '../../services/intl-api';\n/**\n * @abstract\n */\nexport abstract class NumberCode {\n/**\n * @return {?}\n */\nprotected get numberCodes(): string[] {\r\n        const /** @type {?} */ numberCodes: string[] = [];\r\n\r\n        for (let /** @type {?} */ num: number = 0; num <= 9; num++) {\r\n            numberCodes.push(this.toUnicode(num.toString()));\r\n        }\r\n\r\n        if (IntlAPI.hasNumberFormat()) {\r\n            for (let /** @type {?} */ num: number = 0; num <= 9; num++) {\r\n                numberCodes[num] = this.toUnicode(\r\n                    new Intl.NumberFormat(this.locale.getDefaultLocale()).format(num)\r\n                );\r\n            }\r\n        }\r\n        return numberCodes;\r\n    }\n/**\n * @param {?} locale\n */\nconstructor(protected locale: LocaleService) { }\n/**\n * @abstract\n * @param {?} s\n * @return {?}\n */\nparse(s: string) {}\n/**\n * @abstract\n * @param {?} digits\n * @return {?}\n */\ngetRegExp(digits: string) {}\n/**\n * @param {?} pattern\n * @return {?}\n */\nprotected toChar(pattern: string): string {\r\n        return pattern.replace(/\\\\u[\\dA-F]{4}/gi, (match: string) => {\r\n            return String.fromCharCode(parseInt(match.replace(/\\\\u/g, \"\"), 16));\r\n        });\r\n    }\n/**\n * @param {?} c\n * @return {?}\n */\nprotected toUnicode(c: string): string {\r\n        return \"\\\\u\" + this.toHex(c.charCodeAt(0));\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate toHex(value: number): string {\r\n        let /** @type {?} */ hex: string = value.toString(16).toUpperCase();\r\n        // With padding.\r\n        hex = \"0000\".substr(0, 4 - hex.length) + hex;\r\n        return hex;\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: LocaleService, },\n];\n}\n\nfunction NumberCode_tsickle_Closure_declarations() {\n/** @type {?} */\nNumberCode.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNumberCode.ctorParameters;\n/** @type {?} */\nNumberCode.prototype.locale;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, ChangeDetectorRef } from '@angular/core';\r\n\r\nimport { Translation } from './translation';\r\nimport { LocaleService } from './locale.service';\r\nimport { TranslationService } from './translation.service';\r\nimport { InjectorRef } from '../models/injector-ref';\n/**\n * Provides 'lang' to the translate pipe,\r'defaultLocale' & 'currency' to localeDecimal, localePercent & localeCurrency pipes.\n */\nexport class Localization extends Translation {\npublic defaultLocale: string;\npublic currency: string;\n/**\n * @param {?=} locale\n * @param {?=} translation\n * @param {?=} changeDetectorRef\n */\nconstructor(\r\n        protected locale: LocaleService = InjectorRef.get(LocaleService),\r\n        protected translation: TranslationService = InjectorRef.get(TranslationService),\r\n        protected changeDetectorRef?: ChangeDetectorRef\r\n    ) {\r\n        super(translation, changeDetectorRef);\r\n\r\n        this.defaultLocale = this.locale.getDefaultLocale();\r\n        // When the default locale changes, subscribes to the event & updates defaultLocale property.\r\n        this.paramSubscriptions.push(this.locale.defaultLocaleChanged.subscribe(\r\n            (defaultLocale: string) => {\r\n                this.defaultLocale = defaultLocale;\r\n                // OnPush Change Detection strategy.\r\n                if (this.changeDetectorRef) { this.changeDetectorRef.markForCheck(); }\r\n            }\r\n        ));\r\n\r\n        this.currency = this.locale.getCurrentCurrency();\r\n        // When the currency changes, subscribes to the event & updates currency property.\r\n        this.paramSubscriptions.push(this.locale.currencyCodeChanged.subscribe(\r\n            (currency: string) => {\r\n                this.currency = currency;\r\n                // OnPush Change Detection strategy.\r\n                if (this.changeDetectorRef) { this.changeDetectorRef.markForCheck(); }\r\n            }\r\n        ));\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: LocaleService, },\n{type: TranslationService, },\n{type: ChangeDetectorRef, },\n];\n}\n\nfunction Localization_tsickle_Closure_declarations() {\n/** @type {?} */\nLocalization.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocalization.ctorParameters;\n/** @type {?} */\nLocalization.prototype.defaultLocale;\n/** @type {?} */\nLocalization.prototype.currency;\n/** @type {?} */\nLocalization.prototype.locale;\n/** @type {?} */\nLocalization.prototype.translation;\n/** @type {?} */\nLocalization.prototype.changeDetectorRef;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, ChangeDetectorRef } from '@angular/core';\r\nimport { ISubscription } from 'rxjs/Subscription';\r\n\r\nimport { TranslationService } from './translation.service';\r\nimport { InjectorRef } from '../models/injector-ref';\n/**\n * Provides 'lang' to the translate pipe.\n */\nexport class Translation {\npublic lang: string;\r\n\r\n    protected paramSubscriptions: ISubscription[] = [];\n/**\n * @param {?=} translation\n * @param {?=} changeDetectorRef\n */\nconstructor(\r\n        protected translation: TranslationService = InjectorRef.get(TranslationService),\r\n        protected changeDetectorRef?: ChangeDetectorRef\r\n    ) {\r\n        this.lang = this.translation.getLanguage();\r\n        // When the language changes, subscribes to the event & updates lang property.\r\n        this.paramSubscriptions.push(this.translation.translationChanged.subscribe(\r\n            (language: string) => {\r\n                this.lang = language;\r\n                // OnPush Change Detection strategy.\r\n                if (this.changeDetectorRef) { this.changeDetectorRef.markForCheck(); }\r\n            }\r\n        ));\r\n    }\n/**\n * @return {?}\n */\nprotected cancelParamSubscriptions(): void {\r\n        this.paramSubscriptions.forEach((subscription: ISubscription) => {\r\n            if (typeof subscription !== \"undefined\") {\r\n                subscription.unsubscribe();\r\n            }\r\n        });\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TranslationService, },\n{type: ChangeDetectorRef, },\n];\n}\n\nfunction Translation_tsickle_Closure_declarations() {\n/** @type {?} */\nTranslation.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTranslation.ctorParameters;\n/** @type {?} */\nTranslation.prototype.lang;\n/** @type {?} */\nTranslation.prototype.paramSubscriptions;\n/** @type {?} */\nTranslation.prototype.translation;\n/** @type {?} */\nTranslation.prototype.changeDetectorRef;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, EventEmitter, Output } from '@angular/core';\nimport { Observer } from 'rxjs/Observer';\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/operator/toPromise';\nimport'rxjs/add/observable/merge';\n\nimport { LocaleService } from './locale.service';\nimport { IntlAPI } from './intl-api';\nimport { ITranslationConfig, TranslationConfig } from '../models/translation/translation-config';\nimport { ITranslationConfigAPI, TranslationConfigAPI } from '../models/translation/translation-config-api';\nimport { TranslationProvider } from './translation-provider';\nimport { TranslationHandler } from './translation-handler';\nimport { LoadingMode, ServiceState } from '../models/types';\n\n/**\n * Manages the translation data.\n */\nexport interface ITranslationService {\n\n    translationChanged: EventEmitter<string>;\n    translationError: EventEmitter<any>;\n\n    /**\n     * Configure the service in the application root module or in a feature module with lazy loading.\n     */\n    addConfiguration(): ITranslationConfigAPI;\n\n    getConfiguration(): ITranslationConfig;\n\n    /**\n     * Call this method after the configuration to initialize the service.\n     */\n    init(): Promise<void>;\n\n    /**\n     * Gets the current language of the service.\n     */\n    getLanguage(): string;\n\n    /**\n     * Translates a key or an array of keys.\n     * @param keys The key or an array of keys to be translated\n     * @param args Optional parameters contained in the key\n     * @param lang The current language of the service is used by default\n     * @return The translated value or an object: {key: value}\n     */\n    translate(keys: string | string[], args?: any, lang?: string): string | any;\n\n    translateAsync(keys: string | string[], args?: any, lang?: string): Observable<string | any>;\n\n}\nexport class TranslationService implements ITranslationService {\npublic translationChanged: EventEmitter<string> = new EventEmitter<string>(true);\npublic translationError: EventEmitter<any> = new EventEmitter<any>(true);\nprivate serviceState: ServiceState;\nprivate loadingMode: LoadingMode;\nprivate language: string;\n/**\n * The translation data: {language: {key: value}}.\n */\nprivate translationData: any = {};\n/**\n * @param {?} locale\n * @param {?} configuration\n * @param {?} translationProvider\n * @param {?} translationHandler\n */\nconstructor(\nprivate locale: LocaleService,\nprivate configuration: TranslationConfig,\nprivate translationProvider: TranslationProvider,\nprivate translationHandler: TranslationHandler\n    ) {\n        this.serviceState = ServiceState.isWaiting;\n    }\n/**\n * @return {?}\n */\npublic addConfiguration(): ITranslationConfigAPI {\n        return new TranslationConfigAPI(this.configuration);\n    }\n/**\n * @return {?}\n */\npublic getConfiguration(): ITranslationConfig {\n        return this.configuration;\n    }\n/**\n * @return {?}\n */\npublic async init(): Promise<void> {\n        // Waiting for LocaleService initialization.\n        await this.locale.init();\n\n        if (this.configuration.providers.length > 0) {\n            this.loadingMode = LoadingMode.Async;\n        } else {\n            this.loadingMode = LoadingMode.Direct;\n        }\n\n        // When the language changes, loads translation data.\n        this.locale.loadTranslation.subscribe(\n            () => { this.loadTranslation(); }\n        );\n\n        await this.loadTranslation();\n    }\n/**\n * @return {?}\n */\npublic getLanguage(): string {\n        return this.language;\n    }\n/**\n * @param {?} keys\n * @param {?=} args\n * @param {?=} lang\n * @return {?}\n */\npublic translate(keys: string | string[], args: any = null, lang: string = this.language): string | any {\n        // If the service is not ready, returns the keys.\n        if (this.serviceState != ServiceState.isReady) return keys;\n\n        if (Array.isArray(keys)) {\n            const /** @type {?} */ data: any = {};\n            for (const /** @type {?} */ key of keys) {\n                data[key] = this.translateKey(key, args, lang);\n            }\n            return data;\n        }\n\n        return this.translateKey(keys, args, lang);\n    }\n/**\n * @param {?} keys\n * @param {?=} args\n * @param {?=} lang\n * @return {?}\n */\npublic translateAsync(\n        keys: string | string[],\n        args?: any,\n        lang: string = this.language\n    ): Observable<string | any> {\n        return Observable.create((observer: Observer<string | any>) => {\n            const /** @type {?} */ values: string | any = this.translate(keys, args, lang);\n            observer.next(values);\n            observer.complete();\n        });\n    }\n/**\n * @param {?} key\n * @param {?} args\n * @param {?} lang\n * @return {?}\n */\nprivate translateKey(key: string, args: any, lang: string): string | null {\n        if (key == null || key == \"\") return null;\n        // I18n plural.\n        if (this.configuration.i18nPlural && /^\\d+\\b/.exec(key)) {\n            return this.translateI18nPlural(key, args, lang);\n        }\n        return this.getValue(key, args, lang);\n    }\n/**\n * @param {?} key\n * @param {?} args\n * @param {?} lang\n * @return {?}\n */\nprivate getValue(key: string, args: any, lang: string): string {\n        const /** @type {?} */ path: string = key;\n        let /** @type {?} */ value: string | null = null;\n        if (this.translationData[lang]) {\n            let /** @type {?} */ translation: any = this.translationData[lang];\n\n            // Composed key.\n            const /** @type {?} */ sequences: string[] = key.split(this.configuration.keySeparator);\n            do {\n                key = /** @type {?} */(( sequences.shift()));\n                if (translation[key] && typeof translation[key] === \"object\") {\n                    translation = translation[key];\n                }\n            } while (sequences.length > 0);\n\n            value = translation[key] || translation[this.configuration.missingKey];\n        }\n        return this.translationHandler.parseValue(path, key, value, args, lang);\n    }\n/**\n * @param {?} key\n * @param {?} args\n * @param {?} lang\n * @return {?}\n */\nprivate translateI18nPlural(key: string, args: any, lang: string): string {\n        let /** @type {?} */ keyText: string = key.replace(/^\\d+\\b/, \"\");\n        keyText = keyText.trim();\n\n        const /** @type {?} */ keyNumber: number = parseFloat(key);\n        key = key.replace(/^\\d+/, this.translateNumber(keyNumber));\n\n        return key.replace(keyText, this.getValue(keyText, args, lang));\n    }\n/**\n * @param {?} keyNumber\n * @return {?}\n */\nprivate translateNumber(keyNumber: number): string {\n        if (!isNaN(keyNumber) && IntlAPI.hasNumberFormat()) {\n            const /** @type {?} */ localeNumber: string = new Intl.NumberFormat(this.language).format(keyNumber);\n            return localeNumber;\n        }\n        return keyNumber.toString();\n    }\n/**\n * @return {?}\n */\nprivate async loadTranslation(): Promise<void> {\n        const /** @type {?} */ language: string = !this.configuration.localeAsLanguage\n            ? this.locale.getCurrentLanguage()\n            : this.locale.getCurrentLocale();\n\n        if (language != null && language != this.language) {\n            if (this.loadingMode == LoadingMode.Async) {\n                await this.getTranslation(language).toPromise();\n            } else {\n                this.translationData = {};\n                this.translationData[language] = this.configuration.translationData[language];\n                this.releaseTranslation(language);\n            }\n        }\n    }\n/**\n * @param {?} language\n * @return {?}\n */\nprivate getTranslation(language: string): Observable<any> {\n\n        return Observable.create((observer: Observer<any>) => {\n            this.translationData = {};\n            this.serviceState = ServiceState.isLoading;\n\n            const /** @type {?} */ sequencesOfTranslationData: Array<Observable<any>> = [];\n\n            for (const /** @type {?} */ provider of this.configuration.providers) {\n                sequencesOfTranslationData.push(\n                    this.translationProvider.getTranslation(language, provider.args)\n                );\n            }\n\n            // Merges all the sequences into a single observable sequence.\n            Observable.merge(...sequencesOfTranslationData).subscribe(\n                (data: any) => {\n                    this.addData(data, language);\n                },\n                (error: any) => {\n                    // Sends an event for custom actions.\n                    this.translationError.emit(error);\n                    this.releaseTranslation(language);\n                    observer.next(null);\n                    observer.complete();\n                },\n                () => {\n                    this.releaseTranslation(language);\n                    observer.next(null);\n                    observer.complete();\n                }\n            );\n        });\n    }\n/**\n * @param {?} data\n * @param {?} language\n * @return {?}\n */\nprivate addData(data: any, language: string): void {\n        this.translationData[language] = typeof this.translationData[language] !== \"undefined\"\n            ? { ...this.translationData[language], ...data } // Object spread.\n            : data;\n    }\n/**\n * @param {?} language\n * @return {?}\n */\nprivate releaseTranslation(language: string): void {\n        this.serviceState = ServiceState.isReady;\n        this.language = language;\n        this.sendEvents();\n    }\n/**\n * @return {?}\n */\nprivate sendEvents(): void {\n        // Sends an event for the components.\n        this.translationChanged.emit(this.language);\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: LocaleService, },\n{type: TranslationConfig, },\n{type: TranslationProvider, },\n{type: TranslationHandler, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'translationChanged': [{ type: Output },],\n'translationError': [{ type: Output },],\n};\n}\n\nfunction TranslationService_tsickle_Closure_declarations() {\n/** @type {?} */\nTranslationService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTranslationService.ctorParameters;\n/** @type {?} */\nTranslationService.propDecorators;\n/** @type {?} */\nTranslationService.prototype.translationChanged;\n/** @type {?} */\nTranslationService.prototype.translationError;\n/** @type {?} */\nTranslationService.prototype.serviceState;\n/** @type {?} */\nTranslationService.prototype.loadingMode;\n/** @type {?} */\nTranslationService.prototype.language;\n/**\n * The translation data: {language: {key: value}}.\n * @type {?}\n */\nTranslationService.prototype.translationData;\n/** @type {?} */\nTranslationService.prototype.locale;\n/** @type {?} */\nTranslationService.prototype.configuration;\n/** @type {?} */\nTranslationService.prototype.translationProvider;\n/** @type {?} */\nTranslationService.prototype.translationHandler;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","export type Language = {\r\n\r\n    code: string;\r\n    direction: string;\r\n\r\n};\r\n\r\nexport type Provider = {\r\n\r\n    args: any;\r\n\r\n};\r\n\r\nexport type Decimal = {\r\n\r\n    minusSign: string;\r\n    decimalSeparator: string;\r\n    thousandSeparator: string;\r\n\r\n};\nexport type LoadingMode = number;\nexport let LoadingMode: any = {};\nLoadingMode.Direct = 0;\nLoadingMode.Async = 1;\nLoadingMode[LoadingMode.Direct] = \"Direct\";\nLoadingMode[LoadingMode.Async] = \"Async\";\n\nexport type ServiceState = number;\nexport let ServiceState: any = {};\nServiceState.isReady = 0;\nServiceState.isLoading = 1;\nServiceState.isWaiting = 2;\nServiceState[ServiceState.isReady] = \"isReady\";\nServiceState[ServiceState.isLoading] = \"isLoading\";\nServiceState[ServiceState.isWaiting] = \"isWaiting\";\n\r\n\r\nexport interface PropertyDecorator {\r\n\r\n    <T extends Function>(type: T): T;\r\n\r\n    (target: Object, propertyKey?: string | symbol): void;\r\n\r\n}\r\n\r\nexport interface Type<T> extends Function {\r\n\r\n    new (...args: any[]): T;\r\n\r\n}\r\n\r\nexport interface Token {\r\n\r\n    localeStorage?: Type<any>;\r\n    translationProvider?: Type<any>;\r\n    translationHandler?: Type<any>;\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\n\nimport { TranslationConfig } from '../models/translation/translation-config';\n/**\n * Implement this class-interface to create a custom handler for translated values.\n * @abstract\n */\nexport abstract class TranslationHandler {\n/**\n * This method must contain the logic to parse the translated value.\n * @abstract\n * @param {?} path The path of the key\n * @param {?} key The key that has been requested\n * @param {?} value The translated value\n * @param {?} args The parameters passed along with the key\n * @param {?} lang The current language\n * @return {?} The parsed value\n */\nparseValue(path: string, key: string, value: string | null, args: any, lang: string) {}\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TranslationHandler_tsickle_Closure_declarations() {\n/** @type {?} */\nTranslationHandler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTranslationHandler.ctorParameters;\n}\n\nexport class DefaultTranslationHandler implements TranslationHandler {\n/**\n * @param {?} configuration\n */\nconstructor(private configuration: TranslationConfig) { }\n/**\n * @param {?} path\n * @param {?} key\n * @param {?} value\n * @param {?} args\n * @param {?} lang\n * @return {?}\n */\npublic parseValue(path: string, key: string, value: string | null, args: any, lang: string): string {\n        if (value == null) {\n            return this.handleMissingValue(path);\n        } else if (args) {\n            return this.handleArgs(value, args);\n        }\n        return value;\n    }\n/**\n * @param {?} path\n * @return {?}\n */\nprivate handleMissingValue(path: string): string {\n        if (this.configuration.missingValue != null) {\n            return this.configuration.missingValue;\n        }\n        // The same path is returned.\n        return path;\n    }\n/**\n * @param {?} value\n * @param {?} args\n * @return {?}\n */\nprivate handleArgs(value: string, args: any): string {\n        const /** @type {?} */ TEMPLATE_REGEXP: RegExp = /{{\\s?([^{}\\s]*)\\s?}}/g;\n        return value.replace(TEMPLATE_REGEXP, (substring: string, parsedKey: string) => {\n            const /** @type {?} */ replacer: string = /** @type {?} */(( args[parsedKey] as string));\n            return typeof replacer !== \"undefined\" ? replacer : substring;\n        });\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TranslationConfig, },\n];\n}\n\nfunction DefaultTranslationHandler_tsickle_Closure_declarations() {\n/** @type {?} */\nDefaultTranslationHandler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDefaultTranslationHandler.ctorParameters;\n/** @type {?} */\nDefaultTranslationHandler.prototype.configuration;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/operator/map';\n/**\n * Implement this class-interface to create a custom provider for translation data.\n * @abstract\n */\nexport abstract class TranslationProvider {\n/**\n * This method must contain the logic of data access.\n * @abstract\n * @param {?} language The current language\n * @param {?} args The parameter of addCustomProvider method\n * @return {?} An observable of an object of translation data: {key: value}\n */\ngetTranslation(language: string, args: any) {}\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TranslationProvider_tsickle_Closure_declarations() {\n/** @type {?} */\nTranslationProvider.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTranslationProvider.ctorParameters;\n}\n\nexport class HttpTranslationProvider implements TranslationProvider {\n/**\n * @param {?} http\n */\nconstructor(private http: Http) { }\n/**\n * @param {?} language\n * @param {?} args\n * @return {?}\n */\npublic getTranslation(language: string, args: any): Observable<any> {\n        let /** @type {?} */ url: string = \"\";\n\n        switch (args.type) {\n            case \"WebAPI\":\n                url += args.path + language;\n                break;\n            default:\n                url += args.prefix + language + \".\" + args.dataFormat;\n        }\n\n        return this.http.get(url)\n            .map((res: Response) => res.json());\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Http, },\n];\n}\n\nfunction HttpTranslationProvider_tsickle_Closure_declarations() {\n/** @type {?} */\nHttpTranslationProvider.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHttpTranslationProvider.ctorParameters;\n/** @type {?} */\nHttpTranslationProvider.prototype.http;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { TranslationConfig } from './translation-config';\r\n\r\nexport interface ITranslationConfigAPI {\r\n\r\n    /**\r\n     * Direct loading: adds translation data.\r\n     * @param languageCode ISO 639 two-letter or three-letter code of the language\r\n     * @param translation Translation data of the language\r\n     */\r\n    addTranslation(languageCode: string, translation: any): ITranslationConfigAPI;\r\n\r\n    /**\r\n     * Asynchronous loading: adds a translation provider.\r\n     * @param prefix The path prefix of the json files\r\n     * @param dataFormat Data format: default & supported value is 'json'\r\n     */\r\n    addProvider(prefix: string, dataFormat?: string): ITranslationConfigAPI;\r\n\r\n    /**\r\n     * Asynchronous loading: adds a Web API provider.\r\n     * @param path [path]{languageCode} will be the URL used by the Http GET requests\r\n     * @param dataFormat Data format: default & supported value is 'json'\r\n     */\r\n    addWebAPIProvider(path: string, dataFormat?: string): ITranslationConfigAPI;\r\n\r\n    /**\r\n     * Asynchronous loading: adds a custom provider.\r\n     */\r\n    addCustomProvider(args: any): ITranslationConfigAPI;\r\n\r\n    /**\r\n     * Sets the use of locale (languageCode-countryCode) as language.\r\n     */\r\n    useLocaleAsLanguage(): ITranslationConfigAPI;\r\n\r\n    /**\r\n     * Sets the value to use for missing keys.\r\n     */\r\n    setMissingValue(value: string): ITranslationConfigAPI;\r\n\r\n    /**\r\n     * Sets the key to use for missing keys.\r\n     */\r\n    setMissingKey(key: string): ITranslationConfigAPI;\r\n\r\n    /**\r\n     * Sets composed key separator. Default is the point '.'.\r\n     */\r\n    setComposedKeySeparator(keySeparator: string): ITranslationConfigAPI;\r\n\r\n    /**\r\n     * Disables the translation of numbers that are contained at the beginning of the keys.\r\n     */\r\n    disableI18nPlural(): ITranslationConfigAPI;\r\n\r\n}\nexport class TranslationConfigAPI {\n/**\n * @param {?} configuration\n */\nconstructor(private configuration: TranslationConfig) { }\n/**\n * @param {?} languageCode\n * @param {?} translation\n * @return {?}\n */\npublic addTranslation(languageCode: string, translation: any): ITranslationConfigAPI {\r\n        this.configuration.translationData[languageCode] =\r\n            typeof this.configuration.translationData[languageCode] !== \"undefined\"\r\n                ? { ...this.configuration.translationData[languageCode], ...translation } // Object spread.\r\n                : translation;\r\n        return this;\r\n    }\n/**\n * @param {?} prefix\n * @param {?=} dataFormat\n * @return {?}\n */\npublic addProvider(prefix: string, dataFormat: string = \"json\"): ITranslationConfigAPI {\r\n        this.configuration.providers.push({ args: { type: \"Static\", prefix: prefix, dataFormat: dataFormat } });\r\n        return this;\r\n    }\n/**\n * @param {?} path\n * @param {?=} dataFormat\n * @return {?}\n */\npublic addWebAPIProvider(path: string, dataFormat: string = \"json\"): ITranslationConfigAPI {\r\n        this.configuration.providers.push({ args: { type: \"WebAPI\", path: path, dataFormat: dataFormat } });\r\n        return this;\r\n    }\n/**\n * @param {?=} args\n * @return {?}\n */\npublic addCustomProvider(args?: any): ITranslationConfigAPI {\r\n        this.configuration.providers.push({ args: args });\r\n        return this;\r\n    }\n/**\n * @return {?}\n */\npublic useLocaleAsLanguage(): ITranslationConfigAPI {\r\n        this.configuration.localeAsLanguage = true;\r\n        return this;\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic setMissingValue(value: string): ITranslationConfigAPI {\r\n        this.configuration.missingValue = value;\r\n        return this;\r\n    }\n/**\n * @param {?} key\n * @return {?}\n */\npublic setMissingKey(key: string): ITranslationConfigAPI {\r\n        this.configuration.missingKey = key;\r\n        return this;\r\n    }\n/**\n * @param {?} keySeparator\n * @return {?}\n */\npublic setComposedKeySeparator(keySeparator: string): ITranslationConfigAPI {\r\n        this.configuration.keySeparator = keySeparator;\r\n        return this;\r\n    }\n/**\n * @return {?}\n */\npublic disableI18nPlural(): ITranslationConfigAPI {\r\n        this.configuration.i18nPlural = false;\r\n        return this;\r\n    }\r\n\r\n}\n\nfunction TranslationConfigAPI_tsickle_Closure_declarations() {\n/** @type {?} */\nTranslationConfigAPI.prototype.configuration;\n}\n\r\n","\n/**\n * Provides the methods to check if Intl APIs are supported.\n */\nexport class IntlAPI {\nprivate static readonly hasIntl: boolean = Intl && typeof Intl === \"object\";\n/**\n * @return {?}\n */\npublic static hasDateTimeFormat(): boolean {\r\n        return this.hasIntl && Intl​.hasOwnProperty​(\"DateTimeFormat\");\r\n    }\n/**\n * @return {?}\n */\npublic static hasNumberFormat(): boolean {\r\n        return this.hasIntl && Intl.hasOwnProperty​(\"NumberFormat\");\r\n    }\n/**\n * @return {?}\n */\npublic static hasCollator(): boolean {\r\n        return this.hasIntl && Intl.hasOwnProperty​(\"Collator\");\r\n    }\r\n\r\n}\n\nfunction IntlAPI_tsickle_Closure_declarations() {\n/** @type {?} */\nIntlAPI.hasIntl;\n}\n\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Provider } from '../types';\r\n\r\nexport interface ITranslationConfig {\r\n\r\n    translationData: any;\r\n\r\n    providers: Provider[];\r\n    localeAsLanguage: boolean;\r\n    missingValue: string;\r\n    missingKey: string;\r\n    keySeparator: string;\r\n    i18nPlural: boolean;\r\n\r\n}\nexport class TranslationConfig implements ITranslationConfig {\npublic translationData: any = {};\npublic providers: Provider[] = [];\npublic localeAsLanguage: boolean = false;\npublic missingValue: string;\npublic missingKey: string;\npublic keySeparator: string = \".\";\npublic i18nPlural: boolean = true;\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TranslationConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nTranslationConfig.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTranslationConfig.ctorParameters;\n/** @type {?} */\nTranslationConfig.prototype.translationData;\n/** @type {?} */\nTranslationConfig.prototype.providers;\n/** @type {?} */\nTranslationConfig.prototype.localeAsLanguage;\n/** @type {?} */\nTranslationConfig.prototype.missingValue;\n/** @type {?} */\nTranslationConfig.prototype.missingKey;\n/** @type {?} */\nTranslationConfig.prototype.keySeparator;\n/** @type {?} */\nTranslationConfig.prototype.i18nPlural;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, EventEmitter, Output } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\n\nimport { ILocaleConfig, LocaleConfig } from '../models/localization/locale-config';\nimport { ILocaleConfigAPI, LocaleConfigAPI } from '../models/localization/locale-config-api';\nimport { LocaleStorage } from './locale-storage';\nimport { DefaultLocale } from '../models/localization/default-locale';\nimport { Language } from '../models/types';\n\n/**\n * Manages language, default locale & currency.\n */\nexport interface ILocaleService {\n\n    languageCodeChanged: EventEmitter<string>;\n    defaultLocaleChanged: EventEmitter<string>;\n    currencyCodeChanged: EventEmitter<string>;\n\n    loadTranslation: Subject<any>;\n\n    /**\n     * Configure the service in the application root module or in a feature module with lazy loading.\n     */\n    addConfiguration(): ILocaleConfigAPI;\n\n    getConfiguration(): ILocaleConfig;\n\n    init(): Promise<void>;\n\n    getAvailableLanguages(): string[];\n\n    getLanguageDirection(languageCode?: string): string;\n\n    getCurrentLanguage(): string;\n\n    getCurrentCountry(): string;\n\n    getCurrentLocale(): string;\n\n    getCurrentScript(): string;\n\n    getCurrentNumberingSystem(): string;\n\n    getCurrentCalendar(): string;\n\n    getDefaultLocale(): string;\n\n    getCurrentCurrency(): string;\n\n    setCurrentLanguage(languageCode: string): void;\n\n    setDefaultLocale(\n        languageCode: string,\n        countryCode: string,\n        scriptCode?: string,\n        numberingSystem?: string,\n        calendar?: string\n    ): void;\n\n    setCurrentCurrency(currencyCode: string): void;\n\n}\nexport class LocaleService implements ILocaleService {\npublic languageCodeChanged: EventEmitter<string> = new EventEmitter<string>(true);\npublic defaultLocaleChanged: EventEmitter<string> = new EventEmitter<string>(true);\npublic currencyCodeChanged: EventEmitter<string> = new EventEmitter<string>(true);\npublic loadTranslation: Subject<any> = new Subject();\nprivate defaultLocale: DefaultLocale = new DefaultLocale();\nprivate currencyCode: string;\n/**\n * @param {?} configuration\n * @param {?} storage\n */\nconstructor(private configuration: LocaleConfig,\nprivate storage: LocaleStorage) { }\n/**\n * @return {?}\n */\npublic addConfiguration(): ILocaleConfigAPI {\n        return new LocaleConfigAPI(this.configuration);\n    }\n/**\n * @return {?}\n */\npublic getConfiguration(): ILocaleConfig {\n        return this.configuration;\n    }\n/**\n * @return {?}\n */\npublic async init(): Promise<void> {\n        await this.initStorage();\n\n        if (!!this.configuration.languageCode && !!this.configuration.countryCode) {\n            this.initDefaultLocale();\n        } else if (!!this.configuration.languageCode) {\n            this.initLanguage();\n        }\n\n        if (!!this.configuration.currencyCode) {\n            this.initCurrency();\n        }\n    }\n/**\n * @return {?}\n */\npublic getAvailableLanguages(): string[] {\n        return this.configuration.languageCodes.map((language: Language) => language.code);\n    }\n/**\n * @param {?=} languageCode\n * @return {?}\n */\npublic getLanguageDirection(languageCode: string = this.defaultLocale.languageCode): string {\n        const /** @type {?} */ matchedLanguages: Language[] = this.matchLanguage(languageCode);\n        return matchedLanguages[0].direction;\n    }\n/**\n * @return {?}\n */\npublic getCurrentLanguage(): string {\n        return this.defaultLocale.languageCode;\n    }\n/**\n * @return {?}\n */\npublic getCurrentCountry(): string {\n        if (!!this.defaultLocale.countryCode) {\n            return this.defaultLocale.countryCode;\n        }\n        return \"\";\n    }\n/**\n * @return {?}\n */\npublic getCurrentScript(): string {\n        if (!!this.defaultLocale.scriptCode) {\n            return this.defaultLocale.scriptCode;\n        }\n        return \"\";\n    }\n/**\n * @return {?}\n */\npublic getCurrentLocale(): string {\n        const /** @type {?} */ locale: string = !!this.defaultLocale.countryCode\n            ? this.defaultLocale.languageCode + \"-\" + this.defaultLocale.countryCode\n            : this.defaultLocale.languageCode;\n        return locale;\n    }\n/**\n * @return {?}\n */\npublic getCurrentNumberingSystem(): string {\n        if (!!this.defaultLocale.numberingSystem) {\n            return this.defaultLocale.numberingSystem;\n        }\n        return \"\";\n    }\n/**\n * @return {?}\n */\npublic getCurrentCalendar(): string {\n        if (!!this.defaultLocale.calendar) {\n            return this.defaultLocale.calendar;\n        }\n        return \"\";\n    }\n/**\n * @return {?}\n */\npublic getDefaultLocale(): string {\n        return this.defaultLocale.value;\n    }\n/**\n * @return {?}\n */\npublic getCurrentCurrency(): string {\n        return this.currencyCode;\n    }\n/**\n * @param {?} languageCode\n * @return {?}\n */\npublic setCurrentLanguage(languageCode: string): void {\n        if (this.defaultLocale.languageCode != languageCode) {\n            this.defaultLocale.build(languageCode);\n            this.storage.write(\"defaultLocale\", this.defaultLocale.value);\n            this.sendLanguageEvents();\n            this.sendTranslationEvents();\n        }\n    }\n/**\n * @param {?} languageCode\n * @param {?} countryCode\n * @param {?=} scriptCode\n * @param {?=} numberingSystem\n * @param {?=} calendar\n * @return {?}\n */\npublic setDefaultLocale(\n        languageCode: string,\n        countryCode: string,\n        scriptCode?: string,\n        numberingSystem?: string,\n        calendar?: string\n    ): void {\n        if (this.defaultLocale.languageCode != languageCode ||\n            this.defaultLocale.countryCode != countryCode ||\n            this.defaultLocale.scriptCode != scriptCode ||\n            this.defaultLocale.numberingSystem != numberingSystem ||\n            this.defaultLocale.calendar != calendar) {\n\n            this.defaultLocale.build(\n                languageCode,\n                countryCode,\n                scriptCode,\n                numberingSystem,\n                calendar\n            );\n\n            this.storage.write(\"defaultLocale\", this.defaultLocale.value);\n            this.sendDefaultLocaleEvents();\n            this.sendTranslationEvents();\n        }\n    }\n/**\n * @param {?} currencyCode\n * @return {?}\n */\npublic setCurrentCurrency(currencyCode: string): void {\n        if (this.currencyCode != currencyCode) {\n            this.currencyCode = currencyCode;\n            this.storage.write(\"currency\", this.currencyCode);\n            this.sendCurrencyEvents();\n        }\n    }\n/**\n * @return {?}\n */\nprivate async initStorage(): Promise<void> {\n        // Tries to retrieve default locale & currency from the browser storage.\n        if (!this.defaultLocale.value) {\n            const /** @type {?} */ defaultLocale: string | null = await this.storage.read(\"defaultLocale\");\n            if (!!defaultLocale) {\n                this.defaultLocale.value = defaultLocale;\n            }\n        }\n        if (this.currencyCode == null) {\n            const /** @type {?} */ currencyCode: string | null = await this.storage.read(\"currency\");\n            if (!!currencyCode) {\n                this.currencyCode = currencyCode;\n            }\n        }\n    }\n/**\n * @return {?}\n */\nprivate initLanguage(): void {\n        if (!this.defaultLocale.languageCode) {\n            const /** @type {?} */ browserLanguage: string | null = this.getBrowserLanguage();\n            let /** @type {?} */ matchedLanguages: Language[] = [];\n            if (!!browserLanguage) {\n                matchedLanguages = this.matchLanguage(browserLanguage);\n            }\n            if (!!browserLanguage && matchedLanguages.length > 0) {\n                this.defaultLocale.build(browserLanguage);\n            } else {\n                this.defaultLocale.build(this.configuration.languageCode);\n            }\n            this.storage.write(\"defaultLocale\", this.defaultLocale.value);\n        }\n        this.sendLanguageEvents();\n    }\n/**\n * @return {?}\n */\nprivate initDefaultLocale(): void {\n        if (!this.defaultLocale.value) {\n            this.defaultLocale.build(\n                this.configuration.languageCode,\n                this.configuration.countryCode,\n                this.configuration.scriptCode,\n                this.configuration.numberingSystem,\n                this.configuration.calendar\n            );\n            this.storage.write(\"defaultLocale\", this.defaultLocale.value);\n        }\n        this.sendDefaultLocaleEvents();\n    }\n/**\n * @return {?}\n */\nprivate initCurrency(): void {\n        if (this.currencyCode == null) {\n            this.currencyCode = this.configuration.currencyCode;\n            this.storage.write(\"currency\", this.currencyCode);\n        }\n        this.sendCurrencyEvents();\n    }\n/**\n * @return {?}\n */\nprivate getBrowserLanguage(): string | null {\n        let /** @type {?} */ browserLanguage: string | null = null;\n        if (typeof navigator !== \"undefined\" && navigator.language) {\n            browserLanguage = navigator.language;\n        }\n        if (browserLanguage != null) {\n            const /** @type {?} */ index: number = browserLanguage.indexOf(\"-\");\n            if (index != -1) {\n                browserLanguage = browserLanguage.substring(0, index);\n            }\n        }\n        return browserLanguage;\n    }\n/**\n * @param {?} languageCode\n * @return {?}\n */\nprivate matchLanguage(languageCode: string): Language[] {\n        const /** @type {?} */ matchedLanguages: Language[] = this.configuration.languageCodes.filter(\n            (language: Language) => {\n                return language.code == languageCode;\n            });\n        return matchedLanguages;\n    }\n/**\n * @return {?}\n */\nprivate sendLanguageEvents(): void {\n        this.languageCodeChanged.emit(this.defaultLocale.languageCode);\n    }\n/**\n * @return {?}\n */\nprivate sendDefaultLocaleEvents(): void {\n        this.defaultLocaleChanged.emit(this.defaultLocale.value);\n    }\n/**\n * @return {?}\n */\nprivate sendCurrencyEvents(): void {\n        this.currencyCodeChanged.emit(this.currencyCode);\n    }\n/**\n * @return {?}\n */\nprivate sendTranslationEvents(): void {\n        // This event is subscribed by TranslationService to load the translation data.\n        this.loadTranslation.next();\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: LocaleConfig, },\n{type: LocaleStorage, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'languageCodeChanged': [{ type: Output },],\n'defaultLocaleChanged': [{ type: Output },],\n'currencyCodeChanged': [{ type: Output },],\n};\n}\n\nfunction LocaleService_tsickle_Closure_declarations() {\n/** @type {?} */\nLocaleService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocaleService.ctorParameters;\n/** @type {?} */\nLocaleService.propDecorators;\n/** @type {?} */\nLocaleService.prototype.languageCodeChanged;\n/** @type {?} */\nLocaleService.prototype.defaultLocaleChanged;\n/** @type {?} */\nLocaleService.prototype.currencyCodeChanged;\n/** @type {?} */\nLocaleService.prototype.loadTranslation;\n/** @type {?} */\nLocaleService.prototype.defaultLocale;\n/** @type {?} */\nLocaleService.prototype.currencyCode;\n/** @type {?} */\nLocaleService.prototype.configuration;\n/** @type {?} */\nLocaleService.prototype.storage;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { DefaultLocaleCodes } from './locale-codes';\nexport class DefaultLocale implements DefaultLocaleCodes {\npublic languageCode: string;\npublic scriptCode?: string;\npublic countryCode?: string;\npublic numberingSystem?: string;\npublic calendar?: string;\n/**\n * @return {?}\n */\npublic get value(): string {\r\n        return this._value;\r\n    }\n/**\n * @param {?} defaultLocale\n * @return {?}\n */\npublic set value(defaultLocale: string) {\r\n        this._value = defaultLocale;\r\n        this.parseValue();\r\n    }\nprivate _value: string;\n/**\n * @param {?} languageCode\n * @param {?=} countryCode\n * @param {?=} scriptCode\n * @param {?=} numberingSystem\n * @param {?=} calendar\n * @return {?}\n */\npublic build(\r\n        languageCode: string,\r\n        countryCode?: string,\r\n        scriptCode?: string,\r\n        numberingSystem?: string,\r\n        calendar?: string\r\n    ): void {\r\n        this.languageCode = languageCode;\r\n        this.scriptCode = scriptCode;\r\n        this.countryCode = countryCode;\r\n        this.numberingSystem = numberingSystem;\r\n        this.calendar = calendar;\r\n\r\n        const /** @type {?} */ value: string[] = [];\r\n        value.push(languageCode);\r\n        value.push(!!scriptCode ? \"-\" + scriptCode : \"\");\r\n        value.push(!!countryCode ? \"-\" + countryCode : \"\");\r\n        // Adds the 'u' (Unicode) extension.\r\n        value.push((!!numberingSystem || !!calendar) ? \"-u\" : \"\");\r\n        value.push(!!numberingSystem ? \"-nu-\" + numberingSystem : \"\");\r\n        value.push(!!calendar ? \"-ca-\" + calendar : \"\");\r\n        this._value = value.join(\"\");\r\n    }\n/**\n * @return {?}\n */\nprivate parseValue(): void {\r\n        if (!!this.value) {\r\n            let /** @type {?} */ value: string = this.value;\r\n            // Looks for the 'u' (Unicode) extension.\r\n            const /** @type {?} */ index: number = value.search(\"-u\");\r\n            if (index != -1) {\r\n                const /** @type {?} */ extensions: string[] = value.substring(index + 1).split(\"-\");\r\n                switch (extensions.length) {\r\n                    case 3:\r\n                        if (extensions[1] == \"nu\") {\r\n                            this.numberingSystem = extensions[2];\r\n                        } else if (extensions[1] == \"ca\") {\r\n                            this.calendar = extensions[2];\r\n                        }\r\n                        break;\r\n                    default:\r\n                        this.numberingSystem = extensions[2];\r\n                        this.calendar = extensions[4];\r\n                        break;\r\n                }\r\n                // Extracts the codes.\r\n                value = value.substring(0, index);\r\n            }\r\n\r\n            const /** @type {?} */ codes: string[] = value.split(\"-\");\r\n            switch (codes.length) {\r\n                case 1:\r\n                    this.languageCode = codes[0];\r\n                    break;\r\n                case 2:\r\n                    this.languageCode = codes[0];\r\n                    this.countryCode = codes[1];\r\n                    break;\r\n                default:\r\n                    this.languageCode = codes[0];\r\n                    this.scriptCode = codes[1];\r\n                    this.countryCode = codes[2];\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n}\n\nfunction DefaultLocale_tsickle_Closure_declarations() {\n/** @type {?} */\nDefaultLocale.prototype.languageCode;\n/** @type {?} */\nDefaultLocale.prototype.scriptCode;\n/** @type {?} */\nDefaultLocale.prototype.countryCode;\n/** @type {?} */\nDefaultLocale.prototype.numberingSystem;\n/** @type {?} */\nDefaultLocale.prototype.calendar;\n/** @type {?} */\nDefaultLocale.prototype._value;\n}\n\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { LocaleConfig } from '../models/localization/locale-config';\n/**\n * Implement this class-interface to create a custom storage for default locale & currency.\n * @abstract\n */\nexport abstract class LocaleStorage {\n/**\n * This method must contain the logic to read the storage.\r\\@param name 'defaultLocale' or 'currency'\r\\@return A promise with the value of the given name\n * @abstract\n * @param {?} name\n * @return {?}\n */\nread(name: string) {}\n/**\n * This method must contain the logic to write the storage.\r\\@param name 'defaultLocale' or 'currency'\r\\@param value The value for the given name\n * @abstract\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nwrite(name: string, value: string) {}\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LocaleStorage_tsickle_Closure_declarations() {\n/** @type {?} */\nLocaleStorage.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocaleStorage.ctorParameters;\n}\n\nexport class BrowserStorage implements LocaleStorage {\nprivate hasCookie: boolean;\nprivate hasStorage: boolean;\n/**\n * @param {?} configuration\n */\nconstructor(private configuration: LocaleConfig) {\r\n        this.hasCookie = typeof navigator !== \"undefined\" && navigator.cookieEnabled;\r\n        this.hasStorage = typeof Storage !== \"undefined\";\r\n    }\n/**\n * @param {?} name\n * @return {?}\n */\npublic async read(name: string): Promise<string | null> {\r\n        let /** @type {?} */ value: string | null = null;\r\n        if (!this.configuration.storageIsDisabled) {\r\n            if (this.configuration.localStorage && this.hasStorage) {\r\n                value = this.getLocalStorage(name);\r\n            } else if (this.configuration.sessionStorage && this.hasStorage) {\r\n                value = this.getSessionStorage(name);\r\n            } else if (this.hasCookie) {\r\n                value = this.getCookie(name);\r\n            }\r\n        }\r\n        return value;\r\n    }\n/**\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\npublic async write(name: string, value: string): Promise<void> {\r\n        if (!this.configuration.storageIsDisabled) {\r\n            if (this.configuration.localStorage && this.hasStorage) {\r\n                this.setLocalStorage(name, value);\r\n            } else if (this.configuration.sessionStorage && this.hasStorage) {\r\n                this.setSessionStorage(name, value);\r\n            } else if (this.hasCookie) {\r\n                this.setCookie(name, value);\r\n            }\r\n        }\r\n    }\n/**\n * @param {?} name\n * @return {?}\n */\nprivate getLocalStorage(name: string): string | null {\r\n        return localStorage.getItem(name);\r\n    }\n/**\n * @param {?} name\n * @return {?}\n */\nprivate getSessionStorage(name: string): string | null {\r\n        return sessionStorage.getItem(name);\r\n    }\n/**\n * @param {?} name\n * @return {?}\n */\nprivate getCookie(name: string): string | null {\r\n        let /** @type {?} */ result: RegExpExecArray | null = null;\r\n        if (typeof document !== \"undefined\") {\r\n            result = new RegExp(\"(?:^|; )\" + encodeURIComponent(name) + \"=([^;]*)\").exec(document.cookie);\r\n        }\r\n        return result ? result[1] : null;\r\n    }\n/**\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nprivate setLocalStorage(name: string, value: string): void {\r\n        localStorage.setItem(name, value);\r\n    }\n/**\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nprivate setSessionStorage(name: string, value: string): void {\r\n        sessionStorage.setItem(name, value);\r\n    }\n/**\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nprivate setCookie(name: string, value: string): void {\r\n        let /** @type {?} */ expires: string = \"\";\r\n        if (this.configuration.cookiesExpirationDays != null) {\r\n            const /** @type {?} */ expirationDate: Date = new Date();\r\n            expirationDate.setTime(\r\n                expirationDate.getTime() +\r\n                (this.configuration.cookiesExpirationDays * 24 * 60 * 60 * 1000)\r\n            );\r\n            expires = \"; expires=\" + expirationDate.toUTCString();\r\n        }\r\n        if (typeof document !== \"undefined\") {\r\n            document.cookie = name + \"=\" + value + expires + \"; path=/\";\r\n        }\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: LocaleConfig, },\n];\n}\n\nfunction BrowserStorage_tsickle_Closure_declarations() {\n/** @type {?} */\nBrowserStorage.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBrowserStorage.ctorParameters;\n/** @type {?} */\nBrowserStorage.prototype.hasCookie;\n/** @type {?} */\nBrowserStorage.prototype.hasStorage;\n/** @type {?} */\nBrowserStorage.prototype.configuration;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { LocaleConfig } from './locale-config';\r\nimport { Language } from '../types';\r\n\r\nexport interface ILocaleConfigAPI {\r\n\r\n    /**\r\n     * Adds a language to use in the app, specifying the layout direction.\r\n     * @param languageCode ISO 639 two-letter or three-letter code of the language\r\n     * @param textDirection Default is ltr (left to right)\r\n     */\r\n    addLanguage(languageCode: string, textDirection?: string): ILocaleConfigAPI;\r\n\r\n    /**\r\n     * Adds the languages to use in the app.\r\n     * @param languageCodes Array of ISO 639 two-letter or three-letter codes of the languages\r\n     */\r\n    addLanguages(languageCodes: string[]): ILocaleConfigAPI;\r\n\r\n    /**\r\n     * Disables the browser storage for language, default locale & currency.\r\n     */\r\n    disableStorage(): ILocaleConfigAPI;\r\n\r\n    /**\r\n     * If the cookie expiration is omitted, the cookie becomes a session cookie.\r\n     */\r\n    setCookieExpiration(days?: number): ILocaleConfigAPI;\r\n\r\n    /**\r\n     * Sets browser LocalStorage as default for language, default locale & currency.\r\n     */\r\n    useLocalStorage(): ILocaleConfigAPI;\r\n\r\n    /**\r\n     * Sets browser SessionStorage as default for language, default locale & currency.\r\n     */\r\n    useSessionStorage(): ILocaleConfigAPI;\r\n\r\n    /**\r\n     * Defines the language to be used:\r\n     *  - tries to get the language from the browser storage;\r\n     *  - tries to get the language of the browser if it has been added;\r\n     *  - otherwise gets the parameter language.\r\n     * @param languageCode ISO 639 two-letter or three-letter code of the language\r\n     */\r\n    defineLanguage(languageCode: string): ILocaleConfigAPI;\r\n\r\n    /**\r\n     * Defines the default locale to be used, regardless of the browser language.\r\n     * @param languageCode ISO 639 two-letter or three-letter code of the language\r\n     * @param countryCode ISO 3166 two-letter, uppercase code of the country\r\n     * @param scriptCode Optional ISO 15924 four-letter script code\r\n     * @param numberingSystem Optional numbering system\r\n     * @param calendar Optional calendar\r\n     */\r\n    defineDefaultLocale(\r\n        languageCode: string,\r\n        countryCode: string,\r\n        scriptCode?: string,\r\n        numberingSystem?: string,\r\n        calendar?: string\r\n    ): ILocaleConfigAPI;\r\n\r\n    /**\r\n     * Defines the currency to be used.\r\n     * @param defaultCurrency ISO 4217 three-letter code of the currency\r\n     */\r\n    defineCurrency(currencyCode: string): ILocaleConfigAPI;\r\n\r\n}\nexport class LocaleConfigAPI implements ILocaleConfigAPI {\n/**\n * @param {?} configuration\n */\nconstructor(private configuration: LocaleConfig) { }\n/**\n * @param {?} languageCode\n * @param {?=} textDirection\n * @return {?}\n */\npublic addLanguage(languageCode: string, textDirection: string = \"LTR\"): ILocaleConfigAPI {\r\n        this.configuration.languageCodes.push({ code: languageCode, direction: textDirection });\r\n        return this;\r\n    }\n/**\n * @param {?} languageCodes\n * @return {?}\n */\npublic addLanguages(languageCodes: string[]): ILocaleConfigAPI {\r\n        for (const /** @type {?} */ languageCode of languageCodes) {\r\n            this.configuration.languageCodes.push({ code: languageCode, direction: \"ltr\" });\r\n        }\r\n        return this;\r\n    }\n/**\n * @return {?}\n */\npublic disableStorage(): ILocaleConfigAPI {\r\n        this.configuration.storageIsDisabled = true;\r\n        return this;\r\n    }\n/**\n * @param {?=} days\n * @return {?}\n */\npublic setCookieExpiration(days?: number): ILocaleConfigAPI {\r\n        this.configuration.cookiesExpirationDays = days;\r\n        return this;\r\n    }\n/**\n * @return {?}\n */\npublic useLocalStorage(): ILocaleConfigAPI {\r\n        this.configuration.localStorage = true;\r\n        return this;\r\n    }\n/**\n * @return {?}\n */\npublic useSessionStorage(): ILocaleConfigAPI {\r\n        this.configuration.sessionStorage = true;\r\n        return this;\r\n    }\n/**\n * @param {?} languageCode\n * @return {?}\n */\npublic defineLanguage(languageCode: string): ILocaleConfigAPI {\r\n        this.configuration.languageCode = languageCode;\r\n        return this;\r\n    }\n/**\n * @param {?} languageCode\n * @param {?} countryCode\n * @param {?=} scriptCode\n * @param {?=} numberingSystem\n * @param {?=} calendar\n * @return {?}\n */\npublic defineDefaultLocale(\r\n        languageCode: string,\r\n        countryCode: string,\r\n        scriptCode?: string,\r\n        numberingSystem?: string,\r\n        calendar?: string\r\n    ): ILocaleConfigAPI {\r\n        this.configuration.languageCode = languageCode;\r\n        this.configuration.countryCode = countryCode;\r\n        this.configuration.scriptCode = scriptCode;\r\n        this.configuration.numberingSystem = numberingSystem;\r\n        this.configuration.calendar = calendar;\r\n        return this;\r\n    }\n/**\n * @param {?} currencyCode\n * @return {?}\n */\npublic defineCurrency(currencyCode: string): ILocaleConfigAPI {\r\n        this.configuration.currencyCode = currencyCode;\r\n        return this;\r\n    }\r\n\r\n}\n\nfunction LocaleConfigAPI_tsickle_Closure_declarations() {\n/** @type {?} */\nLocaleConfigAPI.prototype.configuration;\n}\n\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { LocaleCodes } from './locale-codes';\r\nimport { Language } from '../types';\r\n\r\nexport interface ILocaleConfig extends LocaleCodes {\r\n\r\n    languageCodes: Language[];\r\n\r\n    storageIsDisabled: boolean;\r\n    localStorage: boolean;\r\n    sessionStorage: boolean;\r\n    cookiesExpirationDays?: number;\r\n\r\n}\nexport class LocaleConfig implements ILocaleConfig {\npublic languageCode: string;\npublic scriptCode?: string;\npublic countryCode?: string;\npublic numberingSystem?: string;\npublic calendar?: string;\npublic currencyCode: string;\npublic languageCodes: Language[] = [];\npublic storageIsDisabled: boolean = false;\npublic localStorage: boolean = false;\npublic sessionStorage: boolean = false;\npublic cookiesExpirationDays?: number;\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LocaleConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nLocaleConfig.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocaleConfig.ctorParameters;\n/** @type {?} */\nLocaleConfig.prototype.languageCode;\n/** @type {?} */\nLocaleConfig.prototype.scriptCode;\n/** @type {?} */\nLocaleConfig.prototype.countryCode;\n/** @type {?} */\nLocaleConfig.prototype.numberingSystem;\n/** @type {?} */\nLocaleConfig.prototype.calendar;\n/** @type {?} */\nLocaleConfig.prototype.currencyCode;\n/** @type {?} */\nLocaleConfig.prototype.languageCodes;\n/** @type {?} */\nLocaleConfig.prototype.storageIsDisabled;\n/** @type {?} */\nLocaleConfig.prototype.localStorage;\n/** @type {?} */\nLocaleConfig.prototype.sessionStorage;\n/** @type {?} */\nLocaleConfig.prototype.cookiesExpirationDays;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Injector } from '@angular/core';\r\n\r\nimport { Type } from './types';\n/**\n * Allows to get the dependencies at the module level or component.\n */\nexport class InjectorRef {\nprivate static injector: Injector;\n/**\n * @template T\n * @param {?} token\n * @return {?}\n */\npublic static get<T>(token: Type<T>): T {\r\n        return this.injector.get(token);\r\n    }\n/**\n * @param {?} injector\n */\nconstructor(private injector: Injector) {\r\n        InjectorRef.injector = this.injector;\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Injector, },\n];\n}\n\nfunction InjectorRef_tsickle_Closure_declarations() {\n/** @type {?} */\nInjectorRef.injector;\n/** @type {?} */\nInjectorRef.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInjectorRef.ctorParameters;\n/** @type {?} */\nInjectorRef.prototype.injector;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["NgModule","Input","NG_VALIDATORS","forwardRef","Directive","Renderer2","ElementRef","Pipe","CurrencyPipe","PercentPipe","DecimalPipe","DatePipe","Injectable","Observable","ChangeDetectorRef","Output","EventEmitter","Http","Subject","Injector"],"mappings":"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"}