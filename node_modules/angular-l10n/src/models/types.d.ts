export declare type Language = {
    code: string;
    direction: string;
};
export declare type Provider = {
    args: any;
};
export declare type Decimal = {
    minusSign: string;
    decimalSeparator: string;
    thousandSeparator: string;
};
export declare enum LoadingMode {
    Direct = 0,
    Async = 1,
}
export declare enum ServiceState {
    isReady = 0,
    isLoading = 1,
    isWaiting = 2,
}
export interface PropertyDecorator {
    <T extends Function>(type: T): T;
    (target: Object, propertyKey?: string | symbol): void;
}
export interface Type<T> extends Function {
    new (...args: any[]): T;
}
export interface Token {
    localeStorage?: Type<any>;
    translationProvider?: Type<any>;
    translationHandler?: Type<any>;
}
